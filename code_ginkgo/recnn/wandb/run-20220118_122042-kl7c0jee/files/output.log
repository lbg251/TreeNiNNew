
100%|█████████████████████████████████████████████████████████████████████| 37/37 [00:20<00:00,  1.81it/s, loss=0.700]
- Train metrics: accuracy: 0.4951 ; loss: 0.7011
--------------------------------------------------------------------------------
subjets per level= [32, 64, 42, 14]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 4
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (42, 4)
TEST np.zeros((pad_dim,int(features)) (22, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (14, 4)
TEST np.zeros((pad_dim,int(features)) (50, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 46, 14]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 4
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
subjets per level= [32, 64, 36, 14, 4]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 5
--------------------------------------------------------------------------------
max_n_level= 64
max_n_level= 64
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
max_n_level and len(levels[i])= 64 64
TEST np.zeros((pad_dim,int(features)) (0, 4)
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (36, 4)
max_n_level and len(levels[i])= 64 64
TEST np.zeros((pad_dim,int(features)) (28, 4)
TEST contents[i].shape= (46, 4)
TEST np.zeros((pad_dim,int(features)) (18, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (14, 4)
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (14, 4)
TEST np.zeros((pad_dim,int(features)) (50, 4)
TEST np.zeros((pad_dim,int(features)) (50, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (4, 4)
TEST np.zeros((pad_dim,int(features)) (60, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 52, 8, 2]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 5
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (52, 4)
TEST np.zeros((pad_dim,int(features)) (12, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (8, 4)
--------------------------------------------------------------------------------
TEST np.zeros((pad_dim,int(features)) (56, 4)
subjets per level= [32, 64, 48, 8, 2]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 5
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
--------------------------------------------------------------------------------
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (2, 4)
subjets per level= [32, 64, 38, 6]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 4
--------------------------------------------------------------------------------
TEST np.zeros((padmax_n_level= 64
_dim,int(features)) (62, 4)
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
max_n_level= 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
max_n_level and len(levels[i])= 64 64
TEST np.zeros((pad_dim,int(features)) (0, 4)
TEST contents[i].shape= (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
TEST np.zeros((pad_dim,int(features)) (32, 4)
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (38, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
TEST np.zeros((pad_dim,int(features)) (26, 4)
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
TEST np.zeros((pad_dim,int(features)) (0, 4)
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (6, 4)
TEST np.zeros((pad_dim,int(features)) (58, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (48, 4)
TEST np.zeros((pad_dim,int(features)) (16, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (8, 4)
TEST np.zeros((pad_dim,int(features)) (56, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (2, 4)
TEST np.zeros((pad_dim,int(features)) (62, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 46, 18, 2]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 5
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (46, 4)
TEST np.zeros((pad_dim,int(features)) (18, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (18, 4)
TEST np.zeros((pad_dim,int(features)) (46, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (2, 4)
TEST np.zeros((pad_dim,int(features)) (62, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 36, 8]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 4
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (36, 4)
TEST np.zeros((pad_dim,int(features)) (28, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (8, 4)
TEST np.zeros((pad_dim,int(features)) (56, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 40, 8]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 4
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (40, 4)
TEST np.zeros((pad_dim,int(features)) (24, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (8, 4)
TEST np.zeros((pad_dim,int(features)) (56, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 44, 6, 2]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 5
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (44, 4)
TEST np.zeros((pad_dim,int(features)) (20, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (6, 4)
TEST np.zeros((pad_dim,int(features)) (58, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (2, 4)
TEST np.zeros((pad_dim,int(features)) (62, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 58, 22]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 4
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (58, 4)
TEST np.zeros((pad_dim,int(features)) (6, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (22, 4)
TEST np.zeros((pad_dim,int(features)) (42, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 48, 10]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 4
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (48, 4)
TEST np.zeros((pad_dim,int(features)) (16, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (10, 4)
TEST np.zeros((pad_dim,int(features)) (54, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 50, 12]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 4
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (50, 4)
TEST np.zeros((pad_dim,int(features)) (14, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (12, 4)
TEST np.zeros((pad_dim,int(features)) (52, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 44, 24]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 4
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (44, 4)
TEST np.zeros((pad_dim,int(features)) (20, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (24, 4)
TEST np.zeros((pad_dim,int(features)) (40, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 32, 8, 2]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 5
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (8, 4)
TEST np.zeros((pad_dim,int(features)) (56, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (2, 4)
TEST np.zeros((pad_dim,int(features)) (62, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 40, 12]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 4
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (40, 4)
TEST np.zeros((pad_dim,int(features)) (24, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (12, 4)
TEST np.zeros((pad_dim,int(features)) (52, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 42, 12, 6]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 5
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (42, 4)
TEST np.zeros((pad_dim,int(features)) (22, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (12, 4)
TEST np.zeros((pad_dim,int(features)) (52, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (6, 4)
TEST np.zeros((pad_dim,int(features)) (58, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 34, 4, 4]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 5
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (34, 4)
TEST np.zeros((pad_dim,int(features)) (30, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (4, 4)
TEST np.zeros((pad_dim,int(features)) (60, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (4, 4)
TEST np.zeros((pad_dim,int(features)) (60, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 36, 2]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 4
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (36, 4)
TEST np.zeros((pad_dim,int(features)) (28, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (2, 4)
TEST np.zeros((pad_dim,int(features)) (62, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 42, 18, 4]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 5
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (42, 4)
TEST np.zeros((pad_dim,int(features)) (22, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (18, 4)
TEST np.zeros((pad_dim,int(features)) (46, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (4, 4)
TEST np.zeros((pad_dim,int(features)) (60, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 40, 10, 2]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 5
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (40, 4)
TEST np.zeros((pad_dim,int(features)) (24, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (10, 4)
TEST np.zeros((pad_dim,int(features)) (54, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (2, 4)
TEST np.zeros((pad_dim,int(features)) (62, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 42, 6]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 4
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (42, 4)
TEST np.zeros((pad_dim,int(features)) (22, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (6, 4)
TEST np.zeros((pad_dim,int(features)) (58, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 46, 12]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 4
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (46, 4)
TEST np.zeros((pad_dim,int(features)) (18, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (12, 4)
TEST np.zeros((pad_dim,int(features)) (52, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 32, 8, 2]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 5
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (8, 4)
TEST np.zeros((pad_dim,int(features)) (56, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (2, 4)
TEST np.zeros((pad_dim,int(features)) (62, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 40, 14, 4]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 5
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (40, 4)
TEST np.zeros((pad_dim,int(features)) (24, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (14, 4)
TEST np.zeros((pad_dim,int(features)) (50, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (4, 4)
TEST np.zeros((pad_dim,int(features)) (60, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 48, 10, 4]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 5
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (48, 4)
TEST np.zeros((pad_dim,int(features)) (16, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (10, 4)
TEST np.zeros((pad_dim,int(features)) (54, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (4, 4)
TEST np.zeros((pad_dim,int(features)) (60, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 44, 8, 4]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 5
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (44, 4)
TEST np.zeros((pad_dim,int(features)) (20, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (8, 4)
TEST np.zeros((pad_dim,int(features)) (56, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (4, 4)
TEST np.zeros((pad_dim,int(features)) (60, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 44, 10]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 4
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (44, 4)
TEST np.zeros((pad_dim,int(features)) (20, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (10, 4)
TEST np.zeros((pad_dim,int(features)) (54, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 40, 12, 4]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 5
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (40, 4)
TEST np.zeros((pad_dim,int(features)) (24, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (12, 4)
TEST np.zeros((pad_dim,int(features)) (52, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (4, 4)
TEST np.zeros((pad_dim,int(features)) (60, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 50, 12, 2]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 5
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (50, 4)
TEST np.zeros((pad_dim,int(features)) (14, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (12, 4)
TEST np.zeros((pad_dim,int(features)) (52, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (2, 4)
TEST np.zeros((pad_dim,int(features)) (62, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 46, 12, 4]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 5
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (46, 4)
TEST np.zeros((pad_dim,int(features)) (18, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (12, 4)
TEST np.zeros((pad_dim,int(features)) (52, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (4, 4)
TEST np.zeros((pad_dim,int(features)) (60, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 48, 20, 8, 2]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 6
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (48, 4)
TEST np.zeros((pad_dim,int(features)) (16, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (20, 4)
TEST np.zeros((pad_dim,int(features)) (44, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (8, 4)
TEST np.zeros((pad_dim,int(features)) (56, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (2, 4)
TEST np.zeros((pad_dim,int(features)) (62, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 44, 10, 2, 2]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 6
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (44, 4)
TEST np.zeros((pad_dim,int(features)) (20, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (10, 4)
TEST np.zeros((pad_dim,int(features)) (54, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (2, 4)
TEST np.zeros((pad_dim,int(features)) (62, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (2, 4)
TEST np.zeros((pad_dim,int(features)) (62, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 44, 10]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 4
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (44, 4)
TEST np.zeros((pad_dim,int(features)) (20, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (10, 4)
TEST np.zeros((pad_dim,int(features)) (54, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 46, 12]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 4
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (46, 4)
TEST np.zeros((pad_dim,int(features)) (18, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (12, 4)
TEST np.zeros((pad_dim,int(features)) (52, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 46, 12, 2]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 5
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (46, 4)
TEST np.zeros((pad_dim,int(features)) (18, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (12, 4)
TEST np.zeros((pad_dim,int(features)) (52, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (2, 4)
TEST np.zeros((pad_dim,int(features)) (62, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 34, 4]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 4
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (34, 4)
TEST np.zeros((pad_dim,int(features)) (30, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (4, 4)
TEST np.zeros((pad_dim,int(features)) (60, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 42, 12]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 4
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
subjets per level= [32, 64, 44, 6, 2]
max_n_level= 64
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 5
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level= 64
--------------------------------------------------------------------------------
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
TEST np.zeros((pad_dim,int(features)) (32, 4)
max_n_level and len(levels[i])= 64 64
////////////////////////////////////////////////////////////////////////////////////////////////////
TEST contents[i].shape= (32, 4)
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (42, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
TEST np.zeros((pad_dim,int(features)) (22, 4)
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (44, 4)
TEST contents[i].shape= (12, 4)
TEST np.zeros((pad_dim,int(features)) (20, 4)
TEST np.zeros((pad_dim,int(features)) (52, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (6, 4)
TEST np.zeros((pad_dim,int(features)) (58, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (2, 4)
TEST np.zeros((pad_dim,int(features)) (62, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 48, 14, 2]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 5
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (48, 4)
TEST np.zeros((pad_dim,int(features)) (16, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (14, 4)
TEST np.zeros((pad_dim,int(features)) (50, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (2, 4)
TEST np.zeros((pad_dim,int(features)) (62, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 44, 6, 2]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 5
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (44, 4)
TEST np.zeros((pad_dim,int(features)) (20, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (6, 4)
TEST np.zeros((pad_dim,int(features)) (58, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (2, 4)
TEST np.zeros((pad_dim,int(features)) (62, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 46, 16, 4, 4]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 6
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
--------------------------------------------------------------------------------
TEST contents[i].shape= (46, 4)
subjets per level= [32, 64, 44, 10]
TEST np.zeros((pad_dim,int(features)) (18, 4)
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 4
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (16, 4)
max_n_level= 64
--------------------------------------------------------------------------------
TEST np.zeros((pad_dim,int(features)) (48, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
////////////////////////////////////////////////////////////////////////////////////////////////////
TEST contents[i].shape= (32, 4)
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (4, 4)
TEST np.zeros((pad_dim,int(features)) (60, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (4, 4)
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (60, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (44, 4)
TEST np.zeros((pad_dim,int(features)) (20, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
train.py:220: RuntimeWarning: divide by zero encountered in true_divide
  inv_fpr = interp(base_tpr, tpr, 1. / fpr)[125]
- Eval metrics : accuracy: 0.4922 ; loss: 0.7042
- Found new best bg rejection = 3.25
Epoch 2/30
  0%|                                                                                          | 0/37 [00:00<?, ?it/s]
TEST np.zeros((pad_dim,int(features)) (54, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 36, 10, 2, 2]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 6
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (36, 4)
TEST np.zeros((pad_dim,int(features)) (28, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (10, 4)
TEST np.zeros((pad_dim,int(features)) (54, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (2, 4)
TEST np.zeros((pad_dim,int(features)) (62, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (2, 4)
TEST np.zeros((pad_dim,int(features)) (62, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 48, 8]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 4
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (48, 4)
TEST np.zeros((pad_dim,int(features)) (16, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (8, 4)
TEST np.zeros((pad_dim,int(features)) (56, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 60, 18]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 4
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (60, 4)
TEST np.zeros((pad_dim,int(features)) (4, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (18, 4)
TEST np.zeros((pad_dim,int(features)) (46, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 50, 12, 2]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 5
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (50, 4)
TEST np.zeros((pad_dim,int(features)) (14, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (12, 4)
TEST np.zeros((pad_dim,int(features)) (52, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (2, 4)
TEST np.zeros((pad_dim,int(features)) (62, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 44, 8]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 4
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (44, 4)
TEST np.zeros((pad_dim,int(features)) (20, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (8, 4)
TEST np.zeros((pad_dim,int(features)) (56, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 50, 10]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 4
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (50, 4)
TEST np.zeros((pad_dim,int(features)) (14, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (10, 4)
TEST np.zeros((pad_dim,int(features)) (54, 4)
100%|█████████████████████████████████████████████████████████████████████| 37/37 [00:17<00:00,  2.09it/s, loss=0.694]
- Train metrics: accuracy: 0.5214 ; loss: 0.6944
--------------------------------------------------------------------------------
subjets per level= [32, 64, 36, 14, 4]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 5
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
subjets per level= [32, 64, 46, 14]
--------------------------------------------------------------------------------
TEST contents[i].shape= (64, 4)
--------------------------------------------------------------------------------
Number of levels= 4
TEST np.zeros((pad_dim,int(features)) (0, 4)
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (36, 4)
TEST np.zeros((pad_dim,int(features)) (28, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (14, 4)
TEST np.zeros((pad_dim,int(features)) (50, 4)
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (4, 4)
max_n_level and len(levels[i])= 64 64
TEST np.zeros((pad_dim,int(features)) (60, 4)
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (46, 4)
TEST np.zeros((pad_dim,int(features)) (18, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (14, 4)
TEST np.zeros((pad_dim,int(features)) (50, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 42, 14]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 4
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (42, 4)
TEST np.zeros((pad_dim,int(features)) (22, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (14, 4)
TEST np.zeros((pad_dim,int(features)) (50, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 48, 8, 2]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 5
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (48, 4)
TEST np.zeros((pad_dim,int(features)) (16, 4)
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
subjets per level= [32, 64, 52, 8, 2]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 5
--------------------------------------------------------------------------------
subjets per level= [32, 64, 38, 6]
////////////////////////////////////////////////////////////////////////////////////////////////////
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
max_n_level and len(levels[i])= 64 64
Number of levels= 4
--------------------------------------------------------------------------------
TEST contents[i].shape= (8, 4)
TEST np.zeros((pad_dim,int(features)) (56, 4)
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (2, 4)
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
TEST np.zeros((pad_dim,int(features)) (62, 4)
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (52, 4)
TEST np.zeros((pad_dim,int(features)) (12, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (8, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
TEST np.zeros((pad_dim,int(features)) (56, 4)
max_n_level and len(levels[i])= 64 64
////////////////////////////////////////////////////////////////////////////////////////////////////
TEST contents[i].shape= (64, 4)
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (2, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
TEST np.zeros((pad_dim,int(features)) (62, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (38, 4)
TEST np.zeros((pad_dim,int(features)) (26, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (6, 4)
TEST np.zeros((pad_dim,int(features)) (58, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 46, 18, 2]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 5
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (46, 4)
TEST np.zeros((pad_dim,int(features)) (18, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (18, 4)
TEST np.zeros((pad_dim,int(features)) (46, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (2, 4)
TEST np.zeros((pad_dim,int(features)) (62, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 36, 8]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 4
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (36, 4)
TEST np.zeros((pad_dim,int(features)) (28, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (8, 4)
TEST np.zeros((pad_dim,int(features)) (56, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 40, 8]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 4
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (40, 4)
TEST np.zeros((pad_dim,int(features)) (24, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (8, 4)
TEST np.zeros((pad_dim,int(features)) (56, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 44, 6, 2]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 5
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (44, 4)
TEST np.zeros((pad_dim,int(features)) (20, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (6, 4)
TEST np.zeros((pad_dim,int(features)) (58, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (2, 4)
TEST np.zeros((pad_dim,int(features)) (62, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 58, 22]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 4
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (58, 4)
TEST np.zeros((pad_dim,int(features)) (6, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (22, 4)
TEST np.zeros((pad_dim,int(features)) (42, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 48, 10]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 4
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (48, 4)
TEST np.zeros((pad_dim,int(features)) (16, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (10, 4)
TEST np.zeros((pad_dim,int(features)) (54, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 50, 12]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 4
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (50, 4)
TEST np.zeros((pad_dim,int(features)) (14, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (12, 4)
TEST np.zeros((pad_dim,int(features)) (52, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 44, 24]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 4
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (44, 4)
TEST np.zeros((pad_dim,int(features)) (20, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (24, 4)
TEST np.zeros((pad_dim,int(features)) (40, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 32, 8, 2]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 5
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (8, 4)
TEST np.zeros((pad_dim,int(features)) (56, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (2, 4)
TEST np.zeros((pad_dim,int(features)) (62, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 40, 12]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 4
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (40, 4)
TEST np.zeros((pad_dim,int(features)) (24, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (12, 4)
TEST np.zeros((pad_dim,int(features)) (52, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 42, 12, 6]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 5
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (42, 4)
TEST np.zeros((pad_dim,int(features)) (22, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (12, 4)
TEST np.zeros((pad_dim,int(features)) (52, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (6, 4)
TEST np.zeros((pad_dim,int(features)) (58, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 34, 4, 4]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 5
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (34, 4)
TEST np.zeros((pad_dim,int(features)) (30, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (4, 4)
TEST np.zeros((pad_dim,int(features)) (60, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (4, 4)
TEST np.zeros((pad_dim,int(features)) (60, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 36, 2]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 4
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (36, 4)
TEST np.zeros((pad_dim,int(features)) (28, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (2, 4)
TEST np.zeros((pad_dim,int(features)) (62, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 42, 18, 4]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 5
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (42, 4)
TEST np.zeros((pad_dim,int(features)) (22, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (18, 4)
TEST np.zeros((pad_dim,int(features)) (46, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (4, 4)
TEST np.zeros((pad_dim,int(features)) (60, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 40, 10, 2]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 5
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (40, 4)
TEST np.zeros((pad_dim,int(features)) (24, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (10, 4)
TEST np.zeros((pad_dim,int(features)) (54, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (2, 4)
TEST np.zeros((pad_dim,int(features)) (62, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 42, 6]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 4
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (42, 4)
TEST np.zeros((pad_dim,int(features)) (22, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (6, 4)
TEST np.zeros((pad_dim,int(features)) (58, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 46, 12]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 4
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (46, 4)
TEST np.zeros((pad_dim,int(features)) (18, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (12, 4)
TEST np.zeros((pad_dim,int(features)) (52, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 32, 8, 2]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 5
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (8, 4)
TEST np.zeros((pad_dim,int(features)) (56, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (2, 4)
TEST np.zeros((pad_dim,int(features)) (62, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 40, 14, 4]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 5
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (40, 4)
TEST np.zeros((pad_dim,int(features)) (24, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (14, 4)
TEST np.zeros((pad_dim,int(features)) (50, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (4, 4)
TEST np.zeros((pad_dim,int(features)) (60, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 48, 10, 4]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 5
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (48, 4)
TEST np.zeros((pad_dim,int(features)) (16, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (10, 4)
TEST np.zeros((pad_dim,int(features)) (54, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (4, 4)
TEST np.zeros((pad_dim,int(features)) (60, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 44, 8, 4]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 5
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (44, 4)
TEST np.zeros((pad_dim,int(features)) (20, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (8, 4)
TEST np.zeros((pad_dim,int(features)) (56, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (4, 4)
TEST np.zeros((pad_dim,int(features)) (60, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 44, 10]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 4
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (44, 4)
TEST np.zeros((pad_dim,int(features)) (20, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (10, 4)
TEST np.zeros((pad_dim,int(features)) (54, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 40, 12, 4]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 5
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (40, 4)
TEST np.zeros((pad_dim,int(features)) (24, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (12, 4)
TEST np.zeros((pad_dim,int(features)) (52, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (4, 4)
TEST np.zeros((pad_dim,int(features)) (60, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 50, 12, 2]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 5
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (50, 4)
TEST np.zeros((pad_dim,int(features)) (14, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (12, 4)
TEST np.zeros((pad_dim,int(features)) (52, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (2, 4)
TEST np.zeros((pad_dim,int(features)) (62, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 46, 12, 4]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 5
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (46, 4)
TEST np.zeros((pad_dim,int(features)) (18, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (12, 4)
TEST np.zeros((pad_dim,int(features)) (52, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (4, 4)
TEST np.zeros((pad_dim,int(features)) (60, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 48, 20, 8, 2]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 6
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (48, 4)
TEST np.zeros((pad_dim,int(features)) (16, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (20, 4)
TEST np.zeros((pad_dim,int(features)) (44, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (8, 4)
TEST np.zeros((pad_dim,int(features)) (56, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (2, 4)
TEST np.zeros((pad_dim,int(features)) (62, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 44, 10, 2, 2]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 6
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (44, 4)
TEST np.zeros((pad_dim,int(features)) (20, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (10, 4)
TEST np.zeros((pad_dim,int(features)) (54, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (2, 4)
TEST np.zeros((pad_dim,int(features)) (62, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (2, 4)
TEST np.zeros((pad_dim,int(features)) (62, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 44, 10]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 4
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (44, 4)
TEST np.zeros((pad_dim,int(features)) (20, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (10, 4)
TEST np.zeros((pad_dim,int(features)) (54, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 46, 12]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 4
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (46, 4)
TEST np.zeros((pad_dim,int(features)) (18, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (12, 4)
TEST np.zeros((pad_dim,int(features)) (52, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 46, 12, 2]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 5
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (46, 4)
TEST np.zeros((pad_dim,int(features)) (18, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (12, 4)
TEST np.zeros((pad_dim,int(features)) (52, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (2, 4)
TEST np.zeros((pad_dim,int(features)) (62, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 34, 4]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 4
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (34, 4)
TEST np.zeros((pad_dim,int(features)) (30, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (4, 4)
TEST np.zeros((pad_dim,int(features)) (60, 4)
train.py:220: RuntimeWarning: divide by zero encountered in true_divide
  inv_fpr = interp(base_tpr, tpr, 1. / fpr)[125]
- Eval metrics : accuracy: 0.4974 ; loss: 0.7021
--------------------------------------------------------------------------------
subjets per level= [32, 64, 48, 14, 2]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 5
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
max_n_level= 64
subjets per level= [32, 64, 42, 12]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 4
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST np.zeros((pad_dim,int(features)) (32, 4)
TEST contents[i].shape= (48, 4)
TEST np.zeros((pad_dim,int(features)) (16, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TES////////////////////////////////////////////////////////////////////////////////////////////////////
T contents[i].shape= (14, 4)
TEST np.zeros((pad_dim,int(features)) (50, 4)
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (2, 4)
TEST np.zeros((pad_dim,int(features)) (62, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (42, 4)
TEST np.zeros((pad_dim,int(features)) (22, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (12, 4)
TEST np.zeros((pad_dim,int(features)) (52, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 44, 6, 2]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 5
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (44, 4)
TEST np.zeros((pad_dim,int(features)) (20, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (6, 4)
TEST np.zeros((pad_dim,int(features)) (58, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (2, 4)
TEST np.zeros((pad_dim,int(features)) (62, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 44, 6, 2]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 5
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (44, 4)
TEST--------------------------------------------------------------------------------
 np.zeros((pad_dim,int(features)) (20, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 46, 16, 4, 4]
--------------------------------------------------------------------------------
subjets per level= [32, 64, 44, 10]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 6
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 4
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (6, 4)
max_n_level= 64
-------------TEST np.zeros((pad_dim,int(features)) (58, 4)
-------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST contents[i].shape= (2, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
TEST np.zeros((pad_dim,int(features)) (62, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (46, 4)
TEST np.zeros((pad_dim,int(features)) (18, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (44, 4)
TEST contents[i].shape= (16, 4)
TEST np.zeros((pad_dim,int(features)) (48, 4)
TEST np.zeros((pad_dim,int(features)) (20, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (4, 4)
TEST np.zeros((pad_dim,int(features)) (60, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (10, 4)
TEST np.zeros((pad_dim,int(features)) (54, 4)
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (4, 4)
TEST np.zeros((pad_dim,int(features)) (60, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 36, 10, 2, 2]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 6
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (36, 4)
TEST np.zeros((pad_dim,int(features)) (28, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (10, 4)
TEST np.zeros((pad_dim,int(features)) (54, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (2, 4)
TEST np.zeros((pad_dim,int(features)) (62, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (2, 4)
TEST np.zeros((pad_dim,int(features)) (62, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 48, 8]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 4
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (48, 4)
TEST np.zeros((pad_dim,int(features)) (16, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (8, 4)
TEST np.zeros((pad_dim,int(features)) (56, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 60, 18]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 4
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (60, 4)
TEST np.zeros((pad_dim,int(features)) (4, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (18, 4)
TEST np.zeros((pad_dim,int(features)) (46, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 50, 12, 2]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 5
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (50, 4)
TEST np.zeros((pad_dim,int(features)) (14, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (12, 4)
TEST np.zeros((pad_dim,int(features)) (52, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (2, 4)
TEST np.zeros((pad_dim,int(features)) (62, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 44, 8]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 4
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (44, 4)
TEST np.zeros((pad_dim,int(features)) (20, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (8, 4)
TEST np.zeros((pad_dim,int(features)) (56, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 50, 10]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 4
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (50, 4)
TEST np.zeros((pad_dim,int(features)) (14, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (10, 4)
TEST np.zeros((pad_dim,int(features)) (54, 4)
Checkpoint Directory exists!
- Found new best bg rejection = 3.3620689655172415
Epoch 3/30
100%|█████████████████████████████████████████████████████████████████████| 37/37 [00:17<00:00,  2.14it/s, loss=0.691]
- Train metrics: accuracy: 0.5312 ; loss: 0.6912
--------------------------------------------------------------------------------
subjets per level= [32, 64, 36, 14, 4]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 5
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (36, 4)
TEST np.zeros((pad_dim,int(features)) (28, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (14, 4)
TEST np.zeros((pad_dim,int(features)) (50, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (4, 4)
TEST np.zeros((pad_dim,int(features)) (60, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 46, 14]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 4
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (46, 4)
TEST np.zeros((pad_dim,int(features)) (18, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (14, 4)
TEST np.zeros((pad_dim,int(features)) (50, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 42, 14]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 4
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (42, 4)
TEST np.zeros((pad_dim,int(features)) (22, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (14, 4)
TEST np.zeros((pad_dim,int(features)) (50, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 48, 8, 2]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 5
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
--------------------------------------------------------------------------------
subjets per level= [32, 64, 52, 8, 2]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 5
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (52, 4)
TEST np.zeros((pad_dim,int(features)) (12, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (8, 4)
TEST np.zeros((pad_dim,int(features)) (56, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (2, 4)
TEST np.zeros((pad_dim,int(features)) (62, 4)
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (48, 4)
TEST np.zeros((pad_dim,int(features)) (16, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (8, 4)
TEST np.zeros((pad_dim,int(features)) (56, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (2, 4)
TEST np.zeros((pad_dim,int(features)) (62, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 38, 6]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 4
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (38, 4)
TEST np.zeros((pad_dim,int(features)) (26, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (6, 4)
TEST np.zeros((pad_dim,int(features)) (58, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 46, 18, 2]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 5
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (46, 4)
TEST np.zeros((pad_dim,int(features)) (18, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (18, 4)
TEST np.zeros((pad_dim,int(features)) (46, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (2, 4)
TEST np.zeros((pad_dim,int(features)) (62, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 36, 8]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 4
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (36, 4)
TEST np.zeros((pad_dim,int(features)) (28, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (8, 4)
TEST np.zeros((pad_dim,int(features)) (56, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 40, 8]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 4
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (40, 4)
TEST np.zeros((pad_dim,int(features)) (24, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (8, 4)
TEST np.zeros((pad_dim,int(features)) (56, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 44, 6, 2]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 5
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (44, 4)
TEST np.zeros((pad_dim,int(features)) (20, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (6, 4)
TEST np.zeros((pad_dim,int(features)) (58, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (2, 4)
TEST np.zeros((pad_dim,int(features)) (62, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 58, 22]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 4
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (58, 4)
TEST np.zeros((pad_dim,int(features)) (6, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (22, 4)
TEST np.zeros((pad_dim,int(features)) (42, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 48, 10]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 4
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (48, 4)
TEST np.zeros((pad_dim,int(features)) (16, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (10, 4)
TEST np.zeros((pad_dim,int(features)) (54, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 50, 12]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 4
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (50, 4)
TEST np.zeros((pad_dim,int(features)) (14, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (12, 4)
TEST np.zeros((pad_dim,int(features)) (52, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 44, 24]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 4
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (44, 4)
TEST np.zeros((pad_dim,int(features)) (20, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (24, 4)
TEST np.zeros((pad_dim,int(features)) (40, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 32, 8, 2]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 5
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (8, 4)
TEST np.zeros((pad_dim,int(features)) (56, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (2, 4)
TEST np.zeros((pad_dim,int(features)) (62, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 40, 12]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 4
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (40, 4)
TEST np.zeros((pad_dim,int(features)) (24, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (12, 4)
TEST np.zeros((pad_dim,int(features)) (52, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 42, 12, 6]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 5
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (42, 4)
TEST np.zeros((pad_dim,int(features)) (22, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (12, 4)
TEST np.zeros((pad_dim,int(features)) (52, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (6, 4)
TEST np.zeros((pad_dim,int(features)) (58, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 34, 4, 4]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 5
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (34, 4)
TEST np.zeros((pad_dim,int(features)) (30, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (4, 4)
TEST np.zeros((pad_dim,int(features)) (60, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (4, 4)
TEST np.zeros((pad_dim,int(features)) (60, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 36, 2]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 4
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (36, 4)
TEST np.zeros((pad_dim,int(features)) (28, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (2, 4)
TEST np.zeros((pad_dim,int(features)) (62, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 42, 18, 4]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 5
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (42, 4)
TEST np.zeros((pad_dim,int(features)) (22, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (18, 4)
TEST np.zeros((pad_dim,int(features)) (46, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (4, 4)
TEST np.zeros((pad_dim,int(features)) (60, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 40, 10, 2]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 5
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (40, 4)
TEST np.zeros((pad_dim,int(features)) (24, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (10, 4)
TEST np.zeros((pad_dim,int(features)) (54, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (2, 4)
TEST np.zeros((pad_dim,int(features)) (62, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 42, 6]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 4
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (42, 4)
TEST np.zeros((pad_dim,int(features)) (22, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (6, 4)
TEST np.zeros((pad_dim,int(features)) (58, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 46, 12]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 4
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (46, 4)
TEST np.zeros((pad_dim,int(features)) (18, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (12, 4)
TEST np.zeros((pad_dim,int(features)) (52, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 32, 8, 2]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 5
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (8, 4)
TEST np.zeros((pad_dim,int(features)) (56, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (2, 4)
TEST np.zeros((pad_dim,int(features)) (62, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 40, 14, 4]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 5
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (40, 4)
TEST np.zeros((pad_dim,int(features)) (24, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (14, 4)
TEST np.zeros((pad_dim,int(features)) (50, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (4, 4)
TEST np.zeros((pad_dim,int(features)) (60, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 48, 10, 4]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 5
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (48, 4)
TEST np.zeros((pad_dim,int(features)) (16, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (10, 4)
TEST np.zeros((pad_dim,int(features)) (54, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (4, 4)
TEST np.zeros((pad_dim,int(features)) (60, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 44, 8, 4]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 5
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (44, 4)
TEST np.zeros((pad_dim,int(features)) (20, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (8, 4)
TEST np.zeros((pad_dim,int(features)) (56, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (4, 4)
TEST np.zeros((pad_dim,int(features)) (60, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 44, 10]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 4
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (44, 4)
TEST np.zeros((pad_dim,int(features)) (20, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (10, 4)
TEST np.zeros((pad_dim,int(features)) (54, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 40, 12, 4]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 5
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (40, 4)
TEST np.zeros((pad_dim,int(features)) (24, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (12, 4)
TEST np.zeros((pad_dim,int(features)) (52, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (4, 4)
TEST np.zeros((pad_dim,int(features)) (60, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 50, 12, 2]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 5
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (50, 4)
TEST np.zeros((pad_dim,int(features)) (14, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (12, 4)
TEST np.zeros((pad_dim,int(features)) (52, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (2, 4)
TEST np.zeros((pad_dim,int(features)) (62, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 46, 12, 4]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 5
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (46, 4)
TEST np.zeros((pad_dim,int(features)) (18, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (12, 4)
TEST np.zeros((pad_dim,int(features)) (52, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (4, 4)
TEST np.zeros((pad_dim,int(features)) (60, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 48, 20, 8, 2]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 6
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (48, 4)
TEST np.zeros((pad_dim,int(features)) (16, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (20, 4)
TEST np.zeros((pad_dim,int(features)) (44, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (8, 4)
TEST np.zeros((pad_dim,int(features)) (56, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (2, 4)
TEST np.zeros((pad_dim,int(features)) (62, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 44, 10, 2, 2]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 6
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (44, 4)
TEST np.zeros((pad_dim,int(features)) (20, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (10, 4)
TEST np.zeros((pad_dim,int(features)) (54, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (2, 4)
TEST np.zeros((pad_dim,int(features)) (62, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (2, 4)
TEST np.zeros((pad_dim,int(features)) (62, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 44, 10]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 4
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (44, 4)
TEST np.zeros((pad_dim,int(features)) (20, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (10, 4)
TEST np.zeros((pad_dim,int(features)) (54, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 46, 12]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 4
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (46, 4)
TEST np.zeros((pad_dim,int(features)) (18, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (12, 4)
TEST np.zeros((pad_dim,int(features)) (52, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 46, 12, 2]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 5
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (46, 4)
TEST np.zeros((pad_dim,int(features)) (18, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (12, 4)
TEST np.zeros((pad_dim,int(features)) (52, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (2, 4)
TEST np.zeros((pad_dim,int(features)) (62, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 34, 4]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 4
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (34, 4)
TEST np.zeros((pad_dim,int(features)) (30, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (4, 4)
TEST np.zeros((pad_dim,int(features)) (60, 4)
train.py:220: RuntimeWarning: divide by zero encountered in true_divide
  inv_fpr = interp(base_tpr, tpr, 1. / fpr)[125]
- Eval metrics : accuracy: 0.5026 ; loss: 0.6979
--------------------------------------------------------------------------------
subjets per level= [32, 64, 48, 14, 2]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 5
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (48, 4)
TEST np.zeros((pad_dim,int(features)) (16, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (14, 4)
TEST np.zeros((pad_dim,int(features)) (50, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (2, 4)
TEST np.zeros((pad_dim,int(features)) (62, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 44, 6, 2]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 5
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (44, 4)
TEST np.zeros((pad_dim,int(features)) (20, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (6, 4)
TEST np.zeros((pad_dim,int(features)) (58, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (2, 4)
TEST np.zeros((pad_dim,int(features)) (62, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 42, 12]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 4
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (42, 4)
TEST np.zeros((pad_dim,int(features)) (22, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (12, 4)
TEST np.zeros((pad_dim,int(features)) (52, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 44, 6, 2]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 5
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (44, 4)
TEST np.zeros((pad_dim,int(features)) (20, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
--------------------------------------------------------------------------------
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (6, 4)
subjets per level= [32, 64, 46, 16, 4, 4]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 6
--------------------------------------------------------------------------------
TEST np.zeros((pad_dim,int(features)) (58, 4)
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
subjets per level= [32, 64, 44, 10]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 4
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level= 64
--------------------------------------------------------------------------------
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (2, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST np.zeros((pad_dim,int(features)) (62, 4)
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST contents[i].shape= (46, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
TEST np.zeros((pad_dim,int(features)) (18, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (16, 4)
TEST contents[i].shape= (44, 4)
TEST np.zeros((pad_dim,int(features)) (48, 4)
TEST np.zeros((pad_dim,int(features)) (20, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (10, 4)
TEST contents[i].shape= (4, 4)
TEST np.zeros((pad_dim,int(features)) (54, 4)
TEST np.zeros((pad_dim,int(features)) (60, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (4, 4)
TEST np.zeros((pad_dim,int(features)) (60, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 36, 10, 2, 2]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 6
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (36, 4)
TEST np.zeros((pad_dim,int(features)) (28, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (10, 4)
TEST np.zeros((pad_dim,int(features)) (54, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (2, 4)
TEST np.zeros((pad_dim,int(features)) (62, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (2, 4)
TEST np.zeros((pad_dim,int(features)) (62, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 48, 8]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 4
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (48, 4)
TEST np.zeros((pad_dim,int(features)) (16, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (8, 4)
TEST np.zeros((pad_dim,int(features)) (56, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 60, 18]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 4
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (60, 4)
TEST np.zeros((pad_dim,int(features)) (4, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (18, 4)
TEST np.zeros((pad_dim,int(features)) (46, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 50, 12, 2]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 5
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (50, 4)
TEST np.zeros((pad_dim,int(features)) (14, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (12, 4)
TEST np.zeros((pad_dim,int(features)) (52, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (2, 4)
TEST np.zeros((pad_dim,int(features)) (62, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 44, 8]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 4
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (44, 4)
TEST np.zeros((pad_dim,int(features)) (20, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (8, 4)
TEST np.zeros((pad_dim,int(features)) (56, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 50, 10]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 4
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (50, 4)
TEST np.zeros((pad_dim,int(features)) (14, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (10, 4)
TEST np.zeros((pad_dim,int(features)) (54, 4)
Checkpoint Directory exists!
- Found new best bg rejection = 3.8235294117647056
Epoch 4/30

 73%|██████████████████████████████████████████████████▎                  | 27/37 [00:17<00:03,  2.58it/s, loss=0.690]
--------------------------------------------------------------------------------
subjets per level= [32, 64, 36, 14, 4]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 5
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (36, 4)
TEST np.zeros((pad_dim,int(features)) (28, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (14, 4)
TEST np.zeros((pad_dim,int(features)) (50, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (4, 4)
TEST np.zeros((pad_dim,int(features)) (60, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 46, 14]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 4
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (46, 4)
TEST np.zeros((pad_dim,int(features)) (18, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (14, 4)
TEST np.zeros((pad_dim,int(features)) (50, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 42, 14]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 4
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (42, 4)
TEST np.zeros((pad_dim,int(features)) (22, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (14, 4)
TEST np.zeros((pad_dim,int(features)) (50, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 38, 6]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 4
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
subjets per level= [32, 64, 52, 8, 2]
--------------------------------------------------------------------------------
max_n_level and len(levels[i])= 64 64
--------------------------------------------------------------------------------
TEST contents[i].shape= (64, 4)
Number of levels= 5
--------------------------------------------------------------------------------
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level= 64
--------------------------------------------------------------------------------
subjets per level= [32, 64, 48, 8, 2]
max_n_level and len(levels[i])= 64 64
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
TEST contents[i].shape= (38, 4)
--------------------------------------------------------------------------------
Number of levels= 5
--------------------------------------------------------------------------------
TEST np.zeros((pad_dim,int(features)) (26, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
TEST np.zeros((pad_dim,int(features)) (32, 4)
max_n_level and len(levels[i])= 64 64
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
TEST contents[i].shape= (6, 4)
max_n_level and len(levels[i])= 64 64
TEST np.zeros((pad_dim,int(features)) (58, 4)
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST np.zeros((pad_dim,int(features)) (32, 4)
TEST contents[i].shape= (52, 4)
TEST np.zeros((pad_dim,int(features)) (12, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST contents[i].shape= (8, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
TEST np.zeros((pad_dim,int(features)) (56, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (2, 4)
TEST np.zeros((pad_dim,int(features)) (62, 4)
TEST contents[i].shape= (48, 4)
TEST np.zeros((pad_dim,int(features)) (16, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (8, 4)
TEST np.zeros((pad_dim,int(features)) (56, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (2, 4)
TEST np.zeros((pad_dim,int(features)) (62, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 46, 18, 2]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 5
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (46, 4)
TEST np.zeros((pad_dim,int(features)) (18, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (18, 4)
TEST np.zeros((pad_dim,int(features)) (46, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (2, 4)
TEST np.zeros((pad_dim,int(features)) (62, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 36, 8]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 4
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (36, 4)
TEST np.zeros((pad_dim,int(features)) (28, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (8, 4)
TEST np.zeros((pad_dim,int(features)) (56, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 40, 8]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 4
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (40, 4)
TEST np.zeros((pad_dim,int(features)) (24, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (8, 4)
TEST np.zeros((pad_dim,int(features)) (56, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 44, 6, 2]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 5
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (44, 4)
TEST np.zeros((pad_dim,int(features)) (20, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (6, 4)
TEST np.zeros((pad_dim,int(features)) (58, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (2, 4)
TEST np.zeros((pad_dim,int(features)) (62, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 58, 22]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 4
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (58, 4)
TEST np.zeros((pad_dim,int(features)) (6, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (22, 4)
TEST np.zeros((pad_dim,int(features)) (42, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 48, 10]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 4
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (48, 4)
TEST np.zeros((pad_dim,int(features)) (16, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (10, 4)
TEST np.zeros((pad_dim,int(features)) (54, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 50, 12]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 4
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (50, 4)
TEST np.zeros((pad_dim,int(features)) (14, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (12, 4)
TEST np.zeros((pad_dim,int(features)) (52, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 44, 24]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 4
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (44, 4)
TEST np.zeros((pad_dim,int(features)) (20, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (24, 4)
TEST np.zeros((pad_dim,int(features)) (40, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 32, 8, 2]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 5
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (8, 4)
TEST np.zeros((pad_dim,int(features)) (56, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (2, 4)
TEST np.zeros((pad_dim,int(features)) (62, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 40, 12]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 4
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (40, 4)
TEST np.zeros((pad_dim,int(features)) (24, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (12, 4)
TEST np.zeros((pad_dim,int(features)) (52, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 42, 12, 6]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 5
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (42, 4)
TEST np.zeros((pad_dim,int(features)) (22, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (12, 4)
TEST np.zeros((pad_dim,int(features)) (52, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (6, 4)
TEST np.zeros((pad_dim,int(features)) (58, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 34, 4, 4]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 5
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (34, 4)
TEST np.zeros((pad_dim,int(features)) (30, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (4, 4)
TEST np.zeros((pad_dim,int(features)) (60, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (4, 4)
TEST np.zeros((pad_dim,int(features)) (60, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 36, 2]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 4
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (36, 4)
TEST np.zeros((pad_dim,int(features)) (28, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (2, 4)
TEST np.zeros((pad_dim,int(features)) (62, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 42, 18, 4]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 5
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (42, 4)
TEST np.zeros((pad_dim,int(features)) (22, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (18, 4)
TEST np.zeros((pad_dim,int(features)) (46, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (4, 4)
TEST np.zeros((pad_dim,int(features)) (60, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 40, 10, 2]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 5
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (40, 4)
TEST np.zeros((pad_dim,int(features)) (24, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (10, 4)
TEST np.zeros((pad_dim,int(features)) (54, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (2, 4)
TEST np.zeros((pad_dim,int(features)) (62, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 42, 6]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 4
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (42, 4)
TEST np.zeros((pad_dim,int(features)) (22, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (6, 4)
TEST np.zeros((pad_dim,int(features)) (58, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 46, 12]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 4
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (46, 4)
TEST np.zeros((pad_dim,int(features)) (18, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (12, 4)
TEST np.zeros((pad_dim,int(features)) (52, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 32, 8, 2]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 5
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (8, 4)
TEST np.zeros((pad_dim,int(features)) (56, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (2, 4)
TEST np.zeros((pad_dim,int(features)) (62, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 40, 14, 4]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 5
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (40, 4)
TEST np.zeros((pad_dim,int(features)) (24, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (14, 4)
TEST np.zeros((pad_dim,int(features)) (50, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (4, 4)
TEST np.zeros((pad_dim,int(features)) (60, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 48, 10, 4]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 5
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (48, 4)
TEST np.zeros((pad_dim,int(features)) (16, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (10, 4)
TEST np.zeros((pad_dim,int(features)) (54, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (4, 4)
TEST np.zeros((pad_dim,int(features)) (60, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 44, 8, 4]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 5
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (44, 4)
TEST np.zeros((pad_dim,int(features)) (20, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (8, 4)
TEST np.zeros((pad_dim,int(features)) (56, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (4, 4)
TEST np.zeros((pad_dim,int(features)) (60, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 44, 10]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 4
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (44, 4)
TEST np.zeros((pad_dim,int(features)) (20, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (10, 4)
TEST np.zeros((pad_dim,int(features)) (54, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 40, 12, 4]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 5
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (40, 4)
TEST np.zeros((pad_dim,int(features)) (24, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (12, 4)
TEST np.zeros((pad_dim,int(features)) (52, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (4, 4)
TEST np.zeros((pad_dim,int(features)) (60, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 50, 12, 2]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 5
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (50, 4)
TEST np.zeros((pad_dim,int(features)) (14, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (12, 4)
TEST np.zeros((pad_dim,int(features)) (52, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (2, 4)
TEST np.zeros((pad_dim,int(features)) (62, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 46, 12, 4]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 5
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (46, 4)
TEST np.zeros((pad_dim,int(features)) (18, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (12, 4)
TEST np.zeros((pad_dim,int(features)) (52, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (4, 4)
TEST np.zeros((pad_dim,int(features)) (60, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 48, 20, 8, 2]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 6
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (48, 4)
TEST np.zeros((pad_dim,int(features)) (16, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (20, 4)
TEST np.zeros((pad_dim,int(features)) (44, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (8, 4)
TEST np.zeros((pad_dim,int(features)) (56, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (2, 4)
TEST np.zeros((pad_dim,int(features)) (62, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 44, 10, 2, 2]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 6
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (44, 4)
TEST np.zeros((pad_dim,int(features)) (20, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (10, 4)
TEST np.zeros((pad_dim,int(features)) (54, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (2, 4)
TEST np.zeros((pad_dim,int(features)) (62, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (2, 4)
TEST np.zeros((pad_dim,int(features)) (62, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 44, 10]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 4
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (44, 4)
TEST np.zeros((pad_dim,int(features)) (20, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (10, 4)
TEST np.zeros((pad_dim,int(features)) (54, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 46, 12]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 4
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (46, 4)
TEST np.zeros((pad_dim,int(features)) (18, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (12, 4)
TEST np.zeros((pad_dim,int(features)) (52, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 46, 12, 2]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 5
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (46, 4)
TEST np.zeros((pad_dim,int(features)) (18, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (12, 4)
TEST np.zeros((pad_dim,int(features)) (52, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (2, 4)
TEST np.zeros((pad_dim,int(features)) (62, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 34, 4]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 4
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (34, 4)
TEST np.zeros((pad_dim,int(features)) (30, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (4, 4)
100%|█████████████████████████████████████████████████████████████████████| 37/37 [00:18<00:00,  2.04it/s, loss=0.688]
- Train metrics: accuracy: 0.5428 ; loss: 0.6883
--------------------------------------------------------------------------------
subjets per level= [32, 64, 48, 14, 2]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 5
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (48, 4)
TEST np.zeros((pad_dim,int(features)) (16, 4)
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
subjets per level= [32, 64, 44, 6, 2]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 5
--------------------------------------------------------------------------------
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (14, 4)
max_n_level= 64
TEST np.zeros((pad_dim,int(features)) (50, 4)
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
////////////////////////////////////////////////////////////////////////////////////////////////////
TEST contents[i].shape= (32, 4)
max_n_level and len(levels[i])= 64 64
TEST np.zeros((pad_dim,int(features)) (32, 4)
TEST contents[i].shape= (2, 4)
TEST np.zeros((pad_dim,int(features)) (62, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
/////////////////--------------------------------------------------------------------------------
subjets per level= [32, 64, 42, 12]
///////////////////////////////////////////////////////////////////////////////////
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 4
--------------------------------------------------------------------------------
max_n_level and len(levels[i])= 64 64
max_n_level= 64
TEST contents[i].shape= (44, 4)
--------------------------------------------------------------------------------
TEST np.zeros((pad_dim,int(features)) (20, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
TEST np.zeros((pad_dim,int(features)) (32, 4)
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (6, 4)
TEST np.zeros((pad_dim,int(features)) (58, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST contents[i].shape= (2, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
TEST np.zeros((pad_dim,int(features)) (62, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (42, 4)
TEST np.zeros((pad_dim,int(features)) (22, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (12, 4)
TEST np.zeros((pad_dim,int(features)) (52, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 44, 6, 2]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 5
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////--------------------------------------------------------------------------------
subjets per level= [32, 64, 46, 16, 4, 4]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 6
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
--------------------------------------------------------------------------------
TEST contents[i].shape= (32, 4)
subjets per level= [32, 64, 44, 10]
--------------------------------------------------------------------------------
TEST np.zeros((pad_dim,int(features)) (32, 4)
--------------------------------------------------------------------------------
Number of levels= 4
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (44, 4)
max_n_level= 64
--------------------------------------------------------------------------------
TEST np.zeros((pad_dim,int(features)) (20, 4)
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST np.zeros((pad_dim,int(features)) (0, 4)
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (46, 4)
TEST np.zeros((pad_dim,int(features)) (18, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (16, 4)
TEST np.zeros((pad_dim,int(features)) (48, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////////////////////////
TEST contents[i].shape= (64, 4)
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (4, 4)
max_n_level and len(levels[i])= 64 64
TEST np.zeros((pad_dim,int(features)) (0, 4)
TEST np.zeros((pad_dim,int(features)) (60, 4)
TEST contents[i].shape= (6, 4)
TEST np.zeros((pad_dim,int(features)) (58, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (4, 4)
TEST np.zeros((pad_dim,int(features)) (60, 4)
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (44, 4)
TEST np.zeros((pad_dim,int(features)) (20, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (2, 4)
TEST np.zeros((pad_dim,int(features)) (62, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (10, 4)
TEST np.zeros((pad_dim,int(features)) (54, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 36, 10, 2, 2]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 6
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (36, 4)
TEST np.zeros((pad_dim,int(features)) (28, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (10, 4)
TEST np.zeros((pad_dim,int(features)) (54, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (2, 4)
TEST np.zeros((pad_dim,int(features)) (62, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (2, 4)
TEST np.zeros((pad_dim,int(features)) (62, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 48, 8]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 4
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (48, 4)
TEST np.zeros((pad_dim,int(features)) (16, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (8, 4)
TEST np.zeros((pad_dim,int(features)) (56, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 50, 12, 2]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 5
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (50, 4)
TEST np.zeros((pad_dim,int(features)) (14, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (12, 4)
TEST np.zeros((pad_dim,int(features)) (52, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (2, 4)
TEST np.zeros((pad_dim,int(features)) (62, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 44, 8]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 4
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (44, 4)
TEST np.zeros((pad_dim,int(features)) (20, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (8, 4)
TEST np.zeros((pad_dim,int(features)) (56, 4)
train.py:220: RuntimeWarning: divide by zero encountered in true_divide
  inv_fpr = interp(base_tpr, tpr, 1. / fpr)[125]
- Eval metrics : accuracy: 0.4870 ; loss: 0.6975
--------------------------------------------------------------------------------
subjets per level= [32, 64, 60, 18]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 4
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (60, 4)
TEST np.zeros((pad_dim,int(features)) (4, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (18, 4)
TEST np.zeros((pad_dim,int(features)) (46, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 50, 10]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 4
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (50, 4)
TEST np.zeros((pad_dim,int(features)) (14, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (10, 4)
TEST np.zeros((pad_dim,int(features)) (54, 4)
Checkpoint Directory exists!
Epoch 5/30
  0%|                                                                                          | 0/37 [00:00<?, ?it/s]
--------------------------------------------------------------------------------
subjets per level= [32, 64, 36, 14, 4]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 5
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
subjets per level= [32, 64, 46, 14]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 4
max_n_level= 64
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
TEST np.zeros((pad_dim,int(features)) (0, 4)
max_n_level and ////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (36, 4)
TEST np.zeros((pad_dim,int(features)) (28, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (14, 4)
TEST np.zeros((pad_dim,int(features)) (50, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (4, 4)
TEST np.zeros((pad_dim,int(features)) (60, 4)
len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 42, 14]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 4
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
max_n_level= 64
TEST contents[i].shape= (46, 4)
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
TEST np.zeros((pad_dim,int(features)) (18, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (14, 4)
TEST np.zeros((pad_dim,int(features)) (50, 4)
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (42, 4)
TEST np.zeros((pad_dim,int(features)) (22, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (14, 4)
TEST np.zeros((pad_dim,int(features)) (50, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 38, 6]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 4
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
--------------------------------------------------------------------------------
subjets per level= [32, 64, 48, 8, 2]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 5
--------------------------------------------------------------------------------
TEST contents[i].shape= (38, 4)
TEST np.zeros((pad_dim,int(features)) (26, 4)
max_n_level= 64
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
subjets per level= [32, 64, 52, 8, 2]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 5
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST contents[i].shape= (6, 4)
max_n_level= 64
TEST np.zeros((pad_dim,int(features)) (58, 4)
--------------------------------------------------------------------------------
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST contents[i].shape= (48, 4)
TEST np.zeros((pad_dim,int(features)) (16, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (8, 4)
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (56, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (2, 4)
TEST contents[i].shape= (52, 4)
TEST np.zeros((pad_dim,int(features)) (12, 4)
TEST np.zeros((pad_dim,int(features)) (62, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (8, 4)
TEST np.zeros((pad_dim,int(features)) (56, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (2, 4)
TEST np.zeros((pad_dim,int(features)) (62, 4)
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
subjets per level= [32, 64, 46, 18, 2]
subjets per level= [32, 64, 36, 8]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 5
Number of levels= 4
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
max_n_level= 64
////////////////////////////////////////////////////////////////////////////////////////////////////
--------------------------------------------------------------------------------
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (46, 4)
max_n_level and len(levels[i])= 64 64
TEST np.zeros((pad_dim,int(features)) (18, 4)
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (18, 4)
TEST contents[i].shape= (36, 4)
TEST np.zeros((pad_dim,int(features)) (46, 4)
TEST np.zeros((pad_dim,int(features)) (28, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (2, 4)
max_n_level and len(levels[i])= 64 64
TEST np.zeros((pad_dim,int(features)) (62, 4)
TEST contents[i].shape= (8, 4)
TEST np.zeros((pad_dim,int(features)) (56, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 40, 8]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 4
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (40, 4)
TEST np.zeros((pad_dim,int(features)) (24, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (8, 4)
TEST np.zeros((pad_dim,int(features)) (56, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 44, 6, 2]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 5
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (44, 4)
TEST np.zeros((pad_dim,int(features)) (20, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (6, 4)
TEST np.zeros((pad_dim,int(features)) (58, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (2, 4)
TEST np.zeros((pad_dim,int(features)) (62, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 58, 22]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 4
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (58, 4)
TEST np.zeros((pad_dim,int(features)) (6, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (22, 4)
TEST np.zeros((pad_dim,int(features)) (42, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 48, 10]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 4
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (48, 4)
TEST np.zeros((pad_dim,int(features)) (16, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (10, 4)
TEST np.zeros((pad_dim,int(features)) (54, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 50, 12]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 4
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (50, 4)
TEST np.zeros((pad_dim,int(features)) (14, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (12, 4)
TEST np.zeros((pad_dim,int(features)) (52, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 44, 24]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 4
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (44, 4)
TEST np.zeros((pad_dim,int(features)) (20, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (24, 4)
TEST np.zeros((pad_dim,int(features)) (40, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 32, 8, 2]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 5
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (8, 4)
TEST np.zeros((pad_dim,int(features)) (56, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (2, 4)
TEST np.zeros((pad_dim,int(features)) (62, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 40, 12]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 4
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (40, 4)
TEST np.zeros((pad_dim,int(features)) (24, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (12, 4)
TEST np.zeros((pad_dim,int(features)) (52, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 42, 12, 6]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 5
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (42, 4)
TEST np.zeros((pad_dim,int(features)) (22, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (12, 4)
TEST np.zeros((pad_dim,int(features)) (52, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (6, 4)
TEST np.zeros((pad_dim,int(features)) (58, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 34, 4, 4]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 5
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (34, 4)
TEST np.zeros((pad_dim,int(features)) (30, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (4, 4)
TEST np.zeros((pad_dim,int(features)) (60, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (4, 4)
TEST np.zeros((pad_dim,int(features)) (60, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 36, 2]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 4
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (36, 4)
TEST np.zeros((pad_dim,int(features)) (28, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (2, 4)
TEST np.zeros((pad_dim,int(features)) (62, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 42, 18, 4]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 5
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (42, 4)
TEST np.zeros((pad_dim,int(features)) (22, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (18, 4)
TEST np.zeros((pad_dim,int(features)) (46, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (4, 4)
TEST np.zeros((pad_dim,int(features)) (60, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 40, 10, 2]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 5
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (40, 4)
TEST np.zeros((pad_dim,int(features)) (24, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (10, 4)
TEST np.zeros((pad_dim,int(features)) (54, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (2, 4)
TEST np.zeros((pad_dim,int(features)) (62, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 42, 6]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 4
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (42, 4)
TEST np.zeros((pad_dim,int(features)) (22, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (6, 4)
TEST np.zeros((pad_dim,int(features)) (58, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 46, 12]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 4
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
100%|█████████████████████████████████████████████████████████████████████| 37/37 [00:16<00:00,  2.23it/s, loss=0.686]
- Train metrics: accuracy: 0.5576 ; loss: 0.6865
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (8, 4)
TEST np.zeros((pad_dim,int(features)) (56, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (2, 4)
TEST np.zeros((pad_dim,int(features)) (62, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 40, 14, 4]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 5
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (40, 4)
TEST np.zeros((pad_dim,int(features)) (24, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (14, 4)
TEST np.zeros((pad_dim,int(features)) (50, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (4, 4)
TEST np.zeros((pad_dim,int(features)) (60, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 48, 10, 4]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 5
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (48, 4)
TEST np.zeros((pad_dim,int(features)) (16, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (10, 4)
TEST np.zeros((pad_dim,int(features)) (54, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (4, 4)
TEST np.zeros((pad_dim,int(features)) (60, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 44, 8, 4]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 5
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (44, 4)
TEST np.zeros((pad_dim,int(features)) (20, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (8, 4)
TEST np.zeros((pad_dim,int(features)) (56, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (4, 4)
TEST np.zeros((pad_dim,int(features)) (60, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 44, 10]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 4
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (44, 4)
TEST np.zeros((pad_dim,int(features)) (20, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (10, 4)
TEST np.zeros((pad_dim,int(features)) (54, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 40, 12, 4]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 5
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (40, 4)
TEST np.zeros((pad_dim,int(features)) (24, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (12, 4)
TEST np.zeros((pad_dim,int(features)) (52, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (4, 4)
TEST np.zeros((pad_dim,int(features)) (60, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 50, 12, 2]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 5
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (50, 4)
TEST np.zeros((pad_dim,int(features)) (14, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (12, 4)
TEST np.zeros((pad_dim,int(features)) (52, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (2, 4)
TEST np.zeros((pad_dim,int(features)) (62, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 46, 12, 4]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 5
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (46, 4)
TEST np.zeros((pad_dim,int(features)) (18, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (12, 4)
TEST np.zeros((pad_dim,int(features)) (52, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (4, 4)
TEST np.zeros((pad_dim,int(features)) (60, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 48, 20, 8, 2]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 6
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (48, 4)
TEST np.zeros((pad_dim,int(features)) (16, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (20, 4)
TEST np.zeros((pad_dim,int(features)) (44, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (8, 4)
TEST np.zeros((pad_dim,int(features)) (56, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (2, 4)
TEST np.zeros((pad_dim,int(features)) (62, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 44, 10, 2, 2]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 6
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (44, 4)
TEST np.zeros((pad_dim,int(features)) (20, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (10, 4)
TEST np.zeros((pad_dim,int(features)) (54, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (2, 4)
TEST np.zeros((pad_dim,int(features)) (62, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (2, 4)
TEST np.zeros((pad_dim,int(features)) (62, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 44, 10]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 4
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (44, 4)
TEST np.zeros((pad_dim,int(features)) (20, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (10, 4)
TEST np.zeros((pad_dim,int(features)) (54, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 46, 12]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 4
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (46, 4)
TEST np.zeros((pad_dim,int(features)) (18, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (12, 4)
TEST np.zeros((pad_dim,int(features)) (52, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 46, 12, 2]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 5
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (46, 4)
TEST np.zeros((pad_dim,int(features)) (18, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (12, 4)
TEST np.zeros((pad_dim,int(features)) (52, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (2, 4)
TEST np.zeros((pad_dim,int(features)) (62, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 34, 4]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 4
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (34, 4)
TEST np.zeros((pad_dim,int(features)) (30, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (4, 4)
TEST np.zeros((pad_dim,int(features)) (60, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 48, 14, 2]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 5
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (48, 4)
TEST np.zeros((pad_dim,int(features)) (16, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (14, 4)
TEST np.zeros((pad_dim,int(features)) (50, 4)
//////////////////////////////////////////--------------------------------------------------------------------------------
subjets per level= [32, 64, 42, 12]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
subjets per level= [32, 64, 44, 6, 2]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 5
--------------------------------------------------------------------------------
//////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (2, 4)
TEST np.zeros((pad_dim,int(features)) (62, 4)
Number of levels= 4
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
////////////////////////////////////////////////////////////////////////////////////////////////////
TEST contents[i].shape= (32, 4)
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (44, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
TEST np.zeros((pad_dim,int(features)) (20, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
////////////////////////////////////////////////////////////////////////////////////////////////////
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (6, 4)
TEST np.zeros((pad_dim,int(features)) (58, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (42, 4)
TEST np.zeros((pad_dim,int(features)) (22, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (12, 4)
TEST contents[i].shape= (2, 4)
TEST np.zeros((pad_dim,int(features)) (52, 4)
TEST np.zeros((pad_dim,int(features)) (62, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 46, 16, 4, 4]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 6
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
--------------------------------------------------------------------------------
max_n_level and len(levels[i])= 64 64
subjets per level= [32, 64, 44, 10]
--------------------------------------------------------------------------------
TEST contents[i].shape= (46, 4)
--------------------------------------------------------------------------------
Number of levels= 4
--------------------------------------------------------------------------------
TEST np.zeros((pad_dim,int(features)) (18, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (16, 4)
max_n_level= 64
--------------------------------------------------------------------------------
TEST np.zeros((pad_dim,int(features)) (48, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////////////////////////
--------------------------------------------------------------------------------
max_n_level and len(levels[i])= 64 64
subjets per level= [32, 64, 44, 6, 2]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 5
--------------------------------------------------------------------------------
TEST contents[i].shape= (32, 4)
max_n_level and len(levels[i])= 64 64
TEST np.zeros((pad_dim,int(features)) (32, 4)
TEST contents[i].shape= (4, 4)
TEST np.zeros((pad_dim,int(features)) (60, 4)
max_n_level= 64
////////////////////////////////////////////////////////////////////////////////////////////////////
--------------------------------------------------------------------------------
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (4, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
TEST np.zeros((pad_dim,int(features)) (60, 4)
max_n_level and len(levels[i])= 64 64
////////////////////////////////////////////////////////////////////////////////////////////////////
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (44, 4)
TEST np.zeros((pad_dim,int(features)) (20, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST contents[i].shape= (10, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
TEST np.zeros((pad_dim,int(features)) (54, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (44, 4)
TEST np.zeros((pad_dim,int(features)) (20, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (6, 4)
TEST np.zeros((pad_dim,int(features)) (58, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (2, 4)
TEST np.zeros((pad_dim,int(features)) (62, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 36, 10, 2, 2]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 6
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (36, 4)
TEST np.zeros((pad_dim,int(features)) (28, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (10, 4)
TEST np.zeros((pad_dim,int(features)) (54, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (2, 4))
TEST np.zeros((pad_dim,int(features)) (62, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (2, 4))
TEST np.zeros((pad_dim,int(features)) (62, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 48, 8] 2]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 4
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (48, 4)
TEST np.zeros((pad_dim,int(features)) (16, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (8, 4)
TEST np.zeros((pad_dim,int(features)) (56, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 60, 18]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 4
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (60, 4)
TEST np.zeros((pad_dim,int(features)) (4, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (18, 4)
TEST np.zeros((pad_dim,int(features)) (46, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 50, 12, 2]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 5
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (50, 4)
TEST np.zeros((pad_dim,int(features)) (14, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (12, 4)
TEST np.zeros((pad_dim,int(features)) (52, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (2, 4)
TEST np.zeros((pad_dim,int(features)) (62, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 44, 8]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 4
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (44, 4)
TEST np.zeros((pad_dim,int(features)) (20, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (8, 4)
TEST np.zeros((pad_dim,int(features)) (56, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 50, 10]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 4
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (50, 4)
TEST np.zeros((pad_dim,int(features)) (14, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (10, 4)
TEST np.zeros((pad_dim,int(features)) (54, 4)
train.py:220: RuntimeWarning: divide by zero encountered in true_divide
  inv_fpr = interp(base_tpr, tpr, 1. / fpr)[125]
- Eval metrics : accuracy: 0.4818 ; loss: 0.6970
Checkpoint Directory exists!
- Found new best bg rejection = 3.979591836734694
Epoch 6/30

  3%|█▉                                                                    | 1/37 [00:17<10:47, 17.99s/it, loss=0.680]
--------------------------------------------------------------------------------
subjets per level= [32, 64, 36, 14, 4]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 5
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 46, 14]
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
--------------------------------------------------------------------------------
max_n_level and len(levels[i])= 64 64
Number of levels= 4
--------------------------------------------------------------------------------
TEST contents[i].shape= (36, 4)
TEST np.zeros((pad_dim,int(features)) (28, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level= 64
max_n_level and len(levels[i])= 64 64
--------------------------------------------------------------------------------
TEST contents[i].shape= (14, 4)
TEST np.zeros((pad_dim,int(features)) (50, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (4, 4)
TEST np.zeros((pad_dim,int(features)) (60, 4)
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 42, 14]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 4
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (46, 4)
TEST np.zeros((pad_dim,int(features)) (18, 4)
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (14, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
TEST np.zeros((pad_dim,int(features)) (50, 4)
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (42, 4)
TEST np.zeros((pad_dim,int(features)) (22, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (14, 4)
TEST np.zeros((pad_dim,int(features)) (50, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 48, 8, 2]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 5
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (48, 4)
TEST np.zeros((pad_dim,int(features)) (16, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
--------------------------------------------------------------------------------
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (8, 4)
subjets per level= [32, 64, 38, 6]
--------------------------------------------------------------------------------
TEST np.zeros((pad_dim,int(features)) (56, 4)
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 4
subjets per level= [32, 64, 52, 8, 2]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 5
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
max_n_level= 64
--------------------------------------------------------------------------------
TEST contents[i].shape= (2, 4)
max_n_level= 64
TEST np.zeros((pad_dim,int(features)) (62, 4)
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
TEST np.zeros((pad_dim,int(features)) (32, 4)
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (38, 4)
max_n_level and len(levels[i])= 64 64
TEST np.zeros((pad_dim,int(features)) (26, 4)
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (6, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (52, 4)
TEST np.zeros((pad_dim,int(features)) (12, 4)
TEST np.zeros((pad_dim,int(features)) (58, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (8, 4)
TEST np.zeros((pad_dim,int(features)) (56, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (2, 4)
TEST np.zeros((pad_dim,int(features)) (62, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 46, 18, 2]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 5
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (46, 4)
TEST np.zeros((pad_dim,int(features)) (18, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (18, 4)
TEST np.zeros((pad_dim,int(features)) (46, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (2, 4)
TEST np.zeros((pad_dim,int(features)) (62, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 36, 8]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 4
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (36, 4)
TEST np.zeros((pad_dim,int(features)) (28, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (8, 4)
TEST np.zeros((pad_dim,int(features)) (56, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 40, 8]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 4
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (40, 4)
TEST np.zeros((pad_dim,int(features)) (24, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (8, 4)
TEST np.zeros((pad_dim,int(features)) (56, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 44, 6, 2]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 5
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (44, 4)
TEST np.zeros((pad_dim,int(features)) (20, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (6, 4)
TEST np.zeros((pad_dim,int(features)) (58, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (2, 4)
TEST np.zeros((pad_dim,int(features)) (62, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 58, 22]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 4
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (58, 4)
TEST np.zeros((pad_dim,int(features)) (6, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (22, 4)
TEST np.zeros((pad_dim,int(features)) (42, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 48, 10]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 4
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (48, 4)
TEST np.zeros((pad_dim,int(features)) (16, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (10, 4)
TEST np.zeros((pad_dim,int(features)) (54, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 50, 12]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 4
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (50, 4)
TEST np.zeros((pad_dim,int(features)) (14, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (12, 4)
TEST np.zeros((pad_dim,int(features)) (52, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 44, 24]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 4
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (44, 4)
TEST np.zeros((pad_dim,int(features)) (20, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (24, 4)
TEST np.zeros((pad_dim,int(features)) (40, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 32, 8, 2]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 5
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (8, 4)
TEST np.zeros((pad_dim,int(features)) (56, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (2, 4)
TEST np.zeros((pad_dim,int(features)) (62, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 40, 12]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 4
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (40, 4)
TEST np.zeros((pad_dim,int(features)) (24, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (12, 4)
TEST np.zeros((pad_dim,int(features)) (52, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 42, 12, 6]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 5
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (42, 4)
TEST np.zeros((pad_dim,int(features)) (22, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (12, 4)
TEST np.zeros((pad_dim,int(features)) (52, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (6, 4)
TEST np.zeros((pad_dim,int(features)) (58, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 34, 4, 4]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 5
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (34, 4)
TEST np.zeros((pad_dim,int(features)) (30, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (4, 4)
TEST np.zeros((pad_dim,int(features)) (60, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (4, 4)
TEST np.zeros((pad_dim,int(features)) (60, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 36, 2]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 4
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (36, 4)
TEST np.zeros((pad_dim,int(features)) (28, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (2, 4)
TEST np.zeros((pad_dim,int(features)) (62, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 42, 18, 4]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 5
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (42, 4)
TEST np.zeros((pad_dim,int(features)) (22, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (18, 4)
TEST np.zeros((pad_dim,int(features)) (46, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (4, 4)
TEST np.zeros((pad_dim,int(features)) (60, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 40, 10, 2]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 5
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (40, 4)
TEST np.zeros((pad_dim,int(features)) (24, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (10, 4)
TEST np.zeros((pad_dim,int(features)) (54, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (2, 4)
TEST np.zeros((pad_dim,int(features)) (62, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 42, 6]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 4
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (42, 4)
TEST np.zeros((pad_dim,int(features)) (22, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (6, 4)
TEST np.zeros((pad_dim,int(features)) (58, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 46, 12]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 4
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (46, 4)
TEST np.zeros((pad_dim,int(features)) (18, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (12, 4)
TEST np.zeros((pad_dim,int(features)) (52, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 32, 8, 2]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 5
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (8, 4)
TEST np.zeros((pad_dim,int(features)) (56, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (2, 4)
TEST np.zeros((pad_dim,int(features)) (62, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 40, 14, 4]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 5
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (40, 4)
TEST np.zeros((pad_dim,int(features)) (24, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (14, 4)
TEST np.zeros((pad_dim,int(features)) (50, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (4, 4)
TEST np.zeros((pad_dim,int(features)) (60, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 48, 10, 4]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 5
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (48, 4)
TEST np.zeros((pad_dim,int(features)) (16, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (10, 4)
TEST np.zeros((pad_dim,int(features)) (54, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (4, 4)
TEST np.zeros((pad_dim,int(features)) (60, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 44, 8, 4]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 5
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (44, 4)
TEST np.zeros((pad_dim,int(features)) (20, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (8, 4)
TEST np.zeros((pad_dim,int(features)) (56, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (4, 4)
TEST np.zeros((pad_dim,int(features)) (60, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 44, 10]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 4
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (44, 4)
TEST np.zeros((pad_dim,int(features)) (20, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (10, 4)
TEST np.zeros((pad_dim,int(features)) (54, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 40, 12, 4]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 5
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (40, 4)
TEST np.zeros((pad_dim,int(features)) (24, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (12, 4)
TEST np.zeros((pad_dim,int(features)) (52, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (4, 4)
TEST np.zeros((pad_dim,int(features)) (60, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 50, 12, 2]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 5
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (50, 4)
TEST np.zeros((pad_dim,int(features)) (14, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (12, 4)
TEST np.zeros((pad_dim,int(features)) (52, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (2, 4)
TEST np.zeros((pad_dim,int(features)) (62, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 46, 12, 4]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 5
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (46, 4)
TEST np.zeros((pad_dim,int(features)) (18, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (12, 4)
TEST np.zeros((pad_dim,int(features)) (52, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (4, 4)
TEST np.zeros((pad_dim,int(features)) (60, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 48, 20, 8, 2]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 6
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (48, 4)
TEST np.zeros((pad_dim,int(features)) (16, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (20, 4)
TEST np.zeros((pad_dim,int(features)) (44, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (8, 4)
TEST np.zeros((pad_dim,int(features)) (56, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (2, 4)
TEST np.zeros((pad_dim,int(features)) (62, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 44, 10, 2, 2]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 6
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (44, 4)
TEST np.zeros((pad_dim,int(features)) (20, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (10, 4)
TEST np.zeros((pad_dim,int(features)) (54, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (2, 4)
TEST np.zeros((pad_dim,int(features)) (62, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (2, 4)
TEST np.zeros((pad_dim,int(features)) (62, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 44, 10]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 4
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (44, 4)
TEST np.zeros((pad_dim,int(features)) (20, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (10, 4)
TEST np.zeros((pad_dim,int(features)) (54, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 46, 12]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 4
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (46, 4)
TEST np.zeros((pad_dim,int(features)) (18, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (12, 4)
TEST np.zeros((pad_dim,int(features)) (52, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 46, 12, 2]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 5
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (46, 4)
TEST np.zeros((pad_dim,int(features)) (18, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (12, 4)
TEST np.zeros((pad_dim,int(features)) (52, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (2, 4)
TEST np.zeros((pad_dim,int(features)) (62, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 34, 4]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 4
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (34, 4)
TEST np.zeros((pad_dim,int(features)) (30, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (4, 4)
100%|█████████████████████████████████████████████████████████████████████| 37/37 [00:18<00:00,  2.01it/s, loss=0.683]
- Train metrics: accuracy: 0.5724 ; loss: 0.6827
train.py:220: RuntimeWarning: divide by zero encountered in true_divide
  inv_fpr = interp(base_tpr, tpr, 1. / fpr)[125]
- Eval metrics : accuracy: 0.4974 ; loss: 0.6964
Epoch 7/30
  0%|                                                                                          | 0/37 [00:00<?, ?it/s]
--------------------------------------------------------------------------------
subjets per level= [32, 64, 48, 14, 2]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 5
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (48, 4)
TEST np.zeros((pad_dim,int(features)) (16, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (14, 4)
TEST np.zeros((pad_dim,int(features)) (50, 4)
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
subjets per level= [32, 64, 44, 6, 2]
TEST contents[i].shape= (2, 4)
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
TEST np.zeros((pad_dim,int(features)) (62, 4)
Number of levels= 5
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
subjets per level= [32, 64, 42, 12]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 4
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (44, 4)
TEST np.zeros((pad_dim,int(features)) (20, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (6, 4)
TEST np.zeros((pad_dim,int(features)) (58, 4)
max_n_level and len(levels[i])= 64 64
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST contents[i].shape= (2, 4)
TEST np.zeros((pad_dim,int(features)) (62, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (42, 4)
TEST np.zeros((pad_dim,int(features)) (22, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (12, 4)
TEST np.zeros((pad_dim,int(features)) (52, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 44, 6, 2]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 5
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (44, 4)
TEST np.zeros((pad_dim,int(features)) (20, 4)
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
subjets per level= [32, 64, 44, 10]
subjets per level= [32, 64, 46, 16, 4, 4]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 4
Number of levels= 6
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (6, 4)
TEST np.zeros((pad_dim,int(features)) (58, 4)
max_n_level= 64
max_n_level= 64
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST contents[i].shape= (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
TEST np.zeros((pad_dim,int(features)) (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
max_n_level and len(levels[i])= 64 64
////////////////////////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (2, 4)
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (62, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (44, 4)
TEST contents[i].shape= (46, 4)
TEST np.zeros((pad_dim,int(features)) (20, 4)
TEST np.zeros((pad_dim,int(features)) (18, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (16, 4)
TEST np.zeros((pad_dim,int(features)) (48, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (4, 4)
TEST np.zeros((pad_dim,int(features)) (60, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
TEST contents[i].shape= (10, 4)
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (4, 4)
TEST np.zeros((pad_dim,int(features)) (54, 4)
TEST np.zeros((pad_dim,int(features)) (60, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 36, 10, 2, 2]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 6
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (36, 4)
TEST np.zeros((pad_dim,int(features)) (28, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (10, 4)
TEST np.zeros((pad_dim,int(features)) (54, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (2, 4)
TEST np.zeros((pad_dim,int(features)) (62, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (2, 4)
TEST np.zeros((pad_dim,int(features)) (62, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 48, 8]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 4
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (48, 4)
TEST np.zeros((pad_dim,int(features)) (16, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (8, 4)
TEST np.zeros((pad_dim,int(features)) (56, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 60, 18]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 4
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (60, 4)
TEST np.zeros((pad_dim,int(features)) (4, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (18, 4)
TEST np.zeros((pad_dim,int(features)) (46, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 50, 12, 2]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 5
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (50, 4)
TEST np.zeros((pad_dim,int(features)) (14, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (12, 4)
TEST np.zeros((pad_dim,int(features)) (52, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (2, 4)
TEST np.zeros((pad_dim,int(features)) (62, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 44, 8]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 4
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (44, 4)
TEST np.zeros((pad_dim,int(features)) (20, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (8, 4)
TEST np.zeros((pad_dim,int(features)) (56, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 50, 10]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 4
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (50, 4)
TEST np.zeros((pad_dim,int(features)) (14, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (10, 4)
TEST np.zeros((pad_dim,int(features)) (54, 4)
100%|█████████████████████████████████████████████████████████████████████| 37/37 [00:18<00:00,  2.01it/s, loss=0.680]
- Train metrics: accuracy: 0.5806 ; loss: 0.6790
--------------------------------------------------------------------------------
subjets per level= [32, 64, 36, 14, 4]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 5
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
subjets per level= [32, 64, 46, 14]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 4
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////////////////////////
subjets per level= [32, 64, 42, 14]
--------------------------------------------------------------------------------
max_n_level and len(levels[i])= 64 64
--------------------------------------------------------------------------------
max_n_level and len(levels[i])= 64 64
Number of levels= 4
--------------------------------------------------------------------------------
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
TEST contents[i].shape= (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
max_n_level= 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
--------------------------------------------------------------------------------
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (36, 4)
TEST np.zeros((pad_dim,int(features)) (28, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (14, 4)
TEST np.zeros((pad_dim,int(features)) (50, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
TEST contents[i].shape= (32, 4)
max_n_level and len(levels[i])= 64 64
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (4, 4)
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (60, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST contents[i].shape= (46, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (42, 4)
TEST np.zeros((pad_dim,int(features)) (22, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (14, 4)
TEST np.zeros((pad_dim,int(features)) (50, 4)
TEST np.zeros((pad_dim,int(features)) (18, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (14, 4)
TEST np.zeros((pad_dim,int(features)) (50, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 38, 6]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 4
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (38, 4)
TEST np.zeros((pad_dim,int(features)) (26, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (6, 4)
TEST np.zeros((pad_dim,int(features)) (58, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 52, 8, 2]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 5
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
subjets per level= [32, 64, 48, 8, 2]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 5
--------------------------------------------------------------------------------
max_n_level= 64
max_n_level= 64
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (48, 4)
TEST contents[i].shape= (52, 4)
TEST np.zeros((pad_dim,int(features)) (16, 4)
TEST np.zeros((pad_dim,int(features)) (12, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
////////////////////////////////////////////////////////////////////////////////////////////////////
TEST contents[i].shape= (8, 4)
max_n_level and len(levels[i])= 64 64
TEST np.zeros((pad_dim,int(features)) (56, 4)
TEST contents[i].shape= (8, 4)
TEST np.zeros((pad_dim,int(features)) (56, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (2, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
TEST np.zeros((pad_dim,int(features)) (62, 4)
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (2, 4)
TEST np.zeros((pad_dim,int(features)) (62, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 46, 18, 2]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 5
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (46, 4)
TEST np.zeros((pad_dim,int(features)) (18, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (18, 4)
TEST np.zeros((pad_dim,int(features)) (46, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (2, 4)
TEST np.zeros((pad_dim,int(features)) (62, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 36, 8]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 4
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (36, 4)
TEST np.zeros((pad_dim,int(features)) (28, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (8, 4)
TEST np.zeros((pad_dim,int(features)) (56, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 40, 8]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 4
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (40, 4)
TEST np.zeros((pad_dim,int(features)) (24, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (8, 4)
TEST np.zeros((pad_dim,int(features)) (56, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 44, 6, 2]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 5
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (44, 4)
TEST np.zeros((pad_dim,int(features)) (20, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (6, 4)
TEST np.zeros((pad_dim,int(features)) (58, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (2, 4)
TEST np.zeros((pad_dim,int(features)) (62, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 58, 22]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 4
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (58, 4)
TEST np.zeros((pad_dim,int(features)) (6, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (22, 4)
TEST np.zeros((pad_dim,int(features)) (42, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 48, 10]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 4
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (48, 4)
TEST np.zeros((pad_dim,int(features)) (16, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (10, 4)
TEST np.zeros((pad_dim,int(features)) (54, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 50, 12]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 4
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (50, 4)
TEST np.zeros((pad_dim,int(features)) (14, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (12, 4)
TEST np.zeros((pad_dim,int(features)) (52, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 44, 24]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 4
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (44, 4)
TEST np.zeros((pad_dim,int(features)) (20, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (24, 4)
TEST np.zeros((pad_dim,int(features)) (40, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 32, 8, 2]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 5
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (8, 4)
TEST np.zeros((pad_dim,int(features)) (56, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (2, 4)
TEST np.zeros((pad_dim,int(features)) (62, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 40, 12]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 4
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (40, 4)
TEST np.zeros((pad_dim,int(features)) (24, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (12, 4)
TEST np.zeros((pad_dim,int(features)) (52, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 42, 12, 6]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 5
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (42, 4)
TEST np.zeros((pad_dim,int(features)) (22, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (12, 4)
TEST np.zeros((pad_dim,int(features)) (52, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (6, 4)
TEST np.zeros((pad_dim,int(features)) (58, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 34, 4, 4]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 5
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (34, 4)
TEST np.zeros((pad_dim,int(features)) (30, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (4, 4)
TEST np.zeros((pad_dim,int(features)) (60, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (4, 4)
TEST np.zeros((pad_dim,int(features)) (60, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 36, 2]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 4
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (36, 4)
TEST np.zeros((pad_dim,int(features)) (28, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (2, 4)
TEST np.zeros((pad_dim,int(features)) (62, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 42, 18, 4]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 5
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (42, 4)
TEST np.zeros((pad_dim,int(features)) (22, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (18, 4)
TEST np.zeros((pad_dim,int(features)) (46, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (4, 4)
TEST np.zeros((pad_dim,int(features)) (60, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 40, 10, 2]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 5
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (40, 4)
TEST np.zeros((pad_dim,int(features)) (24, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (10, 4)
TEST np.zeros((pad_dim,int(features)) (54, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (2, 4)
TEST np.zeros((pad_dim,int(features)) (62, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 42, 6]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 4
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (42, 4)
TEST np.zeros((pad_dim,int(features)) (22, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (6, 4)
TEST np.zeros((pad_dim,int(features)) (58, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 46, 12]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 4
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (46, 4)
TEST np.zeros((pad_dim,int(features)) (18, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (12, 4)
TEST np.zeros((pad_dim,int(features)) (52, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 32, 8, 2]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 5
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (8, 4)
TEST np.zeros((pad_dim,int(features)) (56, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (2, 4)
TEST np.zeros((pad_dim,int(features)) (62, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 40, 14, 4]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 5
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (40, 4)
TEST np.zeros((pad_dim,int(features)) (24, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (14, 4)
TEST np.zeros((pad_dim,int(features)) (50, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (4, 4)
TEST np.zeros((pad_dim,int(features)) (60, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 48, 10, 4]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 5
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (48, 4)
TEST np.zeros((pad_dim,int(features)) (16, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (10, 4)
TEST np.zeros((pad_dim,int(features)) (54, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (4, 4)
TEST np.zeros((pad_dim,int(features)) (60, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 44, 8, 4]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 5
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (44, 4)
TEST np.zeros((pad_dim,int(features)) (20, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (8, 4)
TEST np.zeros((pad_dim,int(features)) (56, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (4, 4)
TEST np.zeros((pad_dim,int(features)) (60, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 44, 10]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 4
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (44, 4)
TEST np.zeros((pad_dim,int(features)) (20, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (10, 4)
TEST np.zeros((pad_dim,int(features)) (54, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 40, 12, 4]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 5
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (40, 4)
TEST np.zeros((pad_dim,int(features)) (24, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (12, 4)
TEST np.zeros((pad_dim,int(features)) (52, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (4, 4)
TEST np.zeros((pad_dim,int(features)) (60, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 50, 12, 2]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 5
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (50, 4)
TEST np.zeros((pad_dim,int(features)) (14, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (12, 4)
TEST np.zeros((pad_dim,int(features)) (52, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (2, 4)
TEST np.zeros((pad_dim,int(features)) (62, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 46, 12, 4]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 5
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (46, 4)
TEST np.zeros((pad_dim,int(features)) (18, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (12, 4)
TEST np.zeros((pad_dim,int(features)) (52, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (4, 4)
TEST np.zeros((pad_dim,int(features)) (60, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 48, 20, 8, 2]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 6
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (48, 4)
TEST np.zeros((pad_dim,int(features)) (16, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (20, 4)
TEST np.zeros((pad_dim,int(features)) (44, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (8, 4)
TEST np.zeros((pad_dim,int(features)) (56, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (2, 4)
TEST np.zeros((pad_dim,int(features)) (62, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 44, 10, 2, 2]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 6
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (44, 4)
TEST np.zeros((pad_dim,int(features)) (20, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (10, 4)
TEST np.zeros((pad_dim,int(features)) (54, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (2, 4)
TEST np.zeros((pad_dim,int(features)) (62, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (2, 4)
TEST np.zeros((pad_dim,int(features)) (62, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 44, 10]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 4
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (44, 4)
TEST np.zeros((pad_dim,int(features)) (20, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (10, 4)
TEST np.zeros((pad_dim,int(features)) (54, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 46, 12]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 4
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (46, 4)
TEST np.zeros((pad_dim,int(features)) (18, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (12, 4)
TEST np.zeros((pad_dim,int(features)) (52, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 46, 12, 2]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 5
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (46, 4)
TEST np.zeros((pad_dim,int(features)) (18, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (12, 4)
TEST np.zeros((pad_dim,int(features)) (52, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (2, 4)
TEST np.zeros((pad_dim,int(features)) (62, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 34, 4]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 4
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (34, 4)
TEST np.zeros((pad_dim,int(features)) (30, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (4, 4)
TEST np.zeros((pad_dim,int(features)) (60, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 48, 14, 2]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 5
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (48, 4)
TEST np.zeros((pad_dim,int(features)) (16, 4)
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
subjets per level= [32, 64, 44, 6, 2]
max_n_level and len(levels[i])= 64 64
--------------------------------------------------------------------------------
TEST contents[i].shape= (14, 4)
--------------------------------------------------------------------------------
Number of levels= 5
TEST np.zeros((pad_dim,int(features)) (50, 4)
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (2, 4)
TEST np.zeros((pad_dim,int(features)) (62, 4)
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (44, 4)
TEST np.zeros((pad_dim,int(features)) (20, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (6, 4)
TEST np.zeros((pad_dim,int(features)) (58, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (2, 4)
TEST np.zeros((pad_dim,int(features)) (62, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 42, 12]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 4
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (42, 4)
TEST np.zeros((pad_dim,int(features)) (22, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (12, 4)
TEST np.zeros((pad_dim,int(features)) (52, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 44, 6, 2]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 5
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (44, 4)
TEST np.zeros((pad_dim,int(features)) (20, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (6, 4)
TEST np.zeros((pad_dim,int(features)) (58, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (2, 4)
TEST np.zeros((pad_dim,int(features)) (62, 4)
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
subjets per level= [32, 64, 46, 16, 4, 4]
subjets per level= [32, 64, 44, 10]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 6
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 4
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
TEST np.zeros((pad_dim,int(features)) (32, 4)
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
////////////////////////////////////////////////////////////////////////////////////////////////////
TEST contents[i].shape= (64, 4)
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (44, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
TEST np.zeros((pad_dim,int(features)) (20, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
////////////////////////////////////////////////////////////////////////////////////////////////////
TEST contents[i].shape= (46, 4)
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (10, 4)
TEST np.zeros((pad_dim,int(features)) (54, 4)
TEST np.zeros((pad_dim,int(features)) (18, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (16, 4)
TEST np.zeros((pad_dim,int(features)) (48, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (4, 4)
TEST np.zeros((pad_dim,int(features)) (60, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (4, 4)
TEST np.zeros((pad_dim,int(features)) (60, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 36, 10, 2, 2]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 6
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (36, 4)
TEST np.zeros((pad_dim,int(features)) (28, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (10, 4)
TEST np.zeros((pad_dim,int(features)) (54, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (2, 4)
TEST np.zeros((pad_dim,int(features)) (62, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (2, 4)
TEST np.zeros((pad_dim,int(features)) (62, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 48, 8]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 4
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (48, 4)
TEST np.zeros((pad_dim,int(features)) (16, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (8, 4)
TEST np.zeros((pad_dim,int(features)) (56, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 60, 18]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 4
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (60, 4)
TEST np.zeros((pad_dim,int(features)) (4, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (18, 4)
TEST np.zeros((pad_dim,int(features)) (46, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 50, 12, 2]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 5
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (50, 4)
TEST np.zeros((pad_dim,int(features)) (14, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (12, 4)
TEST np.zeros((pad_dim,int(features)) (52, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (2, 4)
TEST np.zeros((pad_dim,int(features)) (62, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 44, 8]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 4
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (44, 4)
TEST np.zeros((pad_dim,int(features)) (20, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (8, 4)
TEST np.zeros((pad_dim,int(features)) (56, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 50, 10]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 4
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (50, 4)
TEST np.zeros((pad_dim,int(features)) (14, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (10, 4)
TEST np.zeros((pad_dim,int(features)) (54, 4)
train.py:220: RuntimeWarning: divide by zero encountered in true_divide
  inv_fpr = interp(base_tpr, tpr, 1. / fpr)[125]
- Eval metrics : accuracy: 0.4974 ; loss: 0.6965
- Found new best bg rejection = 3.979591836734694
Epoch 8/30
  0%|                                                                                          | 0/37 [00:00<?, ?it/s]

 27%|██████████████████▋                                                  | 10/37 [00:22<00:43,  1.60s/it, loss=0.682]
--------------------------------------------------------------------------------
subjets per level= [32, 64, 42, 14]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 4
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (42, 4)
TEST np.zeros((pad_dim,int(features)) (22, 4)
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
subjets per level= [32, 64, 46, 14]
--------------------------------------------------------------------------------
max_n_level and len(levels[i])= 64 64
--------------------------------------------------------------------------------
Number of levels= 4
TEST contents[i].shape= (14, 4)
--------------------------------------------------------------------------------
TEST np.zeros((pad_dim,int(features)) (50, 4)
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (46, 4)
TEST np.zeros((pad_dim,int(features)) (18, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (14, 4)
TEST np.zeros((pad_dim,int(features)) (50, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 36, 14, 4]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 5
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (36, 4)
TEST np.zeros((pad_dim,int(features)) (28, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (14, 4)
TEST np.zeros((pad_dim,int(features)) (50, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (4, 4)
TEST np.zeros((pad_dim,int(features)) (60, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 38, 6]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 4
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (38, 4)
TEST np.zeros((pad_dim,int(features)) (26, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
--------------------------------------------------------------------------------
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (6, 4)
subjets per level= [32, 64, 52, 8, 2]
TEST np.zeros((pad_dim,int(features)) (58, 4)
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 5
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (52, 4)
TEST np.zeros((pad_dim,int(features)) (12, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (8, 4)
TEST np.zeros((pad_dim,int(features)) (56, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (2, 4)
TEST np.zeros((pad_dim,int(features)) (62, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 48, 8, 2]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 5
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (48, 4)
TEST np.zeros((pad_dim,int(features)) (16, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (8, 4)
TEST np.zeros((pad_dim,int(features)) (56, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (2, 4)
TEST np.zeros((pad_dim,int(features)) (62, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 46, 18, 2]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 5
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (46, 4)
TEST np.zeros((pad_dim,int(features)) (18, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (18, 4)
TEST np.zeros((pad_dim,int(features)) (46, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (2, 4)
TEST np.zeros((pad_dim,int(features)) (62, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 36, 8]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 4
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (36, 4)
TEST np.zeros((pad_dim,int(features)) (28, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (8, 4)
TEST np.zeros((pad_dim,int(features)) (56, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 40, 8]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 4
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (40, 4)
TEST np.zeros((pad_dim,int(features)) (24, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (8, 4)
TEST np.zeros((pad_dim,int(features)) (56, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 44, 6, 2]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 5
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (44, 4)
TEST np.zeros((pad_dim,int(features)) (20, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (6, 4)
TEST np.zeros((pad_dim,int(features)) (58, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (2, 4)
TEST np.zeros((pad_dim,int(features)) (62, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 58, 22]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 4
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (58, 4)
TEST np.zeros((pad_dim,int(features)) (6, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (22, 4)
TEST np.zeros((pad_dim,int(features)) (42, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 48, 10]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 4
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (48, 4)
TEST np.zeros((pad_dim,int(features)) (16, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (10, 4)
TEST np.zeros((pad_dim,int(features)) (54, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 50, 12]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 4
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (50, 4)
TEST np.zeros((pad_dim,int(features)) (14, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (12, 4)
TEST np.zeros((pad_dim,int(features)) (52, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 44, 24]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 4
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (44, 4)
TEST np.zeros((pad_dim,int(features)) (20, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (24, 4)
TEST np.zeros((pad_dim,int(features)) (40, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 32, 8, 2]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 5
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (8, 4)
TEST np.zeros((pad_dim,int(features)) (56, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (2, 4)
TEST np.zeros((pad_dim,int(features)) (62, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 40, 12]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 4
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (40, 4)
TEST np.zeros((pad_dim,int(features)) (24, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (12, 4)
TEST np.zeros((pad_dim,int(features)) (52, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 42, 12, 6]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 5
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (42, 4)
TEST np.zeros((pad_dim,int(features)) (22, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (12, 4)
TEST np.zeros((pad_dim,int(features)) (52, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (6, 4)
TEST np.zeros((pad_dim,int(features)) (58, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 34, 4, 4]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 5
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (34, 4)
TEST np.zeros((pad_dim,int(features)) (30, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (4, 4)
TEST np.zeros((pad_dim,int(features)) (60, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (4, 4)
TEST np.zeros((pad_dim,int(features)) (60, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 36, 2]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 4
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (36, 4)
TEST np.zeros((pad_dim,int(features)) (28, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (2, 4)
TEST np.zeros((pad_dim,int(features)) (62, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 42, 18, 4]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 5
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (42, 4)
TEST np.zeros((pad_dim,int(features)) (22, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (18, 4)
TEST np.zeros((pad_dim,int(features)) (46, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (4, 4)
TEST np.zeros((pad_dim,int(features)) (60, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 40, 10, 2]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 5
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (40, 4)
TEST np.zeros((pad_dim,int(features)) (24, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (10, 4)
TEST np.zeros((pad_dim,int(features)) (54, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (2, 4)
TEST np.zeros((pad_dim,int(features)) (62, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 42, 6]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 4
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (42, 4)
TEST np.zeros((pad_dim,int(features)) (22, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (6, 4)
TEST np.zeros((pad_dim,int(features)) (58, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 46, 12]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 4
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (46, 4)
TEST np.zeros((pad_dim,int(features)) (18, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (12, 4)
TEST np.zeros((pad_dim,int(features)) (52, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 32, 8, 2]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 5
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (8, 4)
TEST np.zeros((pad_dim,int(features)) (56, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (2, 4)
TEST np.zeros((pad_dim,int(features)) (62, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 40, 14, 4]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 5
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
100%|█████████████████████████████████████████████████████████████████████| 37/37 [00:25<00:00,  1.48it/s, loss=0.677]
- Train metrics: accuracy: 0.5789 ; loss: 0.6768
--------------------------------------------------------------------------------
subjets per level= [32, 64, 44, 10]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 4
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (44, 4)
TEST np.zeros((pad_dim,int(features)) (20, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (10, 4)
TEST np.zeros((pad_dim,int(features)) (54, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 40, 12, 4]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 5
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (40, 4)
TEST np.zeros((pad_dim,int(features)) (24, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (12, 4)
TEST np.zeros((pad_dim,int(features)) (52, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (4, 4)
TEST np.zeros((pad_dim,int(features)) (60, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 50, 12, 2]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 5
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (50, 4)
TEST np.zeros((pad_dim,int(features)) (14, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (12, 4)
TEST np.zeros((pad_dim,int(features)) (52, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (2, 4)
TEST np.zeros((pad_dim,int(features)) (62, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 46, 12, 4]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 5
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (46, 4)
TEST np.zeros((pad_dim,int(features)) (18, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (12, 4)
TEST np.zeros((pad_dim,int(features)) (52, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (4, 4)
TEST np.zeros((pad_dim,int(features)) (60, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 48, 20, 8, 2]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 6
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (48, 4)
TEST np.zeros((pad_dim,int(features)) (16, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (20, 4)
TEST np.zeros((pad_dim,int(features)) (44, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (8, 4)
TEST np.zeros((pad_dim,int(features)) (56, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (2, 4)
TEST np.zeros((pad_dim,int(features)) (62, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 44, 10, 2, 2]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 6
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (44, 4)
TEST np.zeros((pad_dim,int(features)) (20, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (10, 4)
TEST np.zeros((pad_dim,int(features)) (54, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (2, 4)
TEST np.zeros((pad_dim,int(features)) (62, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (2, 4)
TEST np.zeros((pad_dim,int(features)) (62, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 44, 10]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 4
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (44, 4)
TEST np.zeros((pad_dim,int(features)) (20, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (10, 4)
TEST np.zeros((pad_dim,int(features)) (54, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 46, 12]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 4
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (46, 4)
TEST np.zeros((pad_dim,int(features)) (18, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (12, 4)
TEST np.zeros((pad_dim,int(features)) (52, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 46, 12, 2]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 5
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (46, 4)
TEST np.zeros((pad_dim,int(features)) (18, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (12, 4)
TEST np.zeros((pad_dim,int(features)) (52, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (2, 4)
TEST np.zeros((pad_dim,int(features)) (62, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 34, 4]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 4
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (34, 4)
TEST np.zeros((pad_dim,int(features)) (30, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (4, 4)
TEST np.zeros((pad_dim,int(features)) (60, 4)
train.py:220: RuntimeWarning: divide by zero encountered in true_divide
  inv_fpr = interp(base_tpr, tpr, 1. / fpr)[125]
- Eval metrics : accuracy: 0.5078 ; loss: 0.6971
--------------------------------------------------------------------------------
subjets per level= [32, 64, 48, 14, 2]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 5
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
--------------------------------------------------------------------------------
subjets per level= [32, 64, 44, 6, 2]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
TEST contents[i].shape= (64, 4)
Number of levels= 5
--------------------------------------------------------------------------------
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (48, 4)
TEST np.zeros((pad_dim,int(features)) (16, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (14, 4)
TEST np.zeros((pad_dim,int(features)) (50, 4)
max_n_level= 64
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
subjets per level= [32, 64, 42, 12]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
Number of levels= 4
--------------------------------------------------------------------------------
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (2, 4)
TEST np.zeros((pad_dim,int(features)) (62, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level= 64
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (44, 4)
--------------------------------------------------------------------------------
TEST np.zeros((pad_dim,int(features)) (20, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
TEST np.zeros((pad_dim,int(features)) (32, 4)
max_n_level and len(levels[i])= 64 64
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST contents[i].shape= (6, 4)
TEST np.zeros((pad_dim,int(features)) (58, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (2, 4)
TEST contents[i].shape= (42, 4)
TEST np.zeros((pad_dim,int(features)) (62, 4)
TEST np.zeros((pad_dim,int(features)) (22, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (12, 4)
TEST np.zeros((pad_dim,int(features)) (52, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 44, 6, 2]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 5
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (44, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 46, 16, 4, 4]
--------------------------------------------------------------------------------
---------------------TEST np.zeros((pad_dim,int(features)) (20, 4)
-----------------------------------------------------------
Number of levels= 6
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
--------------------------------------------------------------------------------
max_n_level= 64
subjets per level= [32, 64, 44, 10]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
max_n_level and len(levels[i])= 64 64
Number of levels= 4
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
TEST contents[i].shape= (6, 4)
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (58, 4)
max_n_level= 64
TEST np.zeros((pad_dim,int(features)) (32, 4)
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (2, 4)
TEST contents[i].shape= (32, 4)
max_n_level and len(levels[i])= 64 64
TEST np.zeros((pad_dim,int(features)) (62, 4)
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (46, 4)
TEST np.zeros((pad_dim,int(features)) (18, 4)
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
TEST np.zeros((pad_dim,int(features)) (0, 4)
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (16, 4)
TEST np.zeros((pad_dim,int(features)) (48, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (44, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
TEST np.zeros((pad_dim,int(features)) (20, 4)
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (4, 4)
TEST np.zeros((pad_dim,int(features)) (60, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (10, 4)
TEST np.zeros((pad_dim,int(features)) (54, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (4, 4)
TEST np.zeros((pad_dim,int(features)) (60, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 36, 10, 2, 2]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 6
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (36, 4)
TEST np.zeros((pad_dim,int(features)) (28, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (10, 4)
TEST np.zeros((pad_dim,int(features)) (54, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (2, 4)
TEST np.zeros((pad_dim,int(features)) (62, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (2, 4)
TEST np.zeros((pad_dim,int(features)) (62, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 48, 8]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 4
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (48, 4)
TEST np.zeros((pad_dim,int(features)) (16, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (8, 4)
TEST np.zeros((pad_dim,int(features)) (56, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 60, 18]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 4
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (60, 4)
TEST np.zeros((pad_dim,int(features)) (4, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (18, 4)
TEST np.zeros((pad_dim,int(features)) (46, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 50, 12, 2]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 5
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (50, 4)
TEST np.zeros((pad_dim,int(features)) (14, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (12, 4)
TEST np.zeros((pad_dim,int(features)) (52, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (2, 4)
TEST np.zeros((pad_dim,int(features)) (62, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 44, 8]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 4
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (44, 4)
TEST np.zeros((pad_dim,int(features)) (20, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (8, 4)
TEST np.zeros((pad_dim,int(features)) (56, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 50, 10]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 4
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (50, 4)
TEST np.zeros((pad_dim,int(features)) (14, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (10, 4)
TEST np.zeros((pad_dim,int(features)) (54, 4)
- Found new best bg rejection = 4.0625
Epoch 9/30
  0%|                                                                                          | 0/37 [00:00<?, ?it/s]
100%|█████████████████████████████████████████████████████████████████████| 37/37 [00:37<00:00,  1.01s/it, loss=0.676]
- Train metrics: accuracy: 0.5757 ; loss: 0.6748
--------------------------------------------------------------------------------
subjets per level= [32, 64, 42, 14]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 4
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (42, 4)
TEST np.zeros((pad_dim,int(features)) (22, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (14, 4)
TEST np.zeros((pad_dim,int(features)) (50, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 36, 14, 4]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 5
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
subjets per level= [32, 64, 46, 14]
max_n_level and len(levels[i])= 64 64
subjets per level= [32, 64, 38, 6]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
TEST contents[i].shape= (64, 4)
Number of levels= 4
--------------------------------------------------------------------------------
Number of levels= 4
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
subjets per level= [32, 64, 36, 8]
TEST np.zeros((pad_dim,int(features)) (0, 4)
max_n_level= 64
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 4
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST contents[i].shape= (36, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
TEST np.zeros((pad_dim,int(features)) (28, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
max_n_level= 64
TEST contents[i].shape= (14, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level= 64
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
max_n_level and len(levels[i])= 64 64
TEST np.zeros((pad_dim,int(features)) (50, 4)
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST contents[i].shape= (4, 4)
max_n_level and len(levels[i])= 64 64
TEST np.zeros((pad_dim,int(features)) (32, 4)
TEST contents[i].shape= (32, 4)
TEST contents[i].shape= (38, 4)
TEST np.zeros((pad_dim,int(features)) (26, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
TEST np.zeros((pad_dim,int(features)) (60, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
////////////////////////////////////////////////////////////////////////////////////////////////////
TEST contents[i].shape= (64, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST np.zeros((pad_dim,int(features)) (0, 4)
TEST contents[i].shape= (6, 4)
max_n_level and len(levels[i])= 64 64
TEST np.zeros((pad_dim,int(features)) (58, 4)
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (46, 4)
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (36, 4)
TEST np.zeros((pad_dim,int(features)) (18, 4)
TEST np.zeros((pad_dim,int(features)) (28, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (14, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
TEST np.zeros((pad_dim,int(features)) (50, 4)
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (8, 4)
TEST np.zeros((pad_dim,int(features)) (56, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 52, 8, 2]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
subjets per level= [32, 64, 48, 8, 2]
Number of levels= 5
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 5
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
subjets per level= [32, 64, 40, 8]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 4
--------------------------------------------------------------------------------
max_n_level= 64
max_n_level= 64
----------------------------------------------------------------------------------------------
------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST contents[i].shape= (32, 4)
max_n_level= 64
TEST np.zeros((pad_dim,int(features)) (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
max_n_level and len(levels[i])= 64 64
////////////////////////////////////////////////////////////////////////////////////////////////////
TEST contents[i].shape= (64, 4)
max_n_level and len(levels[i])= 64 64
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
TEST contents[i].shape= (52, 4)
TEST np.zeros((pad_dim,int(features)) (12, 4)
max_n_level and len(levels[i])= 64 64
////////////////////////////////////////////////////////////////////////////////////////////////////
TEST contents[i].shape= (32, 4)
max_n_level and len(levels[i])= 64 64
////////////////////////////////////////////////////////////////////////////////////////////////////
TEST np.zeros((pad_dim,int(features)) (32, 4)
TEST contents[i].shape= (48, 4)
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (8, 4)
TEST np.zeros((pad_dim,int(features)) (16, 4)
TEST np.zeros((pad_dim,int(features)) (56, 4)
//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////////////////////////
//////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (8, 4)
max_n_level and len(levels[i])= 64 64
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (2, 4)
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (62, 4)
TEST np.zeros((pad_dim,int(features)) (56, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (2, 4)
TEST contents[i].shape= (40, 4)
TEST np.zeros((pad_dim,int(features)) (62, 4)
TEST np.zeros((pad_dim,int(features)) (24, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 46, 18, 2]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 5
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (8, 4)
TEST np.zeros((pad_dim,int(features)) (56, 4)
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (46, 4)
TEST np.zeros((pad_dim,int(features)) (18, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (18, 4)
TEST np.zeros((pad_dim,int(features)) (46, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (2, 4)
TEST np.zeros((pad_dim,int(features)) (62, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 44, 6, 2]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 5
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (44, 4)
TEST np.zeros((pad_dim,int(features)) (20, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (6, 4)
TEST np.zeros((pad_dim,int(features)) (58, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (2, 4)
TEST np.zeros((pad_dim,int(features)) (62, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 58, 22]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 4
--------------------------------------------------------------------------------
subjets per level= [32, 64, 50, 12]
--------------------------------------------------------------------------------
subjets per level= [32, 64, 44, 24]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 4
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 4
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
max_n_level= 64
max_n_level= 64
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
////////////////////////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////////////////////////
TEST contents[i].shape= (32, 4)
max_n_level and len(levels[i])= 64 64
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
////////////////////////////////////////////////////////////////////////////////////////////////////
TEST contents[i].shape= (64, 4)
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
max_n_level and len(levels[i])= 64 64
TEST np.zeros((pad_dim,int(features)) (0, 4)
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (58, 4)
TEST contents[i].shape= (44, 4)
TEST np.zeros((pad_dim,int(features)) (6, 4)
TEST np.zeros((pad_dim,int(features)) (20, 4)
//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
max_n_level and len(levels[i])= 64 64
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (22, 4)
TEST contents[i].shape= (24, 4)
TEST contents[i].shape= (50, 4)
TEST np.zeros((pad_dim,int(features)) (40, 4)
TEST np.zeros((pad_dim,int(features)) (42, 4)
TEST np.zeros((pad_dim,int(features)) (14, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (12, 4)
TEST np.zeros((pad_dim,int(features)) (52, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 48, 10]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 4
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (48, 4)
TEST np.zeros((pad_dim,int(features)) (16, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (10, 4)
TEST np.zeros((pad_dim,int(features)) (54, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 32, 8, 2]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 5
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (8, 4)
TEST np.zeros((pad_dim,int(features)) (56, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (2, 4)
TEST np.zeros((pad_dim,int(features)) (62, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 40, 12]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 4
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (40, 4)
TEST np.zeros((pad_dim,int(features)) (24, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (12, 4)
TEST np.zeros((pad_dim,int(features)) (52, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 42, 12, 6]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 5
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
--------------------------------------------------------------------------------
subjets per level= [32, 64, 34, 4, 4]
max_n_level and len(levels[i])= 64 64
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
TEST contents[i].shape= (32, 4)
Number of levels= 5
--------------------------------------------------------------------------------
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
--------------------------------------------------------------------------------
TEST np.zeros((pad_dim,int(features)) (0, 4)
max_n_level= 64
--------------------------------------------------------------------------------
subjets per level= [32, 64, 36, 2]
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (42, 4)
TEST np.zeros((pad_dim,int(features)) (22, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (12, 4)
TEST np.zeros((pad_dim,int(features)) (52, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (6, 4)
TEST np.zeros((pad_dim,int(features)) (58, 4)
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 4
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
TEST np.zeros((pad_dim,int(features)) (32, 4)
max_n_level and len(levels[i])= 64 64
////////////////////////////////////////////////////////////////////////////////////////////////////
TEST contents[i].shape= (32, 4)
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
////////////////////////////////////////////////////////////////////////////////////////////////////
TEST contents[i].shape= (64, 4)
max_n_level and len(levels[i])= 64 64
TEST np.zeros((pad_dim,int(features)) (0, 4)
TEST contents[i].shape= (36, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
TEST np.zeros((pad_dim,int(features)) (28, 4)
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (34, 4)
TEST np.zeros((pad_dim,int(features)) (30, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (4, 4)
TEST np.zeros((pad_dim,int(features)) (60, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (4, 4)
TEST np.zeros((pad_dim,int(features)) (60, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (2, 4)
TEST np.zeros((pad_dim,int(features)) (62, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 42, 18, 4]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 5
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (42, 4)
TEST np.zeros((pad_dim,int(features)) (22, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (18, 4)
TEST np.zeros((pad_dim,int(features)) (46, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (4, 4)
TEST np.zeros((pad_dim,int(features)) (60, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 40, 10, 2]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 5
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (40, 4)
TEST np.zeros((pad_dim,int(features)) (24, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (10, 4)
TEST np.zeros((pad_dim,int(features)) (54, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (2, 4)
TEST np.zeros((pad_dim,int(features)) (62, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 42, 6]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 4
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (42, 4)
TEST np.zeros((pad_dim,int(features)) (22, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (6, 4)
TEST np.zeros((pad_dim,int(features)) (58, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 46, 12]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 4
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
subjets per level= [32, 64, 48, 10, 4]
subjets per level= [32, 64, 40, 14, 4]
max_n_level and len(levels[i])= 64 64
subjets per level= [32, 64, 32, 8, 2]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
TEST contents[i].shape= (32, 4)
--------------------------------------------------------------------------------
Number of levels= 5
Number of levels= 5
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 5
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////////////////////////
TEST np.zeros((pad_dim,int(features)) (32, 4)
max_n_level and len(levels[i])= 64 64
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
////////////////////////////////////////////////////////////////////////////////////////////////////
TEST contents[i].shape= (64, 4)
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (48, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
TEST np.zeros((pad_dim,int(features)) (16, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
////////////////////////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////////////////////////
TEST contents[i].shape= (32, 4)
max_n_level and len(levels[i])= 64 64
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (10, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
TEST contents[i].shape= (40, 4)
TEST np.zeros((pad_dim,int(features)) (54, 4)
TEST np.zeros((pad_dim,int(features)) (24, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (8, 4)
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (4, 4)
TEST contents[i].shape= (46, 4)
TEST np.zeros((pad_dim,int(features)) (56, 4)
TEST np.zeros((pad_dim,int(features)) (60, 4)
TEST np.zeros((pad_dim,int(features)) (18, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (2, 4)
TEST np.zeros((pad_dim,int(features)) (62, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (12, 4)
TEST np.zeros((pad_dim,int(features)) (52, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (14, 4)
TEST np.zeros((pad_dim,int(features)) (50, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (4, 4)
TEST np.zeros((pad_dim,int(features)) (60, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 44, 8, 4]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 5
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (44, 4)
TEST np.zeros((pad_dim,int(features)) (20, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (8, 4)
TEST np.zeros((pad_dim,int(features)) (56, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (4, 4)
TEST np.zeros((pad_dim,int(features)) (60, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 44, 10]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 4
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (44, 4)
TEST np.zeros((pad_dim,int(features)) (20, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (10, 4)
TEST np.zeros((pad_dim,int(features)) (54, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 40, 12, 4]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 5
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
subjets per level= [32, 64, 50, 12, 2]
--------------------------------------------------------------------------------
max_n_level and len(levels[i])= 64 64
--------------------------------------------------------------------------------
Number of levels= 5
--------------------------------------------------------------------------------
TEST contents[i].shape= (32, 4)
subjets per level= [32, 64, 46, 12, 4]
--------------------------------------------------------------------------------
train.py:220: RuntimeWarning: divide by zero encountered in true_divide
  inv_fpr = interp(base_tpr, tpr, 1. / fpr)[125]
- Eval metrics : accuracy: 0.5052 ; loss: 0.6978
TEST np.zeros((pad_dim,int(features)) (0, 4)
Number of levels= 6
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
////////////////////////////////////////////////////////////////////////////////////////////////////
TEST contents[i].shape= (32, 4)
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (40, 4)
TEST np.zeros((pad_dim,int(features)) max_n_level= 64
(32, 4)
TEST np.zeros((pad_dim,int(features)) (24, 4)
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST contents[i].shape= (64, 4)
max_n_level and len(levels[i])= 64 64
TEST np.zeros((pad_dim,int(features)) (0, 4)
TEST contents[i].shape= (12, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
TEST np.zeros((pad_dim,int(features)) (52, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
max_n_level and len(levels[i])= 64 64
////////////////////////////////////////////////////////////////////////////////////////////////////
TEST contents[i].shape= (50, 4)
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (14, 4)
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (4, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
TEST np.zeros((pad_dim,int(features)) (60, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (12, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
TEST np.zeros((pad_dim,int(features)) (52, 4)
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (46, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
TEST np.zeros((pad_dim,int(features)) (18, 4)
max_n_level and len(levels[i])= 64 64
max_n_level= 64
////////////////////////////////////////////////////////////////////////////////////////////////////
--------------------------------------------------------------------------------
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (2, 4)
TEST contents[i].shape= (12, 4)
TEST np.zeros((pad_dim,int(features)) (62, 4)
TEST np.zeros((pad_dim,int(features)) (52, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
////////////////////////////////////////////////////////////////////////////////////////////////////
TEST contents[i].shape= (32, 4)
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (4, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
TEST np.zeros((pad_dim,int(features)) (60, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (48, 4)
TEST np.zeros((pad_dim,int(features)) (16, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (20, 4)
TEST np.zeros((pad_dim,int(features)) (44, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (8, 4)
TEST np.zeros((pad_dim,int(features)) (56, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (2, 4)
TEST np.zeros((pad_dim,int(features)) (62, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 44, 10, 2, 2]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 6
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (44, 4)
TEST np.zeros((pad_dim,int(features)) (20, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (10, 4)
TEST np.zeros((pad_dim,int(features)) (54, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (2, 4)
TEST np.zeros((pad_dim,int(features)) (62, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (2, 4)
TEST np.zeros((pad_dim,int(features)) (62, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 44, 10]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 4
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (44, 4)
TEST np.zeros((pad_dim,int(features)) (20, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (10, 4)
TEST np.zeros((pad_dim,int(features)) (54, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 46, 12]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 4
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
subjets per level= [32, 64, 46, 12, 2]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 5
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
max_n_level= 64
TEST contents[i].shape= (32, 4)
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
subjets per level= [32, 64, 34, 4]
max_n_level and len(levels[i])= 64 64
--------------------------------------------------------------------------------
TEST contents[i].shape= (32, 4)
--------------------------------------------------------------------------------
Number of levels= 4
--------------------------------------------------------------------------------
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (46, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
TEST np.zeros((pad_dim,int(features)) (18, 4)
max_n_level and len(levels[i])= 64 64
////////////////////////////////////////////////////////////////////////////////////////////////////
TEST contents[i].shape= (32, 4)
max_n_level and len(levels[i])= 64 64
TEST np.zeros((pad_dim,int(features)) (32, 4)
TEST contents[i].shape= (64, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
TEST np.zeros((pad_dim,int(features)) (0, 4)
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (12, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
TEST np.zeros((pad_dim,int(features)) (52, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (46, 4)
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (2, 4)
TEST np.zeros((pad_dim,int(features)) (18, 4)
max_n_level and len(levels[i])= 64 64
TEST np.zeros((pad_dim,int(features)) (62, 4)
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (12, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
TEST np.zeros((pad_dim,int(features)) (52, 4)
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (34, 4)
TEST np.zeros((pad_dim,int(features)) (30, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (4, 4)
TEST np.zeros((pad_dim,int(features)) (60, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 48, 14, 2]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 5
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (48, 4)
TEST np.zeros((pad_dim,int(features)) (16, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (14, 4)
TEST np.zeros((pad_dim,int(features)) (50, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
--------------------------------------------------------------------------------
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (2, 4)
TEST np.zeros((pad_dim,int(features)) (62, 4)
subjets per level= [32, 64, 44, 6, 2]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 5
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
subjets per level= [32, 64, 42, 12]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 4
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (44, 4)
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
TEST np.zeros((pad_dim,int(features)) (20, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 44, 10]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////////////////////////
Number of levels= 4
--------------------------------------------------------------------------------
max_n_level and len(levels[i])= 64 64
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (6, 4)
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (58, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (2, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
TEST np.zeros((pad_dim,int(features)) (62, 4)
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (42, 4)
TEST np.zeros((pad_dim,int(features)) (22, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (12, 4)
TEST np.zeros((pad_dim,int(features)) (52, 4)
max_n_level= 64
--------------------------------------------------------------------------------
///////////////////////////////////////////////////////////////////////////////////////--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
/////////////
subjets per level= [32, 64, 44, 6, 2]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 5
--------------------------------------------------------------------------------
subjets per level= [32, 64, 46, 16, 4, 4]
max_n_level and len(levels[i])= 64 64
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
TEST contents[i].shape= (32, 4)
Number of levels= 6
--------------------------------------------------------------------------------
TEST np.zeros((pad_dim,int(features)) (32, 4)
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level= 64
--------------------------------------------------------------------------------
max_n_level and len(levels[i])= 64 64
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST np.zeros((pad_dim,int(features)) (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
TEST contents[i].shape= (44, 4)
TEST np.zeros((pad_dim,int(features)) (20, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (10, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
TEST np.zeros((pad_dim,int(features)) (54, 4)
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (46, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (44, 4)
TEST np.zeros((pad_dim,int(features)) (18, 4)
TEST np.zeros((pad_dim,int(features)) (20, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (16, 4)
TEST np.zeros((pad_dim,int(features)) (48, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (6, 4)
TEST np.zeros((pad_dim,int(features)) (58, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (4, 4)
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (2, 4)
TEST np.zeros((pad_dim,int(features)) (60, 4)
TEST np.zeros((pad_dim,int(features)) (62, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (4, 4)
TEST np.zeros((pad_dim,int(features)) (60, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 36, 10, 2, 2]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 6
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (36, 4)
TEST np.zeros((pad_dim,int(features)) (28, 4)
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
subjets per level= [32, 64, 48, 8]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 4
subjets per level= [32, 64, 60, 18]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
Number of levels= 4
--------------------------------------------------------------------------------
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (10, 4)
TEST np.zeros((pad_dim,int(features)) (54, 4)
max_n_level= 64
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
max_n_level and len(levemax_n_level and len(levels[i])= 64 64
ls[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
TEST contents[i].shape= (2, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
TEST np.zeros((pad_dim,int(features)) (62, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
max_n_level and len(levels[i])= 64 64
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (48, 4)
TEST contents[i].shape= (60, 4)
TEST contents[i].shape= (2, 4)
TEST np.zeros((pad_dim,int(features)) (4, 4)
TEST np.zeros((pad_dim,int(features)) (62, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
TEST np.zeros((pad_dim,int(features)) (16, 4)
max_n_level and len(levels[i])= 64 64
--------------------------------------------------------------------------------
TEST contents[i].shape= (18, 4)
subjets per level= [32, 64, 50, 12, 2]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
TEST np.zeros((pad_dim,int(features)) (46, 4)
Number of levels= 5
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (8, 4)
TEST np.zeros((pad_dim,int(features)) (56, 4)
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (50, 4)
TEST np.zeros((pad_dim,int(features)) (14, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (12, 4)
TEST np.zeros((pad_dim,int(features)) (52, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (2, 4)
TEST np.zeros((pad_dim,int(features)) (62, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 44, 8]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 4
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (44, 4)
TEST np.zeros((pad_dim,int(features)) (20, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (8, 4)
TEST np.zeros((pad_dim,int(features)) (56, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 50, 10]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 4
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (50, 4)
TEST np.zeros((pad_dim,int(features)) (14, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (10, 4)
TEST np.zeros((pad_dim,int(features)) (54, 4)
Epoch 10/30
  0%|                                                                                          | 0/37 [00:00<?, ?it/s]
100%|█████████████████████████████████████████████████████████████████████| 37/37 [00:30<00:00,  1.22it/s, loss=0.674]
- Train metrics: accuracy: 0.5839 ; loss: 0.6730
--------------------------------------------------------------------------------
subjets per level= [32, 64, 36, 14, 4]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 5
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (36, 4)
TEST np.zeros((pad_dim,int(features)) (28, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (14, 4)
TEST np.zeros((pad_dim,int(features)) (50, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (4, 4)
TEST np.zeros((pad_dim,int(features)) (60, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 42, 14]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 4
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
//////////////////////////////////////////////////////////////////////////////////////////////////--------------------------------------------------------------------------------
//
subjets per level= [32, 64, 46, 14]
--------------------------------------------------------------------------------
max_n_level and len(levels[i])= 64 64
--------------------------------------------------------------------------------
Number of levels= 4
--------------------------------------------------------------------------------
TEST contents[i].shape= (42, 4)
TEST np.zeros((pad_dim,int(features)) (22, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (14, 4)
TEST np.zeros((pad_dim,int(features)) (50, 4)
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (46, 4)
TEST np.zeros((pad_dim,int(features)) (18, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (14, 4)
TEST np.zeros((pad_dim,int(features)) (50, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 48, 8, 2]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 5
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (48, 4)
TEST np.zeros((pad_dim,int(features)) (16, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (8, 4)
TEST np.zeros((pad_dim,int(features)) (56, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 38, 6]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 4
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (2, 4)
max_n_level= 64
TEST np.zeros((pad_dim,int(features)) (62, 4)
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (38, 4)
TEST np.zeros((pad_dim,int(features)) (26, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (6, 4)
TEST np.zeros((pad_dim,int(features)) (58, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 52, 8, 2]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 5
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (52, 4)
TEST np.zeros((pad_dim,int(features)) (12, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (8, 4)
TEST np.zeros((pad_dim,int(features)) (56, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (2, 4)
TEST np.zeros((pad_dim,int(features)) (62, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 46, 18, 2]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 5
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (46, 4)
TEST np.zeros((pad_dim,int(features)) (18, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (18, 4)
TEST np.zeros((pad_dim,int(features)) (46, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (2, 4)
TEST np.zeros((pad_dim,int(features)) (62, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 36, 8]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 4
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (36, 4)
TEST np.zeros((pad_dim,int(features)) (28, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (8, 4)
TEST np.zeros((pad_dim,int(features)) (56, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 40, 8]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 4
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (40, 4)
TEST np.zeros((pad_dim,int(features)) (24, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (8, 4)
TEST np.zeros((pad_dim,int(features)) (56, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 44, 6, 2]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 5
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (44, 4)
TEST np.zeros((pad_dim,int(features)) (20, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (6, 4)
TEST np.zeros((pad_dim,int(features)) (58, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (2, 4)
TEST np.zeros((pad_dim,int(features)) (62, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 58, 22]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 4
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (58, 4)
TEST np.zeros((pad_dim,int(features)) (6, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (22, 4)
TEST np.zeros((pad_dim,int(features)) (42, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 48, 10]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 4
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (48, 4)
TEST np.zeros((pad_dim,int(features)) (16, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (10, 4)
TEST np.zeros((pad_dim,int(features)) (54, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 50, 12]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 4
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (50, 4)
TEST np.zeros((pad_dim,int(features)) (14, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (12, 4)
TEST np.zeros((pad_dim,int(features)) (52, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 44, 24]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 4
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (44, 4)
TEST np.zeros((pad_dim,int(features)) (20, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (24, 4)
TEST np.zeros((pad_dim,int(features)) (40, 4)
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
subjets per level= [32, 64, 32, 8, 2]
subjets per level= [32, 64, 40, 12]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 4
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (40, 4)
TEST np.zeros((pad_dim,int(features)) (24, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (12, 4)
TEST np.zeros((pad_dim,int(features)) (52, 4)
--------------------------------------------------------------------------------
Number of levels= 5
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
subjets per level= [32, 64, 42, 12, 6]
--------------------------------------------------------------------------------
subjets per level= [32, 64, 34, 4, 4]
max_n_level and len(levels[i])= 64 64
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
TEST contents[i].shape= (32, 4)
Number of levels= 5
Number of levels= 5
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
subjets per level= [32, 64, 42, 18, 4]
TEST np.zeros((pad_dim,int(features)) (32, 4)
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
max_n_level= 64
Number of levels= 5
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////////////////////////
--------------------------------------------------------------------------------
max_n_level and len(levels[i])= 64 64
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (8, 4)
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (56, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
max_n_level= 64
////////////////////////////////////////////////////////////////////////////////////////////////////
--------------------------------------------------------------------------------
TEST contents[i].shape= (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (2, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////////////////////////
TEST np.zeros((pad_dim,int(features)) (62, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (42, 4)
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
max_n_level and len(levels[i])= 64 64
TEST np.zeros((pad_dim,int(features)) (22, 4)
TEST contents[i].shape= (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
TEST np.zeros((pad_dim,int(features)) (32, 4)
max_n_level and len(levels[i])= 64 64
////////////////////////////////////////////////////////////////////////////////////////////////////
TEST contents[i].shape= (34, 4)
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (12, 4)
TEST np.zeros((pad_dim,int(features)) (30, 4)
TEST np.zeros((pad_dim,int(features)) (52, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
////////////////////////////////////////////////////////////////////////////////////////////////////
TEST contents[i].shape= (64, 4)
max_n_level and len(levels[i])= 64 64
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (6, 4)
TEST contents[i].shape= (42, 4)
TEST np.zeros((pad_dim,int(features)) (58, 4)
TEST np.zeros((pad_dim,int(features)) (22, 4)
TEST contents[i].shape= (4, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST np.zeros((pad_dim,int(features)) (60, 4)
TEST contents[i].shape= (18, 4)
TEST np.zeros((pad_dim,int(features)) (46, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (4, 4)
TEST contents[i].shape= (4, 4)
TEST np.zeros((pad_dim,int(features)) (60, 4)
TEST np.zeros((pad_dim,int(features)) (60, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 36, 2]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 4
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (36, 4)
TEST np.zeros((pad_dim,int(features)) (28, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (2, 4)
TEST np.zeros((pad_dim,int(features)) (62, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 40, 10, 2]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 5
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (40, 4)
TEST np.zeros((pad_dim,int(features)) (24, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (10, 4)
TEST np.zeros((pad_dim,int(features)) (54, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (2, 4)
TEST np.zeros((pad_dim,int(features)) (62, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 42, 6]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 4
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
subjets per level= [32, 64, 46, 12]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 4
--------------------------------------------------------------------------------
subjets per level= [32, 64, 40, 14, 4]
--------------------------------------------------------------------------------
subjets per level= [32, 64, 32, 8, 2]
--------------------------------------------------------------------------------
max_n_level and len(levels[i])= 64 64
--------------------------------------------------------------------------------
Number of levels= 5
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
max_n_level= 64
TEST contents[i].shape= (42, 4)
--------------------------------------------------------------------------------
Number of levels= 5
--------------------------------------------------------------------------------
TEST np.zeros((pad_dim,int(features)) (22, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
max_n_level= 64
////////////////////////////////////////////////////////////////////////////////////////////////////
--------------------------------------------------------------------------------
max_n_level and len(levels[i])= 64 64
////////////////////////////////////////////////////////////////////////////////////////////////////
TEST contents[i].shape= (6, 4)
max_n_level and len(levels[i])= 64 64
TEST np.zeros((pad_dim,int(features)) (58, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (8, 4)
TEST np.zeros((pad_dim,int(features)) (56, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
max_n_level= 64
--------------------------------------------------------------------------------
TEST contents[i].shape= (2, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
TEST np.zeros((pad_dim,int(features)) (62, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
TEST np.zeros((pad_dim,int(features)) (32, 4)
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (46, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST np.zeros((pad_dim,int(features)) (18, 4)
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////////////////////////
--------------------------------------------------------------------------------
max_n_level and len(levels[i])= 64 64
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (40, 4)
TEST contents[i].shape= (12, 4)
subjets per level= [32, 64, 48, 10, 4]
--------------------------------------------------------------------------------
TEST np.zeros((pad_dim,int(features)) (24, 4)
TEST np.zeros((pad_dim,int(features)) (52, 4)
--------------------------------------------------------------------------------
Number of levels= 5
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (14, 4)
TEST np.zeros((pad_dim,int(features)) (50, 4)
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (4, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
TEST np.zeros((pad_dim,int(features)) (60, 4)
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (48, 4)
TEST np.zeros((pad_dim,int(features)) (16, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (10, 4)
TEST np.zeros((pad_dim,int(features)) (54, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (4, 4)
TEST np.zeros((pad_dim,int(features)) (60, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 44, 8, 4]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 5
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (44, 4)
TEST np.zeros((pad_dim,int(features)) (20, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (8, 4)
TEST np.zeros((pad_dim,int(features)) (56, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (4, 4)
TEST np.zeros((pad_dim,int(features)) (60, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 44, 10]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 4
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (44, 4)
TEST np.zeros((pad_dim,int(features)) (20, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (10, 4)
TEST np.zeros((pad_dim,int(features)) (54, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 40, 12, 4]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 5
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
subjets per level= [32, 64, 50, 12, 2]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
subjets per level= [32, 64, 46, 12, 4]
Number of levels= 5
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 5
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
max_n_level= 64
max_n_level= 64
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
max_n_level and len(levels[i])= 64 64
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST contents[i].shape= (32, 4)
TEST contents[i].shape= (40, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
TEST np.zeros((pad_dim,int(features)) (24, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
max_n_level and len(levels[i])= 64 64
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (12, 4)
TEST contents[i].shape= (64, 4)
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (52, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
max_n_level and len(levels[i])= 64 64
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (4, 4)
TEST contents[i].shape= (46, 4)
TEST contents[i].shape= (50, 4)
TEST np.zeros((pad_dim,int(features)) (60, 4)
TEST np.zeros((pad_dim,int(features)) (18, 4)
TEST np.zeros((pad_dim,int(features)) (14, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (12, 4)
TEST contents[i].shape= (12, 4)
TEST np.zeros((pad_dim,int(features)) (52, 4)
TEST np.zeros((pad_dim,int(features)) (52, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (2, 4)
TEST contents[i].shape= (4, 4)
TEST np.zeros((pad_dim,int(features)) (60, 4)
TEST np.zeros((pad_dim,int(features)) (62, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 48, 20, 8, 2]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 6
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (48, 4)
TEST np.zeros((pad_dim,int(features)) (16, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (20, 4)
TEST np.zeros((pad_dim,int(features)) (44, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (8, 4)
TEST np.zeros((pad_dim,int(features)) (56, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (2, 4)
TEST np.zeros((pad_dim,int(features)) (62, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 44, 10, 2, 2]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 6
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (44, 4)
TEST np.zeros((pad_dim,int(features)) (20, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (10, 4)
TEST np.zeros((pad_dim,int(features)) (54, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (2, 4)
TEST np.zeros((pad_dim,int(features)) (62, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (2, 4)
TEST np.zeros((pad_dim,int(features)) (62, 4)
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
subjets per level= [32, 64, 44, 10]
subjets per level= [32, 64, 46, 12]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 4
Number of levels= 4
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
max_n_level= 64
max_n_level= 64
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
////////////////////////////////////////////////////////////////////////////////////////////////////
TEST contents[i].shape= (64, 4)
max_n_level and len(levels[i])= 64 64
TEST np.zeros((pad_dim,int(features)) (0, 4)
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
///////////////////////////////////////////////////////////////////////////////TEST contents[i].shape= (44, 4)
/////////////////////
TEST np.zeros((pad_dim,int(features)) (20, 4)
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (46, 4)
TEST np.zeros((pad_dim,int(features)) (18, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (10, 4)
TEST contents[i].shape= (12, 4)
TEST np.zeros((pad_dim,int(features)) (54, 4)
TEST np.zeros((pad_dim,int(features)) (52, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 46, 12, 2]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 5
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (46, 4)
TEST np.zeros((pad_dim,int(features)) (18, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (12, 4)
TEST np.zeros((pad_dim,int(features)) (52, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (2, 4)
TEST np.zeros((pad_dim,int(features)) (62, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 34, 4]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 4
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (34, 4)
TEST np.zeros((pad_dim,int(features)) (30, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (4, 4)
TEST np.zeros((pad_dim,int(features)) (60, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 42, 12]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 4
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (42, 4)
TEST np.zeros((pad_dim,int(features)) (22, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (12, 4)
TEST np.zeros((pad_dim,int(features)) (52, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 44, 6, 2]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 5
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 48, 14, 2]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 5
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (44, 4)
TEST np.zeros((pad_dim,int(features)) (20, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (6, 4)
max_n_level= 64
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
TEST np.zeros((pad_dim,int(features)) (58, 4)
subjets per level= [32, 64, 44, 6, 2]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 5
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (2, 4)
max_n_level and len(levels[i])= 64 64
TEST np.zeros((pad_dim,int(features)) (62, 4)
TEST contents[i].shape= (32, 4)
max_n_level= 64
--------------------------------------------------------------------------------
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
TEST np.zeros((pad_dim,int(features)) (0, 4)
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
TEST np.zeros((pad_dim,int(features)) (0, 4)
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (44, 4)
TEST np.zeros((pad_dim,int(features)) (20, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (48, 4)
TEST contents[i].shape= (6, 4)
TEST np.zeros((pad_dim,int(features)) (16, 4)
TEST np.zeros((pad_dim,int(features)) (58, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (2, 4)
TEST contents[i].shape= (14, 4)
TEST np.zeros((pad_dim,int(features)) (62, 4)
TEST np.zeros((pad_dim,int(features)) (50, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (2, 4)
TEST np.zeros((pad_dim,int(features)) (62, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 46, 16, 4, 4]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 6
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (46, 4)
TEST np.zeros((pad_dim,int(features)) (18, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (16, 4)
TEST np.zeros((pad_dim,int(features)) (48, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (4, 4)
TEST np.zeros((pad_dim,int(features)) (60, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (4, 4)
TEST np.zeros((pad_dim,int(features)) (60, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 44, 10]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 4
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (44, 4)
TEST np.zeros((pad_dim,int(features)) (20, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (10, 4)
TEST np.zeros((pad_dim,int(features)) (54, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 36, 10, 2, 2]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 6
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
--------------------------------------------------------------------------------
subjets per level= [32, 64, 48, 8]
max_n_level and len(levels[i])= 64 64
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 4
TEST contents[i].shape= (64, 4)
--------------------------------------------------------------------------------
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (36, 4)
TEST np.zeros((pad_dim,int(features)) (28, 4)
max_n_level= 64
////////////////////////////////////////////////////////////////////////////////////////////////////
--------------------------------------------------------------------------------
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (10, 4)
TEST np.zeros((pad_dim,int(features)) (54, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
--------------------------------------------------------------------------------
TEST contents[i].shape= (2, 4)
TEST np.zeros((pad_dim,int(features)) (62, 4)
max_n_level and len(levels[i])= 64 64
subjets per level= [32, 64, 60, 18]
TEST contents[i].shape= (32, 4)
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
Number of levels= 4
TEST np.zeros((pad_dim,int(features)) (32, 4)
--------------------------------------------------------------------------------
max_n_level and len(lev////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level= 64
els[i])= 64 64
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
subjets per level= [32, 64, 50, 12, 2]
TEST contents[i].shape= (2, 4)
max_n_level and len(levels[i])= 64 64
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
TEST contents[i].shape= (64, 4)
Number of levels= 5
TEST np.zeros((pad_dim,int(features)) (62, 4)
--------------------------------------------------------------------------------
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
///////////////////////////////////////////////TEST np.zeros((pad_dim,int(features)) (32, 4)
/////////////////////////////////////////////////////
max_n_level= 64
--------------------------------------------------------------------------------
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (48, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////////////////////////
TEST np.zeros((pad_dim,int(features)) (16, 4)
max_n_level and len(levels[i])= 64 64
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (60, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (8, 4)
max_n_level and len(levels[i])= 64 64
TEST np.zeros((pad_dim,int(features)) (4, 4)
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (56, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (50, 4)
TEST np.zeros((pad_dim,int(features)) (14, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
////////////////////////////////////////////////////////////////////////////////////////////////////
TEST contents[i].shape= (18, 4)
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (12, 4)
TEST np.zeros((pad_dim,int(features)) (46, 4)
TEST np.zeros((pad_dim,int(features)) (52, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (2, 4)
TEST np.zeros((pad_dim,int(features)) (62, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 44, 8]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 4
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (44, 4)
TEST np.zeros((pad_dim,int(features)) (20, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (8, 4)
TEST np.zeros((pad_dim,int(features)) (56, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 50, 10]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 4
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (50, 4)
TEST np.zeros((pad_dim,int(features)) (14, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (10, 4)
TEST np.zeros((pad_dim,int(features)) (54, 4)
train.py:220: RuntimeWarning: divide by zero encountered in true_divide
  inv_fpr = interp(base_tpr, tpr, 1. / fpr)[125]
- Eval metrics : accuracy: 0.5208 ; loss: 0.6980
Checkpoint Directory exists!
Epoch 11/30

 84%|█████████████████████████████████████████████████████████▊           | 31/37 [00:29<00:02,  2.24it/s, loss=0.671]
--------------------------------------------------------------------------------
subjets per level= [32, 64, 36, 14, 4]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 5
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (36, 4)
TEST np.zeros((pad_dim,int(features)) (28, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (14, 4)
--------------------------------------------------------------------------------
TEST np.zeros((pad_dim,int(features)) (50, 4)
subjets per level= [32, 64, 46, 14]
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
--------------------------------------------------------------------------------
Number of levels= 4
max_n_level and len(levels[i])= 64 64
--------------------------------------------------------------------------------
TEST contents[i].shape= (4, 4)
TEST np.zeros((pad_dim,int(features)) (60, 4)
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
subjets per level= [32, 64, 42, 14]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 4
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (46, 4)
TEST np.zeros((pad_dim,int(features)) (18, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (14, 4)
TEST np.zeros((pad_dim,int(features)) (50, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (42, 4)
TEST np.zeros((pad_dim,int(features)) (22, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (14, 4)
TEST np.zeros((pad_dim,int(features)) (50, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 48, 8, 2]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 5
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (48, 4)
TEST np.zeros((pad_dim,int(features)) (16, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (8, 4)
TEST np.zeros((pad_dim,int(features)) (56, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (2, 4)
TEST np.zeros((pad_dim,int(features)) (62, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 52, 8, 2]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 5
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
subjets per level= [32, 64, 38, 6]
subjets per level= [32, 64, 46, 18, 2]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 4
Number of levels= 5
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
TEST contents[i].shape= (52, 4)
max_n_level= 64
--------------------------------------------------------------------------------
TEST np.zeros((pad_dim,int(features)) (12, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
max_n_level and len(levels[i])= 64 64
max_n_level and len(levels[i])= 64 64
TEST np.zeros((pad_dim,int(features)) (0, 4)
TEST contents[i].shape= (8, 4)
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (56, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
TEST np.zeros((pad_dim,int(features)) (32, 4)
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (38, 4)
TEST np.zeros((pad_dim,int(features)) (26, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (6, 4)
max_n_level and len(levels[i])= 64 64
TEST np.zeros((pad_dim,int(features)) (58, 4)
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (2, 4)
TEST np.zeros((pad_dim,int(features)) (62, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (46, 4)
TEST np.zeros((pad_dim,int(features)) (18, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (18, 4)
TEST np.zeros((pad_dim,int(features)) (46, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (2, 4)
TEST np.zeros((pad_dim,int(features)) (62, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 36, 8]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 4
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (36, 4)
TEST np.zeros((pad_dim,int(features)) (28, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (8, 4)
TEST np.zeros((pad_dim,int(features)) (56, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 40, 8]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 4
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (40, 4)
TEST np.zeros((pad_dim,int(features)) (24, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (8, 4)
TEST np.zeros((pad_dim,int(features)) (56, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 44, 6, 2]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 5
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (44, 4)
TEST np.zeros((pad_dim,int(features)) (20, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (6, 4)
TEST np.zeros((pad_dim,int(features)) (58, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (2, 4)
TEST np.zeros((pad_dim,int(features)) (62, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 58, 22]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 4
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (58, 4)
TEST np.zeros((pad_dim,int(features)) (6, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (22, 4)
TEST np.zeros((pad_dim,int(features)) (42, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 48, 10]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 4
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (48, 4)
TEST np.zeros((pad_dim,int(features)) (16, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (10, 4)
TEST np.zeros((pad_dim,int(features)) (54, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 50, 12]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 4
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
/////////////////////////////////////////////////////////////////////////////////////////////////--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
///
subjets per level= [32, 64, 44, 24]
subjets per level= [32, 64, 32, 8, 2]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
max_n_level and len(levels[i])= 64 64
Number of levels= 4
Number of levels= 5
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
max_n_level= 64
--------------------------------------------------------------------------------
TEST contents[i].shape= (50, 4)
TEST np.zeros((pad_dim,int(features)) (14, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (12, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
TEST np.zeros((pad_dim,int(features)) (52, 4)
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (44, 4)
max_n_level= 64
--------------------------------------------------------------------------------
TEST np.zeros((pad_dim,int(features)) (20, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
////////////////////////////////////////////////////////////////////////////////////////////////////
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (24, 4)
TEST np.zeros((pad_dim,int(features)) (40, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (8, 4)
TEST np.zeros((pad_dim,int(features)) (56, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (2, 4)
TEST np.zeros((pad_dim,int(features)) (62, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 40, 12]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 4
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (40, 4)
TEST np.zeros((pad_dim,int(features)) (24, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (12, 4)
TEST np.zeros((pad_dim,int(features)) (52, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 42, 12, 6]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 5
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (42, 4)
TEST np.zeros((pad_dim,int(features)) (22, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (12, 4)
TEST np.zeros((pad_dim,int(features)) (52, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (6, 4)
TEST np.zeros((pad_dim,int(features)) (58, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 34, 4, 4]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 5
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
/////////////////////////////////////////////////--------------------------------------------------------------------------------
///////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
subjets per level= [32, 64, 36, 2]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 4
TEST np.zeros((pad_dim,int(features)) (32, 4)
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (34, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST np.zeros((pad_dim,int(features)) (30, 4)
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
////////////////////////////////////////////////////////////////////////////////////////////////////
TEST contents[i].shape= (4, 4)
max_n_level and len(levels[i])= 64 64
TEST np.zeros((pad_dim,int(features)) (60, 4)
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (4, 4)
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (36, 4)
TEST np.zeros((pad_dim,int(features)) (28, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (2, 4)
TEST np.zeros((pad_dim,int(features)) (62, 4)
TEST np.zeros((pad_dim,int(features)) (60, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 42, 18, 4]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 5
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (42, 4)
TEST np.zeros((pad_dim,int(features)) (22, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (18, 4)
TEST np.zeros((pad_dim,int(features)) (46, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (4, 4)
TEST np.zeros((pad_dim,int(features)) (60, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 40, 10, 2]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 5
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (40, 4)
TEST np.zeros((pad_dim,int(features)) (24, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (10, 4)
TEST np.zeros((pad_dim,int(features)) (54, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (2, 4)
TEST np.zeros((pad_dim,int(features)) (62, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 42, 6]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 4
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (42, 4)
TEST np.zeros((pad_dim,int(features)) (22, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (6, 4)
TEST np.zeros((pad_dim,int(features)) (58, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 46, 12]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 4
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 32, 8, 2]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 5
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
max_n_level= 64
TEST contents[i].shape= (64, 4)
--------------------------------------------------------------------------------
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST contents[i].shape= (46, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
TEST np.zeros((pad_dim,int(features)) (18, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST contents[i].shape= (12, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
TEST np.zeros((pad_dim,int(features)) (52, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (8, 4)
TEST np.zeros((pad_dim,int(features)) (56, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 40, 14, 4]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 5
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (2, 4)
TEST np.zeros((pad_dim,int(features)) (62, 4)
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (40, 4)
TEST np.zeros((pad_dim,int(features)) (24, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (14, 4)
TEST np.zeros((pad_dim,int(features)) (50, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (4, 4)
TEST np.zeros((pad_dim,int(features)) (60, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 48, 10, 4]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 5
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (48, 4)
TEST np.zeros((pad_dim,int(features)) (16, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (10, 4)
TEST np.zeros((pad_dim,int(features)) (54, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (4, 4)
TEST np.zeros((pad_dim,int(features)) (60, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 44, 8, 4]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 5
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (44, 4)
TEST np.zeros((pad_dim,int(features)) (20, 4)
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (8, 4)
subjets per level= [32, 64, 44, 10]
TEST np.zeros((pad_dim,int(features)) (56, 4)
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 4
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (4, 4)
TE--------------------------------------------------------------------------------
ST np.zeros((pad_dim,int(features)) (60, 4)
subjets per level= [32, 64, 40, 12, 4]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 5
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level= 64
max_n_level and len(levels[i])= 64 64
--------------------------------------------------------------------------------
TEST contents[i].shape= (40, 4)
TEST np.zeros((pad_dim,int(features)) (24, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (12, 4)
max_n_level and len(levels[i])= 64 64
TEST np.zeros((pad_dim,int(features)) (52, 4)
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (4, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
TEST np.zeros((pad_dim,int(features)) (60, 4)
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (44, 4)
TEST np.zeros((pad_dim,int(features)) (20, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 50, 12, 2]
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
--------------------------------------------------------------------------------
Number of levels= 5
max_n_level and len(levels[i])= 64 64
--------------------------------------------------------------------------------
TEST contents[i].shape= (10, 4)
TEST np.zeros((pad_dim,int(features)) (54, 4)
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (50, 4)
TEST np.zeros((pad_dim,int(features)) (14, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (12, 4)
TEST np.zeros((pad_dim,int(features)) (52, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (2, 4)
TEST np.zeros((pad_dim,int(features)) (62, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 46, 12, 4]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 5
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 48, 20, 8, 2]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 6
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (46, 4)
TEST np.zeros((pad_dim,int(features)) (18, 4)
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (12, 4)
TEST np.zeros((pad_dim,int(features)) (52, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
max_n_level and len(levels[i])= 64 64
////////////////////////////////////////////////////////////////////////////////////////////////////
TEST contents[i].shape= (4, 4)
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (48, 4)
TEST np.zeros((pad_dim,int(features)) (60, 4)
TEST np.zeros((pad_dim,int(features)) (16, 4)
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
subjets per level= [32, 64, 44, 10, 2, 2]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 6
TEST contents[i].shape= (20, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 44, 10]
TEST np.zeros((pad_dim,int(features)) (44, 4)
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 4
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
max_n_level= 64
TEST contents[i].shape= (8, 4)
--------------------------------------------------------------------------------
TEST np.zeros((pad_dim,int(features)) (56, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (2, 4)
max_n_level and len(levels[i])= 64 64
TEST np.zeros((pad_dim,int(features)) (62, 4)
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (44, 4)
max_n_level= 64
TEST np.zeros((pad_dim,int(features)) (20, 4)
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (10, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
TEST np.zeros((pad_dim,int(features)) (54, 4)
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (2, 4)
TEST np.zeros((pad_dim,int(features)) (62, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST contents[i].shape= (2, 4)
TEST np.zeros((pad_dim,int(features)) (62, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (44, 4)
TEST np.zeros((pad_dim,int(features)) (20, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (10, 4)
TEST np.zeros((pad_dim,int(features)) (54, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 46, 12]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 4
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (46, 4)
TEST np.zeros((pad_dim,int(features)) (18, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (12, 4)
TEST np.zeros((pad_dim,int(features)) (52, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 46, 12, 2]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 5
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
//////////////////////////////////////////////////////////////////////////////////////////////--------------------------------------------------------------------------------
//////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
subjets per level= [32, 64, 34, 4]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
TEST np.zeros((pad_dim,int(features)) (32, 4)
Number of levels= 4
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (46, 4)
TEST np.zeros((pad_dim,int(features)) (18, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
TEST np.zeros((pad_dim,int(features)) (32, 4)
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (12, 4)
TEST np.zeros((pad_dim,int(features)) (52, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
////////////////////////////////////////////////////////////////////////////////////////////////////
TEST contents[i].shape= (64, 4)
max_n_level and len(levels[i])= 64 64
TEST np.zeros((pad_dim,int(features)) (0, 4)
TEST contents[i].shape= (2, 4)
TEST np.zeros((pad_dim,int(features)) (62, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (34, 4)
TEST np.zeros((pad_dim,int(features)) (30, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (4, 4)
100%|█████████████████████████████████████████████████████████████████████| 37/37 [00:29<00:00,  1.27it/s, loss=0.671]
- Train metrics: accuracy: 0.5806 ; loss: 0.6704
--------------------------------------------------------------------------------
subjets per level= [32, 64, 48, 14, 2]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 5
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
///////////////////////////////////////////////////////////////////////////////////////////////--------------------------------------------------------------------------------
subjets per level= [32, 64, 42, 12]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 4
--------------------------------------------------------------------------------
/////
--------------------------------------------------------------------------------
subjets per level= [32, 64, 44, 6, 2]
max_n_level and len(levels[i])= 64 64
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
TEST contents[i].shape= (48, 4)
Number of levels= 5
--------------------------------------------------------------------------------
TEST np.zeros((pad_dim,int(features)) (16, 4)
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level= 64
--------------------------------------------------------------------------------
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (14, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
TEST np.zeros((pad_dim,int(features)) (50, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (2, 4)
TEST np.zeros((pad_dim,int(features)) (62, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (44, 4)
TEST np.zeros((pad_dim,int(features)) (20, 4)
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (6, 4)
TEST np.zeros((pad_dim,int(features)) (58, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
////////////////////////////////////////////////////////////////////////////////////////////////////
TEST contents[i].shape= (64, 4)
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (2, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
TEST np.zeros((pad_dim,int(features)) (62, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (42, 4)
TEST np.zeros((pad_dim,int(features)) (22, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (12, 4)
TEST np.zeros((pad_dim,int(features)) (52, 4)
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
subjets per level= [32, 64, 46, 16, 4, 4]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 6
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 44, 10]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 4
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (46, 4)
TEST np.zeros((pad_dim,int(features)) (18, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (16, 4)
TEST np.zeros((pad_dim,int(features)) (48, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (4, 4)
TEST np.zeros((pad_dim,int(features)) (60, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
subjets per level= [32, 64, 44, 6, 2]
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (4, 4)
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
TEST np.zeros((pad_dim,int(features)) (60, 4)
Number of levels= 5
--------------------------------------------------------------------------------
TEST contents[i].shape= (44, 4)
TEST np.zeros((pad_dim,int(features)) (20, 4)
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
////////////////////////////////////////////////////////////////////////////////////////////////////
TEST contents[i].shape= (32, 4)
max_n_level and len(levels[i])= 64 64
TEST np.zeros((pad_dim,int(features)) (32, 4)
TEST contents[i].shape= (10, 4)
TEST np.zeros((pad_dim,int(features)) (54, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (44, 4)
TEST np.zeros((pad_dim,int(features)) (20, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (6, 4)
TEST np.zeros((pad_dim,int(features)) (58, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (2, 4)
TEST np.zeros((pad_dim,int(features)) (62, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 36, 10, 2, 2]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 6
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (36, 4)
TEST np.zeros((pad_dim,int(features)) (28, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (10, 4)
TEST np.zeros((pad_dim,int(features)) (54, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (2, 4)
TEST np.zeros((pad_dim,int(features)) (62, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (2, 4)
TEST np.zeros((pad_dim,int(features)) (62, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 48, 8]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 4
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (48, 4)
TEST np.zeros((pad_dim,int(features)) (16, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (8, 4)
TEST np.zeros((pad_dim,int(features)) (56, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 60, 18]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 4
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (60, 4)
TEST np.zeros((pad_dim,int(features)) (4, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (18, 4)
TEST np.zeros((pad_dim,int(features)) (46, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 50, 12, 2]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 5
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (50, 4)
TEST np.zeros((pad_dim,int(features)) (14, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (12, 4)
TEST np.zeros((pad_dim,int(features)) (52, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (2, 4)
TEST np.zeros((pad_dim,int(features)) (62, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 44, 8]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 4
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (44, 4)
train.py:220: RuntimeWarning: divide by zero encountered in true_divide
  inv_fpr = interp(base_tpr, tpr, 1. / fpr)[125]
- Eval metrics : accuracy: 0.5286 ; loss: 0.6987
- Found new best bg rejection = 4.0625
Epoch 12/30
  0%|                                                                                          | 0/37 [00:00<?, ?it/s]
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (8, 4)
TEST np.zeros((pad_dim,int(features)) (56, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 50, 10]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 4
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (50, 4)
TEST np.zeros((pad_dim,int(features)) (14, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (10, 4)
TEST np.zeros((pad_dim,int(features)) (54, 4)
100%|█████████████████████████████████████████████████████████████████████| 37/37 [00:20<00:00,  1.83it/s, loss=0.669]
- Train metrics: accuracy: 0.5905 ; loss: 0.6675
--------------------------------------------------------------------------------
subjets per level= [32, 64, 36, 14, 4]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 5
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (36, 4)
TEST np.zeros((pad_dim,int(features)) (28, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (14, 4)
--------------------------------------------------------------------------------
TEST np.zeros((pad_dim,int(features)) (50, 4)
subjets per level= [32, 64, 46, 14]
////////////////////////////////////////////////////////////////////////////////////////////////////
--------------------------------------------------------------------------------
max_n_level and len(levels[i])= 64 64
--------------------------------------------------------------------------------
TEST contents[i].shape= (4, 4)
Number of levels= 4
TEST np.zeros((pad_dim,int(features)) (60, 4)
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
subjets per level= [32, 64, 48, 8, 2]
subjets per level= [32, 64, 42, 14]
TEST contents[i].shape= (64, 4)
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 5
Number of levels= 4
--------------------------------------------------------------------------------
TEST np.zeros((pad_dim,int(features)) (0, 4)
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (46, 4)
max_n_level= 64
max_n_level= 64
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
TEST np.zeros((pad_dim,int(features)) (18, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
max_n_level and len(levels[i])= 64 64
TEST np.zeros((pad_dim,int(features)) (32, 4)
TEST contents[i].shape= (14, 4)
TEST np.zeros((pad_dim,int(features)) (50, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (48, 4)
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (42, 4)
TEST np.zeros((pad_dim,int(features)) (16, 4)
TEST np.zeros((pad_dim,int(features)) (22, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (8, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
TEST np.zeros((pad_dim,int(features)) (56, 4)
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (14, 4)
TEST np.zeros((pad_dim,int(features)) (50, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (2, 4)
TEST np.zeros((pad_dim,int(features)) (62, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 46, 18, 2]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 5
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
subjets per level= [32, 64, 38, 6]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 4
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 52, 8, 2]
max_n_level= 64
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
Number of levels= 5
--------------------------------------------------------------------------------
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
TEST np.zeros((pad_dim,int(features)) (0, 4)
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level= 64
max_n_level and len(levels[i])= 64 64
--------------------------------------------------------------------------------
TEST contents[i].shape= (46, 4)
TEST np.zeros((pad_dim,int(features)) (18, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
////////////////////////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////////////////////////
TEST contents[i].shape= (64, 4)
max_n_level and len(levels[i])= 64 64
TEST np.zeros((pad_dim,int(features)) (0, 4)
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST contents[i].shape= (18, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
TEST np.zeros((pad_dim,int(features)) (46, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
max_n_level and len(levels[i])= 64 64
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (52, 4)
TEST contents[i].shape= (38, 4)
TEST np.zeros((pad_dim,int(features)) (12, 4)
TEST np.zeros((pad_dim,int(features)) (26, 4)
TEST contents[i].shape= (2, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
TEST np.zeros((pad_dim,int(features)) (62, 4)
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (8, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
TEST np.zeros((pad_dim,int(features)) (56, 4)
max_n_level and len(levels[i])= 64 64
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (2, 4)
TEST contents[i].shape= (6, 4)
TEST np.zeros((pad_dim,int(features)) (62, 4)
TEST np.zeros((pad_dim,int(features)) (58, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 36, 8]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 4
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (36, 4)
TEST np.zeros((pad_dim,int(features)) (28, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (8, 4)
TEST np.zeros((pad_dim,int(features)) (56, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 40, 8]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 4
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 44, 6, 2]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 5
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (40, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
TEST np.zeros((pad_dim,int(features)) (24, 4)
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (8, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
TEST np.zeros((pad_dim,int(features)) (56, 4)
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (44, 4)
TEST np.zeros((pad_dim,int(features)) (20, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (6, 4)
TEST np.zeros((pad_dim,int(features)) (58, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (2, 4)
TEST np.zeros((pad_dim,int(features)) (62, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 58, 22]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 4
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (58, 4)
TEST np.zeros((pad_dim,int(features)) (6, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (22, 4)
TEST np.zeros((pad_dim,int(features)) (42, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 48, 10]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 4
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (48, 4)
TEST np.zeros((pad_dim,int(features)) (16, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (10, 4)
TEST np.zeros((pad_dim,int(features)) (54, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 50, 12]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 4
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
subjets per level= [32, 64, 44, 24]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 4
subjets per level= [32, 64, 32, 8, 2]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 5
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
max_n_level= 64
max_n_level= 64
////////////////////////////////////////////////////////////////////////////////////////////////////
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
max_n_level and len(levels[i])= 64 64
subjets per level= [32, 64, 40, 12]
TEST contents[i].shape= (50, 4)
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 4
TEST np.zeros((pad_dim,int(features)) (14, 4)
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
TEST np.zeros((pad_dim,int(features)) (32, 4)
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (12, 4)
TEST np.zeros((pad_dim,int(features)) (52, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (8, 4)
TEST np.zeros((pad_dim,int(features)) (56, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (2, 4)
TEST np.zeros((pad_dim,int(features)) (62, 4)
--------------------------------------------------------------------------------
max_n_level= 64
////////////////////////////////////////////////////////////////////////////////////////////////////
--------------------------------------------------------------------------------
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
////////////////////////////////////////////////////////////////////////////////////////////////////
TEST contents[i].shape= (32, 4)
max_n_level and len(levels[i])= 64 64
TEST np.zeros((pad_dim,int(features)) (32, 4)
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (44, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
TEST np.zeros((pad_dim,int(features)) (20, 4)
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (40, 4)
TEST np.zeros((pad_dim,int(features)) (24, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (24, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
TEST np.zeros((pad_dim,int(features)) (40, 4)
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (12, 4)
TEST np.zeros((pad_dim,int(features)) (52, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 42, 12, 6]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 5
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (42, 4)
TEST np.zeros((pad_dim,int(features)) (22, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (12, 4)
TEST np.zeros((pad_dim,int(features)) (52, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (6, 4)
TEST np.zeros((pad_dim,int(features)) (58, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 34, 4, 4]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 5
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (34, 4)
TEST np.zeros((pad_dim,int(features)) (30, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (4, 4)
TEST np.zeros((pad_dim,int(features)) (60, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (4, 4)
TEST np.zeros((pad_dim,int(features)) (60, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 36, 2]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 4
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (36, 4)
TEST np.zeros((pad_dim,int(features)) (28, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (2, 4)
TEST np.zeros((pad_dim,int(features)) (62, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 42, 18, 4]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 5
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
--------------------------------------------------------------------------------
subjets per level= [32, 64, 40, 10, 2]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
max_n_level and len(levels[i])= 64 64
Number of levels= 5
--------------------------------------------------------------------------------
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
max_n_level= 64
TEST contents[i].shape= (64, 4)
--------------------------------------------------------------------------------
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (42, 4)
TEST np.zeros((pad_dim,int(features)) (22, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (18, 4)
TEST np.zeros((pad_dim,int(features)) (46, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (4, 4)
TEST np.zeros((pad_dim,int(features)) (60, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 42, 6]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 4
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (42, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (40, 4)
TEST np.zeros((pad_dim,int(features)) (22, 4)
TEST np.zeros((pad_dim,int(features)) (24, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (6, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
TEST np.zeros((pad_dim,int(features)) (58, 4)
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (10, 4)
TEST np.zeros((pad_dim,int(features)) (54, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (2, 4)
TEST np.zeros((pad_dim,int(features)) (62, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 46, 12]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 4
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (46, 4)
TEST np.zeros((pad_dim,int(features)) (18, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (12, 4)
TEST np.zeros((pad_dim,int(features)) (52, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 32, 8, 2]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 5
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (8, 4)
TEST np.zeros((pad_dim,int(features)) (56, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (2, 4)
TEST np.zeros((pad_dim,int(features)) (62, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 40, 14, 4]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 5
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (40, 4)
TEST np.zeros((pad_dim,int(features)) (24, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (14, 4)
TEST np.zeros((pad_dim,int(features)) (50, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (4, 4)
TEST np.zeros((pad_dim,int(features)) (60, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 48, 10, 4]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 5
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (48, 4)
TEST np.zeros((pad_dim,int(features)) (16, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (10, 4)
TEST np.zeros((pad_dim,int(features)) (54, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (4, 4)
TEST np.zeros((pad_dim,int(features)) (60, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 44, 8, 4]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 5
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
subjets per level= [32, 64, 44, 10]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 4
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
subjets per level= [32, 64, 40, 12, 4]
--------------------------------------------------------------------------------
max_n_level and len(levels[i])= 64 64
--------------------------------------------------------------------------------
max_n_level= 64
Number of levels= 5
TEST contents[i].shape= (32, 4)
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
TEST np.zeros((pad_dim,int(features)) (32, 4)
subjets per level= [32, 64, 50, 12, 2]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
Number of levels= 5
--------------------------------------------------------------------------------
max_n_level and len(levels[i])= 64 64
////////////////////////////////////////////////////////////////////////////////////////////////////
TEST contents[i].shape= (32, 4)
max_n_level and len(levels[i])= 64 64
TEST np.zeros((pad_dim,int(features)) (32, 4)
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level= 64
max_n_level= 64
max_n_level and len(levels[i])= 64 64
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
max_n_level and len(levels[i])= 64 64
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST contents[i].shape= (44, 4)
TEST contents[i].shape= (44, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
TEST np.zeros((pad_dim,int(features)) (20, 4)
TEST np.zeros((pad_dim,int(features)) (20, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////////////////////////
TEST np.zeros((pad_dim,int(features)) (0, 4)
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (8, 4)
max_n_level and len(levels[i])= 64 64
TEST np.zeros((pad_dim,int(features)) (56, 4)
TEST contents[i].shape= (10, 4)
TEST np.zeros((pad_dim,int(features)) (54, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (40, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
TEST np.zeros((pad_dim,int(features)) (24, 4)
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (4, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
TEST contents[i].shape= (12, 4)
max_n_level and len(levels[i])= 64 64
TEST np.zeros((pad_dim,int(features)) (52, 4)
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (60, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (50, 4)
TEST np.zeros((pad_dim,int(features)) (14, 4)
TEST contents[i].shape= (4, 4)
TEST np.zeros((pad_dim,int(features)) (60, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (12, 4)
TEST np.zeros((pad_dim,int(features)) (52, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (2, 4)
TEST np.zeros((pad_dim,int(features)) (62, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 46, 12, 4]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 5
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (46, 4)
TEST np.zeros((pad_dim,int(features)) (18, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (12, 4)
TEST np.zeros((pad_dim,int(features)) (52, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (4, 4)
TEST np.zeros((pad_dim,int(features)) (60, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 48, 20, 8, 2]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 6
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (48, 4)
TEST np.zeros((pad_dim,int(features)) (16, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (20, 4)
TEST np.zeros((pad_dim,int(features)) (44, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (8, 4)
TEST np.zeros((pad_dim,int(features)) (56, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (2, 4)
TEST np.zeros((pad_dim,int(features)) (62, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 44, 10, 2, 2]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 6
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (44, 4)
TEST np.zeros((pad_dim,int(features)) (20, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (10, 4)
TEST np.zeros((pad_dim,int(features)) (54, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (2, 4)
TEST np.zeros((pad_dim,int(features)) (62, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (2, 4)
TEST np.zeros((pad_dim,int(features)) (62, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 44, 10]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 4
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (44, 4)
TEST np.zeros((pad_dim,int(features)) (20, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (10, 4)
TEST np.zeros((pad_dim,int(features)) (54, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 46, 12]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 4
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (46, 4)
TEST np.zeros((pad_dim,int(features)) (18, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (12, 4)
TEST np.zeros((pad_dim,int(features)) (52, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 46, 12, 2]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 5
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (46, 4)
TEST np.zeros((pad_dim,int(features)) (18, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (12, 4)
TEST np.zeros((pad_dim,int(features)) (52, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (2, 4)
TEST np.zeros((pad_dim,int(features)) (62, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 34, 4]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 4
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (34, 4)
TEST np.zeros((pad_dim,int(features)) (30, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (4, 4)
TEST np.zeros((pad_dim,int(features)) (60, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 48, 14, 2]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 5
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
///////////////////////////////////////////////////////////////////////////////////////////////--------------------------------------------------------------------------------
subjets per level= [32, 64, 44, 6, 2]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 5
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
/////
--------------------------------------------------------------------------------
max_n_level and len(levels[i])= 64 64
max_n_level and len(levels[i])= 64 64
subjets per level= [32, 64, 42, 12]
--------------------------------------------------------------------------------
TEST contents[i].shape= (48, 4)
--------------------------------------------------------------------------------
TEST contents[i].shape= (44, 4)
Number of levels= 4
--------------------------------------------------------------------------------
TEST np.zeros((pad_dim,int(features)) (16, 4)
TEST np.zeros((pad_dim,int(features)) (20, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (14, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
TEST np.zeros((pad_dim,int(features)) (50, 4)
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (6, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level= 64
max_n_level and len(levels[i])= 64 64
--------------------------------------------------------------------------------
TEST np.zeros((pad_dim,int(features)) (58, 4)
TEST contents[i].shape= (2, 4)
TEST np.zeros((pad_dim,int(features)) (62, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (2, 4)
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (62, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (42, 4)
TEST np.zeros((pad_dim,int(features)) (22, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (12, 4)
TEST np.zeros((pad_dim,int(features)) (52, 4)
train.py:220: RuntimeWarning: divide by zero encountered in true_divide
  inv_fpr = interp(base_tpr, tpr, 1. / fpr)[125]
- Eval metrics : accuracy: 0.5286 ; loss: 0.7001
subjets per level= [32, 64, 44, 10]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 4
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
//////////////////////////////////////////////////////////////////////////////////////////////////--------------------------------------------------------------------------------
subjets per level= [32, 64, 44, 6, 2]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 5
--------------------------------------------------------------------------------
//
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (44, 4)
TEST np.zeros((pad_dim,int(features)) (20, 4)
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (10, 4)
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
TEST np.zeros((pad_dim,int(features)) (54, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 46, 16, 4, 4]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
Number of levels= 6
--------------------------------------------------------------------------------
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (44, 4)
TEST np.zeros((pad_dim,int(features)) (20, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (6, 4)
max_n_level= 64
TEST np.zeros((pad_dim,int(features)) (58, 4)
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (2, 4)
TEST np.zeros((pad_dim,int(features)) (62, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (46, 4)
TEST np.zeros((pad_dim,int(features)) (18, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (16, 4)
TEST np.zeros((pad_dim,int(features)) (48, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (4, 4)
TEST np.zeros((pad_dim,int(features)) (60, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (4, 4)
TEST np.zeros((pad_dim,int(features)) (60, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 36, 10, 2, 2]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 6
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (36, 4)
TEST np.zeros((pad_dim,int(features)) (28, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (10, 4)
TEST np.zeros((pad_dim,int(features)) (54, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (2, 4)
TEST np.zeros((pad_dim,int(features)) (62, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (2, 4)
TEST np.zeros((pad_dim,int(features)) (62, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 48, 8]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 4
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
subjets per level= [32, 64, 60, 18]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 4
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level= 64
max_n_level and len(levels[i])= 64 64
--------------------------------------------------------------------------------
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
TEST np.zeros((pad_dim,int(features)) (32, 4)
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (48, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
TEST np.zeros((pad_dim,int(features)) (16, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (60, 4)
TEST contents[i].shape= (8, 4)
TEST np.zeros((pad_dim,int(features)) (4, 4)
TEST np.zeros((pad_dim,int(features)) (56, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (18, 4)
TEST np.zeros((pad_dim,int(features)) (46, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 50, 12, 2]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 5
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (50, 4)
TEST np.zeros((pad_dim,int(features)) (14, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (12, 4)
TEST np.zeros((pad_dim,int(features)) (52, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (2, 4)
TEST np.zeros((pad_dim,int(features)) (62, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 44, 8]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 4
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (44, 4)
TEST np.zeros((pad_dim,int(features)) (20, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (8, 4)
TEST np.zeros((pad_dim,int(features)) (56, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 50, 10]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 4
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (50, 4)
TEST np.zeros((pad_dim,int(features)) (14, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (10, 4)
TEST np.zeros((pad_dim,int(features)) (54, 4)
Checkpoint Directory exists!
Epoch 13/30

  3%|█▉                                                                    | 1/37 [00:17<10:43, 17.88s/it, loss=0.670]
--------------------------------------------------------------------------------
subjets per level= [32, 64, 36, 14, 4]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 5
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
subjets per level= [32, 64, 46, 14]
--------------------------------------------------------------------------------
max_n_level and len(levels[i])= 64 64
--------------------------------------------------------------------------------
TEST contents[i].shape= (64, 4)
Number of levels= 4
--------------------------------------------------------------------------------
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (36, 4)
TEST np.zeros((pad_dim,int(features)) (28, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level= 64
max_n_level and len(levels[i])= 64 64
--------------------------------------------------------------------------------
TEST contents[i].shape= (14, 4)
TEST np.zeros((pad_dim,int(features)) (50, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
////////////////////////////////////////////////////////////////////////////////////////////////////
TEST contents[i].shape= (32, 4)
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (4, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
TEST np.zeros((pad_dim,int(features)) (60, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (46, 4)
TEST np.zeros((pad_dim,int(features)) (18, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 42, 14]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 4
--------------------------------------------------------------------------------
subjets per level= [32, 64, 48, 8, 2]
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
--------------------------------------------------------------------------------
Number of levels= 5
--------------------------------------------------------------------------------
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (14, 4)
TEST np.zeros((pad_dim,int(features)) (50, 4)
max_n_level= 64
max_n_level= 64
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (48, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
TEST np.zeros((pad_dim,int(features)) (16, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
////////////////////////////////////////////////////////////////////////////////////////////////////
TEST contents[i].shape= (42, 4)
max_n_level and len(levels[i])= 64 64
TEST np.zeros((pad_dim,int(features)) (22, 4)
TEST contents[i].shape= (8, 4)
TEST np.zeros((pad_dim,int(features)) (56, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (14, 4)
TEST contents[i].shape= (2, 4)
TEST np.zeros((pad_dim,int(features)) (62, 4)
TEST np.zeros((pad_dim,int(features)) (50, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 52, 8, 2]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 5
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (52, 4)
TEST np.zeros((pad_dim,int(features)) (12, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (8, 4)
TEST np.zeros((pad_dim,int(features)) (56, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (2, 4)
TEST np.zeros((pad_dim,int(features)) (62, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 46, 18, 2]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 5
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
subjets per level= [32, 64, 38, 6]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 4
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
max_n_level= 64
////////////////////////////////////////////////////////////////////////////////////////////////////
--------------------------------------------------------------------------------
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST contents[i].shape= (46, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
TEST np.zeros((pad_dim,int(features)) (18, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (18, 4)
TEST np.zeros((pad_dim,int(features)) (46, 4)
TEST contents[i].shape= (38, 4)
TEST np.zeros((pad_dim,int(features)) (26, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
--------------------------------------------------------------------------------
subjets per level= [32, 64, 36, 8]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
max_n_level and len(levels[i])= 64 64
Number of levels= 4
--------------------------------------------------------------------------------
TEST contents[i].shape= (2, 4)
TEST np.zeros((pad_dim,int(features)) (62, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (6, 4)
TEST np.zeros((pad_dim,int(features)) (58, 4)
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (36, 4)
TEST np.zeros((pad_dim,int(features)) (28, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (8, 4)
TEST np.zeros((pad_dim,int(features)) (56, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 40, 8]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 4
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (40, 4)
TEST np.zeros((pad_dim,int(features)) (24, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (8, 4)
TEST np.zeros((pad_dim,int(features)) (56, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 44, 6, 2]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 5
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (44, 4)
TEST np.zeros((pad_dim,int(features)) (20, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (6, 4)
TEST np.zeros((pad_dim,int(features)) (58, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (2, 4)
TEST np.zeros((pad_dim,int(features)) (62, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 58, 22]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 4
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
///////////////////////////////////////////////////--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
/////////////////////////////////////////////////
--------------------------------------------------------------------------------
subjets per level= [32, 64, 50, 12]
--------------------------------------------------------------------------------
subjets per level= [32, 64, 44, 24]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 4
subjets per level= [32, 64, 48, 10]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 4
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 4
max_n_level and len(levels[i])= 64 64
max_n_level= 64
--------------------------------------------------------------------------------
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
TEST np.zeros((pad_dim,int(features)) (32, 4)
max_n_level and len(levels[i])= 64 64
max_n_level= 64
TEST contents[i].shape= (58, 4)
--------------------------------------------------------------------------------
TEST np.zeros((pad_dim,int(features)) (6, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
////////////////////////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////////////////////////
TEST contents[i].shape= (64, 4)
--------------------------------------------------------------------------------
max_n_level and len(levels[i])= 64 64
TEST np.zeros((pad_dim,int(features)) (0, 4)
TEST contents[i].shape= (22, 4)
TEST np.zeros((pad_dim,int(features)) (42, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
max_n_level= 64
TEST contents[i].shape= (50, 4)
--------------------------------------------------------------------------------
TEST np.zeros((pad_dim,int(features)) (14, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (12, 4)
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (52, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (48, 4)
TEST np.zeros((pad_dim,int(features)) (16, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (10, 4)
max_n_level and len(levels[i])= 64 64
TEST np.zeros((pad_dim,int(features)) (54, 4)
TEST contents[i].shape= (44, 4)
TEST np.zeros((pad_dim,int(features)) (20, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (24, 4)
TEST np.zeros((pad_dim,int(features)) (40, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 32, 8, 2]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 5
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (8, 4)
TEST np.zeros((pad_dim,int(features)) (56, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (2, 4)
TEST np.zeros((pad_dim,int(features)) (62, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 40, 12]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 4
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (40, 4)
TEST np.zeros((pad_dim,int(features)) (24, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (12, 4)
TEST np.zeros((pad_dim,int(features)) (52, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 42, 12, 6]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 5
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (42, 4)
TEST np.zeros((pad_dim,int(features)) (22, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (12, 4)
TEST np.zeros((pad_dim,int(features)) (52, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (6, 4)
TEST np.zeros((pad_dim,int(features)) (58, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 34, 4, 4]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 5
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (34, 4)
TEST np.zeros((pad_dim,int(features)) (30, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (4, 4)
TEST np.zeros((pad_dim,int(features)) (60, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (4, 4)
TEST np.zeros((pad_dim,int(features)) (60, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 36, 2]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 4
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (36, 4)
TEST np.zeros((pad_dim,int(features)) (28, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (2, 4)
TEST np.zeros((pad_dim,int(features)) (62, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 42, 18, 4]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 5
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (42, 4)
TEST np.zeros((pad_dim,int(features)) (22, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (18, 4)
TEST np.zeros((pad_dim,int(features)) (46, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
subjets per level= [32, 64, 40, 10, 2]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 5
--------------------------------------------------------------------------------
subjets per level= [32, 64, 42, 6]
max_n_level and len(levels[i])= 64 64
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
TEST contents[i].shape= (4, 4)
Number of levels= 4
--------------------------------------------------------------------------------
TEST np.zeros((pad_dim,int(features)) (60, 4)
max_n_level= 64
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
max_n_level and len(levels[i])= 64 64
--------------------------------------------------------------------------------
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
subjets per level= [32, 64, 46, 12]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
Number of levels= 4
--------------------------------------------------------------------------------
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
TEST np.zeros((pad_dim,int(features)) (0, 4)
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (42, 4)
TEST np.zeros((pad_dim,int(features)) (22, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (40, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level= 64
max_n_level and len(levels[i])= 64 64
--------------------------------------------------------------------------------
TEST contents[i].shape= (6, 4)
TEST np.zeros((pad_dim,int(features)) (24, 4)
TEST np.zeros((pad_dim,int(features)) (58, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
TEST np.zeros((pad_dim,int(features)) (32, 4)
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (10, 4)
TEST np.zeros((pad_dim,int(features)) (54, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
////////////////////////////////////////////////////////////////////////////////////////////////////
TEST contents[i].shape= (64, 4)
max_n_level and len(levels[i])= 64 64
TEST np.zeros((pad_dim,int(features)) (0, 4)
TEST contents[i].shape= (2, 4)
TEST np.zeros((pad_dim,int(features)) (62, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (46, 4)
TEST np.zeros((pad_dim,int(features)) (18, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (12, 4)
TEST np.zeros((pad_dim,int(features)) (52, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 32, 8, 2]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 5
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (8, 4)
TEST np.zeros((pad_dim,int(features)) (56, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (2, 4)
TEST np.zeros((pad_dim,int(features)) (62, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 40, 14, 4]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 5
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (40, 4)
TEST np.zeros((pad_dim,int(features)) (24, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (14, 4)
TEST np.zeros((pad_dim,int(features)) (50, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (4, 4)
TEST np.zeros((pad_dim,int(features)) (60, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 48, 10, 4]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 5
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (48, 4)
TEST np.zeros((pad_dim,int(features)) (16, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (10, 4)
TEST np.zeros((pad_dim,int(features)) (54, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (4, 4)
100%|█████████████████████████████████████████████████████████████████████| 37/37 [00:18<00:00,  2.02it/s, loss=0.667]
- Train metrics: accuracy: 0.5954 ; loss: 0.6652
subjets per level= [32, 64, 44, 8, 4]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 5
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
subjets per level= [32, 64, 44, 10]
subjets per level= [32, 64, 40, 12, 4]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 4
--------------------------------------------------------------------------------
Number of levels= 5
--------------------------------------------------------------------------------
max_n_level= 64
max_n_level= 64
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST contents[i].shape= (64, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
TEST np.zeros((pad_dim,int(features)) (0, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
max_n_level and len(levels[i])= 64 64
////////////////////////////////////////////////////////////////////////////////////////////////////
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (44, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////////////////////////
TEST np.zeros((pad_dim,int(features)) (20, 4)
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (44, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
TEST np.zeros((pad_dim,int(features)) (20, 4)
max_n_level and len(levels[i])= 64 64
////////////////////////////////////////////////////////////////////////////////////////////////////
TEST contents[i].shape= (10, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST np.zeros((pad_dim,int(features)) (54, 4)
TEST contents[i].shape= (8, 4)
TEST np.zeros((pad_dim,int(features)) (56, 4)
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (40, 4)
TEST np.zeros((pad_dim,int(features)) (24, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (4, 4)
TEST np.zeros((pad_dim,int(features)) (60, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (12, 4)
TEST np.zeros((pad_dim,int(features)) (52, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (4, 4)
TEST np.zeros((pad_dim,int(features)) (60, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 50, 12, 2]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 5
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (50, 4)
TEST np.zeros((pad_dim,int(features)) (14, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (12, 4)
TEST np.zeros((pad_dim,int(features)) (52, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (2, 4)
TEST np.zeros((pad_dim,int(features)) (62, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 46, 12, 4]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 5
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (46, 4)
TEST np.zeros((pad_dim,int(features)) (18, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (12, 4)
TEST np.zeros((pad_dim,int(features)) (52, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (4, 4)
TEST np.zeros((pad_dim,int(features)) (60, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 48, 20, 8, 2]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 6
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
subjets per level= [32, 64, 46, 12]
--------------------------------------------------------------------------------
subjets per level= [32, 64, 44, 10]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 4
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 4
--------------------------------------------------------------------------------
subjets per level= [32, 64, 44, 10, 2, 2]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
max_n_level= 64
max_n_level= 64
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 6
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level= 64
max_n_level and len(levels[i])= 64 64
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST contents[i].shape= (64, 4)
--------------------------------------------------------------------------------
TEST np.zeros((pad_dim,int(features)) (0, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST contents[i].shape= (44, 4)
max_n_level and len(levels[i])= 64 64
TEST np.zeros((pad_dim,int(features)) (20, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
TEST contents[i].shape= (46, 4)
max_n_level and len(levels[i])= 64 64
TEST np.zeros((pad_dim,int(features)) (18, 4)
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
////////////////////////////////////////////////////////////////////////////////////////////////////
TEST contents[i].shape= (10, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST np.zeros((pad_dim,int(features)) (54, 4)
TEST contents[i].shape= (64, 4)
max_n_level and len(levels[i])= 64 64
TEST np.zeros((pad_dim,int(features)) (0, 4)
TEST contents[i].shape= (12, 4)
TEST np.zeros((pad_dim,int(features)) (52, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (44, 4)
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
TEST np.zeros((pad_dim,int(features)) (20, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (48, 4)
TEST np.zeros((pad_dim,int(features)) (16, 4)
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (10, 4)
TEST np.zeros((pad_dim,int(features)) (54, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (20, 4)
TEST np.zeros((pad_dim,int(features)) (44, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (2, 4)
TEST np.zeros((pad_dim,int(features)) (62, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (2, 4)
TEST contents[i].shape= (8, 4)
TEST np.zeros((pad_dim,int(features)) (62, 4)
TEST np.zeros((pad_dim,int(features)) (56, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (2, 4)
TEST np.zeros((pad_dim,int(features)) (62, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 46, 12, 2]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 5
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (46, 4)
TEST np.zeros((pad_dim,int(features)) (18, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (12, 4)
TEST np.zeros((pad_dim,int(features)) (52, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (2, 4)
TEST np.zeros((pad_dim,int(features)) (62, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 34, 4]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 4
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (34, 4)
TEST np.zeros((pad_dim,int(features)) (30, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (4, 4)
TEST np.zeros((pad_dim,int(features)) (60, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 48, 14, 2]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 5
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
subjets per level= [32, 64, 44, 6, 2]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 5
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
TEST contents[i].shape= (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (44, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
TEST np.zeros((pad_dim,int(features)) (20, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (6, 4)
TEST np.zeros((pad_dim,int(features)) (58, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
--------------------------------------------------------------------------------
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
TEST np.zeros((pad_dim,int(features)) (0, 4)
subjets per level= [32, 64, 42, 12]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
max_n_level and len(levels[i])= 64 64
Number of levels= 4
--------------------------------------------------------------------------------
TEST contents[i].shape= (2, 4)
TEST np.zeros((pad_dim,int(features)) (62, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (48, 4)
TEST np.zeros((pad_dim,int(features)) (16, 4)
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (14, 4)
TEST np.zeros((pad_dim,int(features)) (50, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST np.zeros((pad_dim,int(features)) (32, 4)
TEST contents[i].shape= (2, 4)
TEST np.zeros((pad_dim,int(features)) (62, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (42, 4)
TEST np.zeros((pad_dim,int(features)) (22, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (12, 4)
TEST np.zeros((pad_dim,int(features)) (52, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 44, 6, 2]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 5
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
subjets per level= [32, 64, 46, 16, 4, 4]
--------------------------------------------------------------------------------
max_n_level and len(levels[i])= 64 64
--------------------------------------------------------------------------------
TEST contents[i].shape= (32, 4)
Number of levels= 6
-------------------------------------------------------------------------------------------------------------------------------------
subjets per level= [32, 64, 44, 10]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 4
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (44, 4)
---------------------------
TEST np.zeros((pad_dim,int(features)) (20, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (10, 4)
TEST np.zeros((pad_dim,int(features)) (54, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
max_n_level= 64
--------------------------------------------------------------------------------
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (44, 4)
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (20, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
////////////////////////////////////////////////////////////////////////////////////////////////////
TEST contents[i].shape= (6, 4)
max_n_level and len(levels[i])= 64 64
TEST np.zeros((pad_dim,int(features)) (58, 4)
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
////////////////////////////////////////////////////////////////////////////////////////////////////
TEST contents[i].shape= (2, 4)
max_n_level and len(levels[i])= 64 64
TEST np.zeros((pad_dim,int(features)) (62, 4)
TEST contents[i].shape= (46, 4)
TEST np.zeros((pad_dim,int(features)) (18, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (16, 4)
TEST np.zeros((pad_dim,int(features)) (48, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (4, 4)
TEST np.zeros((pad_dim,int(features)) (60, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (4, 4)
TEST np.zeros((pad_dim,int(features)) (60, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 36, 10, 2, 2]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 6
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (36, 4)
TEST np.zeros((pad_dim,int(features)) (28, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (10, 4)
TEST np.zeros((pad_dim,int(features)) (54, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (2, 4)
TEST np.zeros((pad_dim,int(features)) (62, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (2, 4)
TEST np.zeros((pad_dim,int(features)) (62, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 48, 8]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 4
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (48, 4)
TEST np.zeros((pad_dim,int(features)) (16, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (8, 4)
TEST np.zeros((pad_dim,int(features)) (56, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 60, 18]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 4
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (60, 4)
TEST np.zeros((pad_dim,int(features)) (4, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (18, 4)
TEST np.zeros((pad_dim,int(features)) (46, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 50, 12, 2]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 5
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (50, 4)
TEST np.zeros((pad_dim,int(features)) (14, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (12, 4)
TEST np.zeros((pad_dim,int(features)) (52, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (2, 4)
TEST np.zeros((pad_dim,int(features)) (62, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 44, 8]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 4
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (44, 4)
TEST np.zeros((pad_dim,int(features)) (20, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (8, 4)
TEST np.zeros((pad_dim,int(features)) (56, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 50, 10]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 4
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (50, 4)
TEST np.zeros((pad_dim,int(features)) (14, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (10, 4)
TEST np.zeros((pad_dim,int(features)) (54, 4)
train.py:220: RuntimeWarning: divide by zero encountered in true_divide
  inv_fpr = interp(base_tpr, tpr, 1. / fpr)[125]
- Eval metrics : accuracy: 0.5234 ; loss: 0.7014
- Found new best bg rejection = 4.0625
Epoch 14/30
  0%|                                                                                          | 0/37 [00:00<?, ?it/s]
Checkpoint Directory exists!
--------------------------------------------------------------------------------
subjets per level= [32, 64, 36, 14, 4]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 5
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 46, 14]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 4
////////////////////////////////////////////////////////////////////////////////////////////////////
--------------------------------------------------------------------------------
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (36, 4)
TEST np.zeros((pad_dim,int(features)) (28, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (14, 4)
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
TEST np.zeros((pad_dim,int(features)) (50, 4)
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
////////////////////////////////////////////////////////////////////////////////////////////////////
TEST contents[i].shape= (4, 4)
max_n_level and len(levels[i])= 64 64
TEST np.zeros((pad_dim,int(features)) (60, 4)
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 42, 14]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (46, 4)
TEST np.zeros((pad_dim,int(features)) (18, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
Number of levels= 4
max_n_level and len(levels[i])= 64 64
--------------------------------------------------------------------------------
TEST contents[i].shape= (14, 4)
TEST np.zeros((pad_dim,int(features)) (50, 4)
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (42, 4)
TEST np.zeros((pad_dim,int(features)) (22, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (14, 4)
TEST np.zeros((pad_dim,int(features)) (50, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 38, 6]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 4
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 48, 8, 2]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 5
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (38, 4)
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
TEST np.zeros((pad_dim,int(features)) (26, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
--------------------------------------------------------------------------------
TEST np.zeros((pad_dim,int(features)) (0, 4)
max_n_level and len(levels[i])= 64 64
subjets per level= [32, 64, 52, 8, 2]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 5
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
TEST contents[i].shape= (6, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST np.zeros((pad_dim,int(features)) (58, 4)
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (52, 4)
TEST np.zeros((pad_dim,int(features)) (12, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (8, 4)
TEST np.zeros((pad_dim,int(features)) (56, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
--------------------------------------------------------------------------------
max_n_level and len(levels[i])= 64 64
////////////////////////////////////////////////////////////////////////////////////////////////////
TEST contents[i].shape= (48, 4)
subjets per level= [32, 64, 36, 8]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
TEST np.zeros((pad_dim,int(features)) (16, 4)
Number of levels= 4
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (8, 4)
TEST contents[i].shape= (2, 4)
TEST np.zeros((pad_dim,int(features)) (62, 4)
TEST np.zeros((pad_dim,int(features)) (56, 4)
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
////////////////////////////////////////////////////////////////////////////////////////////////////
TEST contents[i].shape= (32, 4)
max_n_level and len(levels[i])= 64 64
TEST np.zeros((pad_dim,int(features)) (32, 4)
TEST contents[i].shape= (2, 4)
TEST np.zeros((pad_dim,int(features)) (62, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (36, 4)
TEST np.zeros((pad_dim,int(features)) (28, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (8, 4)
TEST np.zeros((pad_dim,int(features)) (56, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 46, 18, 2]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 5
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (46, 4)
TEST np.zeros((pad_dim,int(features)) (18, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (18, 4)
TEST np.zeros((pad_dim,int(features)) (46, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (2, 4)
TEST np.zeros((pad_dim,int(features)) (62, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 40, 8]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 4
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (40, 4)
TEST np.zeros((pad_dim,int(features)) (24, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (8, 4)
TEST np.zeros((pad_dim,int(features)) (56, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 44, 6, 2]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 5
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (44, 4)
TEST np.zeros((pad_dim,int(features)) (20, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (6, 4)
TEST np.zeros((pad_dim,int(features)) (58, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (2, 4)
TEST np.zeros((pad_dim,int(features)) (62, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 58, 22]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 4
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (58, 4)
TEST np.zeros((pad_dim,int(features)) (6, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (22, 4)
TEST np.zeros((pad_dim,int(features)) (42, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 48, 10]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 4
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (48, 4)
TEST np.zeros((pad_dim,int(features)) (16, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (10, 4)
TEST np.zeros((pad_dim,int(features)) (54, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 50, 12]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 4
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
--------------------------------------------------------------------------------
subjets per level= [32, 64, 44, 24]
max_n_level and len(levels[i])= 64 64
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 4
TEST contents[i].shape= (50, 4)
--------------------------------------------------------------------------------
TEST np.zeros((pad_dim,int(features)) (14, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (12, 4)
max_n_level= 64
TEST np.zeros((pad_dim,int(features)) (52, 4)
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 32, 8, 2]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
TEST np.zeros((pad_dim,int(features)) (32, 4)
Number of levels= 5
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
TEST contents[i].shape= (64, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
TEST np.zeros((pad_dim,int(features)) (0, 4)
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
TEST np.zeros((pad_dim,int(features)) (0, 4)
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (44, 4)
TEST np.zeros((pad_dim,int(features)) (20, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST contents[i].shape= (24, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
TEST np.zeros((pad_dim,int(features)) (40, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (8, 4)
TEST np.zeros((pad_dim,int(features)) (56, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (2, 4)
TEST np.zeros((pad_dim,int(features)) (62, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 40, 12]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 4
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (40, 4)
TEST np.zeros((pad_dim,int(features)) (24, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (12, 4)
TEST np.zeros((pad_dim,int(features)) (52, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 42, 12, 6]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 5
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
--------------------------------------------------------------------------------
subjets per level= [32, 64, 34, 4, 4]
max_n_level and len(levels[i])= 64 64
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
TEST contents[i].shape= (42, 4)
Number of levels= 5
--------------------------------------------------------------------------------
TEST np.zeros((pad_dim,int(features)) (22, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (12, 4)
max_n_level= 64
--------------------------------------------------------------------------------
TEST np.zeros((pad_dim,int(features)) (52, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (6, 4)
subjets per level= [32, 64, 42, 18, 4]
--------------------------------------------------------------------------------
TEST contents[i].shape= (32, 4)
--------------------------------------------------------------------------------
Number of levels= 5
TEST np.zeros((pad_dim,int(features)) (58, 4)
--------------------------------------------------------------------------------
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
max_n_level= 64
TEST np.zeros((pad_dim,int(features)) (0, 4)
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (34, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
TEST np.zeros((pad_dim,int(features)) (30, 4)
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (4, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
TEST np.zeros((pad_dim,int(features)) (60, 4)
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
////////////////////////////////////////////////////////////////////////////////////////////////////
TEST contents[i].shape= (4, 4)
max_n_level and len(levels[i])= 64 64
TEST np.zeros((pad_dim,int(features)) (60, 4)
TEST contents[i].shape= (42, 4)
TEST np.zeros((pad_dim,int(features)) (22, 4)
subjets per level= [32, 64, 36, 2]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 4
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (18, 4)
TEST np.zeros((pad_dim,int(features)) (46, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
max_n_level= 64
TEST contents[i].shape= (4, 4)
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (60, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (36, 4)
TEST np.zeros((pad_dim,int(features)) (28, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (2, 4)
TEST np.zeros((pad_dim,int(features)) (62, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 40, 10, 2]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 5
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (40, 4)
TEST np.zeros((pad_dim,int(features)) (24, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (10, 4)
TEST np.zeros((pad_dim,int(features)) (54, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (2, 4)
TEST np.zeros((pad_dim,int(features)) (62, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 42, 6]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 4
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (42, 4)
TEST np.zeros((pad_dim,int(features)) (22, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (6, 4)
TEST np.zeros((pad_dim,int(features)) (58, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 46, 12]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 4
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
100%|█████████████████████████████████████████████████████████████████████| 37/37 [00:19<00:00,  1.91it/s, loss=0.665]
- Train metrics: accuracy: 0.5987 ; loss: 0.6632
train.py:220: RuntimeWarning: divide by zero encountered in true_divide
  inv_fpr = interp(base_tpr, tpr, 1. / fpr)[125]
- Eval metrics : accuracy: 0.5156 ; loss: 0.7019
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (8, 4)
TEST np.zeros((pad_dim,int(features)) (56, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 40, 14, 4]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 5
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (2, 4)
TEST np.zeros((pad_dim,int(features)) (62, 4)
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (40, 4)
TEST np.zeros((pad_dim,int(features)) (24, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (14, 4)
TEST np.zeros((pad_dim,int(features)) (50, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (4, 4)
TEST np.zeros((pad_dim,int(features)) (60, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 48, 10, 4]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 5
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (48, 4)
TEST np.zeros((pad_dim,int(features)) (16, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (10, 4)
TEST np.zeros((pad_dim,int(features)) (54, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (4, 4)
TEST np.zeros((pad_dim,int(features)) (60, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 44, 8, 4]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 5
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
subjets per level= [32, 64, 40, 12, 4]
subjets per level= [32, 64, 50, 12, 2]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 5
Number of levels= 5
subjets per level= [32, 64, 44, 10]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
---------------------------------------max_n_level and len(levels[i])= 64 64
-----------------------------------------
max_n_level= 64
max_n_level= 64
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 4
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
max_n_level and len(levels[i])= 64 64
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST contents[i].shape= (64, 4)
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (40, 4)
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (50, 4)
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (24, 4)
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (14, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////////////////////////
TEST np.zeros((pad_dim,int(features)) (32, 4)
max_n_level and len(levels[i])= 64 64
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (12, 4)
TEST contents[i].shape= (12, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
TEST np.zeros((pad_dim,int(features)) (52, 4)
TEST np.zeros((pad_dim,int(features)) (52, 4)
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (44, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////////////////////////
TEST np.zeros((pad_dim,int(features)) (20, 4)
max_n_level and len(levels[i])= 64 64
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (4, 4)
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (60, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (10, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
TEST np.zeros((pad_dim,int(features)) (54, 4)
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (44, 4)
TEST np.zeros((pad_dim,int(features)) (20, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (8, 4)
TEST contents[i].shape= (2, 4)
TEST np.zeros((pad_dim,int(features)) (56, 4)
TEST np.zeros((pad_dim,int(features)) (62, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (4, 4)
TEST np.zeros((pad_dim,int(features)) (60, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 46, 12, 4]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 5
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (46, 4)
TEST np.zeros((pad_dim,int(features)) (18, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (12, 4)
TEST np.zeros((pad_dim,int(features)) (52, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (4, 4)
TEST np.zeros((pad_dim,int(features)) (60, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 48, 20, 8, 2]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 6
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (48, 4)
TEST np.zeros((pad_dim,int(features)) (16, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (20, 4)
TEST np.zeros((pad_dim,int(features)) (44, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (8, 4)
TEST np.zeros((pad_dim,int(features)) (56, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (2, 4)
TEST np.zeros((pad_dim,int(features)) (62, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 44, 10, 2, 2]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 6
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (44, 4)
TEST np.zeros((pad_dim,int(features)) (20, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (10, 4)
TEST np.zeros((pad_dim,int(features)) (54, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (2, 4)
TEST np.zeros((pad_dim,int(features)) (62, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (2, 4)
TEST np.zeros((pad_dim,int(features)) (62, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 44, 10]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 4
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
subjets per level= [32, 64, 46, 12, 2]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 5
--------------------------------------------------------------------------------
subjets per level= [32, 64, 46, 12]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 4
--------------------------------------------------------------------------------
max_n_level= 64
max_n_level= 64
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------------------------------------
--------------------------------------------------
max_n_level= 64
////////////////////////////////////////////////////////////////////////////////////////////////////
--------------------------------------------------------------------------------
subjets per level= [32, 64, 34, 4]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 4
////////////////////////////////////////////////////////////////////////////////////////////////////
--------------------------------------------------------------------------------
max_n_level and len(levels[i])= 64 64
////////////////////////////////////////////////////////////////////////////////////////////////////
TEST contents[i].shape= (32, 4)
max_n_level and len(levels[i])= 64 64
TEST np.zeros((pad_dim,int(features)) (32, 4)
TEST contents[i].shape= (32, 4)
max_n_level and len(levels[i])= 64 64
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level= 64
--------------------------------------------------------------------------------
TEST contents[i].shape= (32, 4)
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
TEST np.zeros((pad_dim,int(features)) (32, 4)
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
////////////////////////////////////////////////////////////////////////////////////////////////////
TEST contents[i].shape= (46, 4)
max_n_level and len(levels[i])= 64 64
TEST np.zeros((pad_dim,int(features)) (18, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
TEST contents[i].shape= (64, 4)
max_n_level and len(levels[i])= 64 64
TEST np.zeros((pad_dim,int(features)) (0, 4)
TEST contents[i].shape= (64, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
TEST np.zeros((pad_dim,int(features)) (0, 4)
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (12, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
TEST np.zeros((pad_dim,int(features)) (52, 4)
max_n_level and len(levels[i])= 64 64
////////////////////////////////////////////////////////////////////////////////////////////////////
TEST contents[i].shape= (44, 4)
max_n_level and len(levels[i])= 64 64
TEST np.zeros((pad_dim,int(features)) (20, 4)
TEST contents[i].shape= (34, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
TEST np.zeros((pad_dim,int(features)) (30, 4)
max_n_level and len(levels[i])= 64 64
TEST np.zeros((pad_dim,int(features)) (32, 4)
TEST contents[i].shape= (10, 4)
TEST np.zeros((pad_dim,int(features)) (54, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (4, 4)
TEST np.zeros((pad_dim,int(features)) (60, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (46, 4)
TEST np.zeros((pad_dim,int(features)) (18, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (12, 4)
TEST np.zeros((pad_dim,int(features)) (52, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (2, 4)
TEST np.zeros((pad_dim,int(features)) (62, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 48, 14, 2]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 5
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
subjets per level= [32, 64, 44, 6, 2]
TEST contents[i].shape= (48, 4)
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
TEST np.zeros((pad_dim,int(features)) (16, 4)
Number of levels= 5
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (14, 4)
TEST np.zeros((pad_dim,int(features)) (50, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (2, 4)
TEST np.zeros((pad_dim,int(features)) (62, 4)
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
subjets per level= [32, 64, 42, 12]
subjets per level= [32, 64, 44, 10]
--------------------------------------------------------------------------------
max_n_level and len(levels[i])= 64 64
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 4
Number of levels= 4
TEST contents[i].shape= (32, 4)
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
TEST np.zeros((pad_dim,int(features)) (32, 4)
//////////////////////////////////////////////////////////////////////////////////////////max_n_level= 64
//////////
--------------------------------------------------------------------------------
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (44, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
max_n_level= 64
TEST np.zeros((pad_dim,int(features)) (20, 4)
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
TEST np.zeros((pad_dim,int(features)) (0, 4)
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (6, 4)
TEST np.zeros((pad_dim,int(features)) (58, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
////////////////////////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST contents[i].shape= (44, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
TEST np.zeros((pad_dim,int(features)) (20, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (2, 4)
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
TEST np.zeros((pad_dim,int(features)) (62, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (42, 4)
TEST np.zeros((pad_dim,int(features)) (22, 4)
TEST contents[i].shape= (10, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
TEST np.zeros((pad_dim,int(features)) (54, 4)
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (12, 4)
TEST np.zeros((pad_dim,int(features)) (52, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 36, 10, 2, 2]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 6
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (36, 4)
TEST np.zeros((pad_dim,int(features)) (28, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (10, 4)
TEST np.zeros((pad_dim,int(features)) (54, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (2, 4)
TEST np.zeros((pad_dim,int(features)) (62, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (2, 4)
TEST np.zeros((pad_dim,int(features)) (62, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 44, 6, 2]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 5
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
--------------------------------------------------------------------------------
TEST contents[i].shape= (32, 4)
subjets per level= [32, 64, 46, 16, 4, 4]
--------------------------------------------------------------------------------
TEST np.zeros((pad_dim,int(features)) (32, 4)
--------------------------------------------------------------------------------
Number of levels= 6
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
max_n_level= 64
TEST contents[i].shape= (64, 4)
--------------------------------------------------------------------------------
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (44, 4)
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (20, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (6, 4)
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (58, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (2, 4)
TEST np.zeros((pad_dim,int(features)) (62, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (46, 4)
TEST np.zeros((pad_dim,int(features)) (18, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (16, 4)
TEST np.zeros((pad_dim,int(features)) (48, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (4, 4)
TEST np.zeros((pad_dim,int(features)) (60, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (4, 4)
TEST np.zeros((pad_dim,int(features)) (60, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 48, 8]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 4
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (48, 4)
TEST np.zeros((pad_dim,int(features)) (16, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (8, 4)
TEST np.zeros((pad_dim,int(features)) (56, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 60, 18]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 4
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (60, 4)
TEST np.zeros((pad_dim,int(features)) (4, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (18, 4)
TEST np.zeros((pad_dim,int(features)) (46, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 50, 12, 2]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 5
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (50, 4)
TEST np.zeros((pad_dim,int(features)) (14, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (12, 4)
TEST np.zeros((pad_dim,int(features)) (52, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (2, 4)
TEST np.zeros((pad_dim,int(features)) (62, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 44, 8]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 4
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (44, 4)
TEST np.zeros((pad_dim,int(features)) (20, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (8, 4)
TEST np.zeros((pad_dim,int(features)) (56, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 50, 10]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 4
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (50, 4)
TEST np.zeros((pad_dim,int(features)) (14, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (10, 4)
TEST np.zeros((pad_dim,int(features)) (54, 4)
- Found new best bg rejection = 4.0625
Epoch 15/30
  0%|                                                                                          | 0/37 [00:00<?, ?it/s]
Checkpoint Directory exists!
--------------------------------------------------------------------------------
subjets per level= [32, 64, 42, 14]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 4
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
--------------------------------------------------------------------------------
TEST contents[i].shape= (32, 4)
subjets per level= [32, 64, 36, 14, 4]
TEST np.zeros((pad_dim,int(features)) (32, 4)
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 5
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (42, 4)
max_n_level= 64
TEST np.zeros((pad_dim,int(features)) (22, 4)
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (14, 4)
TEST np.zeros((pad_dim,int(features)) (50, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
--------------------------------------------------------------------------------
TEST np.zeros((pad_dim,int(features)) (0, 4)
subjets per level= [32, 64, 46, 14]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 4
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (36, 4)
TEST np.zeros((pad_dim,int(features)) (28, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (14, 4)
TEST np.zeros((pad_dim,int(features)) (50, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (4, 4)
max_n_level= 64
TEST np.zeros((pad_dim,int(features)) (60, 4)
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (46, 4)
TEST np.zeros((pad_dim,int(features)) (18, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (14, 4)
TEST np.zeros((pad_dim,int(features)) (50, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 38, 6]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 4
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
subjets per level= [32, 64, 52, 8, 2]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 5
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
max_n_level= 64
TEST np.zeros((pad_dim,int(features)) (32, 4)
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
max_n_level and len(levels[i])= 64 64
TEST np.zeros((pad_dim,int(features)) (0, 4)
TEST contents[i].shape= (38, 4)
TEST np.zeros((pad_dim,int(features)) (26, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
--------------------------------------------------------------------------------
subjets per level= [32, 64, 48, 8, 2]
max_n_level and len(levels[i])= 64 64
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
TEST contents[i].shape= (52, 4)
Number of levels= 5
--------------------------------------------------------------------------------
TEST np.zeros((pad_dim,int(features)) (12, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (6, 4)
TEST np.zeros((pad_dim,int(features)) (58, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level= 64
--------------------------------------------------------------------------------
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (8, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 36, 8]
////////////////////////////////////////////////////////////////////////////////////////////////////
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
max_n_level and len(levels[i])= 64 64
Number of levels= 4
--------------------------------------------------------------------------------
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
TEST np.zeros((pad_dim,int(features)) (56, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level= 64
max_n_level and len(levels[i])= 64 64
--------------------------------------------------------------------------------
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (48, 4)
TEST contents[i].shape= (2, 4)
TEST np.zeros((pad_dim,int(features)) (16, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
TEST np.zeros((pad_dim,int(features)) (62, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (8, 4)
TEST np.zeros((pad_dim,int(features)) (56, 4)
TEST contents[i].shape= (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST np.zeros((pad_dim,int(features)) (32, 4)
TEST contents[i].shape= (2, 4)
TEST np.zeros((pad_dim,int(features)) (62, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (36, 4)
TEST np.zeros((pad_dim,int(features)) (28, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (8, 4)
TEST np.zeros((pad_dim,int(features)) (56, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 46, 18, 2]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 5
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
subjets per level= [32, 64, 40, 8]
--------------------------------------------------------------------------------
max_n_level and len(levels[i])= 64 64
--------------------------------------------------------------------------------
Number of levels= 4
TEST contents[i].shape= (46, 4)
--------------------------------------------------------------------------------
TEST np.zeros((pad_dim,int(features)) (18, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (18, 4)
TEST np.zeros((pad_dim,int(features)) (46, 4)
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (2, 4)
max_n_level and len(levels[i])= 64 64
TEST np.zeros((pad_dim,int(features)) (62, 4)
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (40, 4)
TEST np.zeros((pad_dim,int(features)) (24, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (8, 4)
TEST np.zeros((pad_dim,int(features)) (56, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 44, 6, 2]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 5
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (44, 4)
TEST np.zeros((pad_dim,int(features)) (20, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (6, 4)
TEST np.zeros((pad_dim,int(features)) (58, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (2, 4)
TEST np.zeros((pad_dim,int(features)) (62, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 58, 22]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
subjets per level= [32, 64, 48, 10]
Number of levels= 4
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 4
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
--------------------------------------------------------------------------------
TEST np.zeros((pad_dim,int(features)) (32, 4)
subjets per level= [32, 64, 50, 12]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 4
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (58, 4)
max_n_level= 64
TEST np.zeros((pad_dim,int(features)) (6, 4)
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (22, 4)
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (42, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (50, 4)
TEST np.zeros((pad_dim,int(features)) (14, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (12, 4)
TEST np.zeros((pad_dim,int(features)) (52, 4)
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (48, 4)
TEST np.zeros((pad_dim,int(features)) (16, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (10, 4)
TEST np.zeros((pad_dim,int(features)) (54, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 44, 24]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 4
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (44, 4)
TEST np.zeros((pad_dim,int(features)) (20, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (24, 4)
TEST np.zeros((pad_dim,int(features)) (40, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 32, 8, 2]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 5
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (8, 4)
TEST np.zeros((pad_dim,int(features)) (56, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (2, 4)
TEST np.zeros((pad_dim,int(features)) (62, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 40, 12]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 4
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (40, 4)
TEST np.zeros((pad_dim,int(features)) (24, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (12, 4)
TEST np.zeros((pad_dim,int(features)) (52, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 42, 12, 6]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 5
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
subjets per level= [32, 64, 36, 2]
subjets per level= [32, 64, 42, 18, 4]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 4
subjets per level= [32, 64, 34, 4, 4]
Number of levels= 5
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
max_n_level and len(levels[i])= 64 64
max_n_level= 64
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
TEST contents[i].shape= (64, 4)
Number of levels= 5
--------------------------------------------------------------------------------
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
TEST np.zeros((pad_dim,int(features)) (32, 4)
max_n_level and len(levels[i])= 64 64
max_n_level= 64
TEST contents[i].shape= (42, 4)
--------------------------------------------------------------------------------
TEST np.zeros((pad_dim,int(features)) (22, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level= 64
////////////////////////////////////////////////////////////////////////////////////////////////////
--------------------------------------------------------------------------------
max_n_level and len(levels[i])= 64 64
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (42, 4)
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (34, 4)
TEST np.zeros((pad_dim,int(features)) (30, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (4, 4)
TEST np.zeros((pad_dim,int(features)) (60, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (4, 4)
TEST np.zeros((pad_dim,int(features)) (60, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (12, 4)
TEST np.zeros((pad_dim,int(features)) (52, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
TEST np.zeros((pad_dim,int(features)) (22, 4)
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (6, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
TEST np.zeros((pad_dim,int(features)) (58, 4)
max_n_level and len(levels[i])= 64 64
////////////////////////////////////////////////////////////////////////////////////////////////////
TEST contents[i].shape= (18, 4)
TEST np.zeros((pad_dim,int(features)) (46, 4)
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
TEST np.zeros((pad_dim,int(features)) (0, 4)
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (4, 4)
TEST np.zeros((pad_dim,int(features)) (60, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (36, 4)
TEST np.zeros((pad_dim,int(features)) (28, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (2, 4)
TEST np.zeros((pad_dim,int(features)) (62, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 40, 10, 2]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 5
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (40, 4)
TEST np.zeros((pad_dim,int(features)) (24, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (10, 4)
TEST np.zeros((pad_dim,int(features)) (54, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (2, 4)
TEST np.zeros((pad_dim,int(features)) (62, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 42, 6]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 4
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (42, 4)
TEST np.zeros((pad_dim,int(features)) (22, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (6, 4)
TEST np.zeros((pad_dim,int(features)) (58, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 46, 12]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 4
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
--------------------------------------------------------------------------------
subjets per level= [32, 64, 32, 8, 2]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 5
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
max_n_level and len(levels[i])= 64 64
////////////////////////////////////////////////////////////////////////////////////////////////////
TEST contents[i].shape= (32, 4)
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
subjets per level= [32, 64, 48, 10, 4]
max_n_level and len(levels[i])= 64 64
--------------------------------------------------------------------------------
TEST contents[i].shape= (8, 4)
--------------------------------------------------------------------------------
Number of levels= 5
TEST np.zeros((pad_dim,int(features)) (56, 4)
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
--------------------------------------------------------------------------------
max_n_level and len(levels[i])= 64 64
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
subjets per level= [32, 64, 40, 14, 4]
TEST contents[i].shape= (2, 4)
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
TEST np.zeros((pad_dim,int(features)) (0, 4)
Number of levels= 5
--------------------------------------------------------------------------------
TEST np.zeros((pad_dim,int(features)) (62, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (46, 4)
max_n_level= 64
--------------------------------------------------------------------------------
TEST np.zeros((pad_dim,int(features)) (18, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
max_n_level and len(levels[i])= 64 64
max_n_level= 64
TEST contents[i].shape= (12, 4)
--------------------------------------------------------------------------------
TEST np.zeros((pad_dim,int(features)) (52, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
TEST contents[i].shape= (32, 4)
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST np.zeros((pad_dim,int(features)) (0, 4)
TEST contents[i].shape= (40, 4)
TEST np.zeros((pad_dim,int(features)) (24, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (48, 4)
TEST np.zeros((pad_dim,int(features)) (16, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (10, 4)
TEST np.zeros((pad_dim,int(features)) (54, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
////////////////////////////////////////////////////////////////////////////////////////////////////
TEST contents[i].shape= (14, 4)
TEST np.zeros((pad_dim,int(features)) (50, 4)
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (4, 4)
TEST np.zeros((pad_dim,int(features)) (60, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (4, 4)
TEST np.zeros((pad_dim,int(features)) (60, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 44, 8, 4]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 5
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (44, 4)
TEST np.zeros((pad_dim,int(features)) (20, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (8, 4)
TEST np.zeros((pad_dim,int(features)) (56, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (4, 4)
100%|█████████████████████████████████████████████████████████████████████| 37/37 [00:21<00:00,  1.74it/s, loss=0.663]
- Train metrics: accuracy: 0.5970 ; loss: 0.6610
--------------------------------------------------------------------------------
subjets per level= [32, 64, 44, 10]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 4
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (44, 4)
TEST np.zeros((pad_dim,int(features)) (20, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (10, 4)
TEST np.zeros((pad_dim,int(features)) (54, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 40, 12, 4]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 5
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (40, 4)
TEST np.zeros((pad_dim,int(features)) (24, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (12, 4)
TEST np.zeros((pad_dim,int(features)) (52, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (4, 4)
TEST np.zeros((pad_dim,int(features)) (60, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 50, 12, 2]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 5
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (50, 4)
TEST np.zeros((pad_dim,int(features)) (14, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (12, 4)
TEST np.zeros((pad_dim,int(features)) (52, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (2, 4)
TEST np.zeros((pad_dim,int(features)) (62, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 46, 12, 4]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 5
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////--------------------------------------------------------------------------------
////////////////////////////////////////////////////
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
subjets per level= [32, 64, 44, 10]
subjets per level= [32, 64, 44, 10, 2, 2]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
subjets per level= [32, 64, 48, 20, 8, 2]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 4
Number of levels= 6
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 6
--------------------------------------------------------------------------------
max_n_level and len(levels[i])= 64 64
--------------------------------------------------------------------------------
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
max_n_level= 64
max_n_level= 64
////////////////////////////////////////////////////////////////////////////////////////////////////
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
max_n_level and len(levels[i])= 64 64
////////////////////////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
TEST contents[i].shape= (46, 4)
max_n_level= 64
--------------------------------------------------------------------------------
TEST np.zeros((pad_dim,int(features)) (18, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST contents[i].shape= (12, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
TEST np.zeros((pad_dim,int(features)) (52, 4)
max_n_level and len(levels[i])= 64 64
////////////////////////////////////////////////////////////////////////////////////////////////////
TEST contents[i].shape= (64, 4)
/////////////////////////////////////////////////////max_n_level and len(levels[i])= 64 64
///////////////////////////////////////////////
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
TEST contents[i].shape= (44, 4)
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (4, 4)
TEST np.zeros((pad_dim,int(features)) (20, 4)
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
TEST np.zeros((pad_dim,int(features)) (60, 4)
max_n_level and len(levels[i])= 64 64
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
TEST contents[i].shape= (48, 4)
max_n_level and len(levels[i])= 64 64
TEST np.zeros((pad_dim,int(features)) (16, 4)
TEST contents[i].shape= (10, 4)
TEST np.zeros((pad_dim,int(features)) (54, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (20, 4)
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (44, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
////////////////////////////////////////////////////////////////////////////////////////////////////
TEST contents[i].shape= (8, 4)
max_n_level and len(levels[i])= 64 64
TEST np.zeros((pad_dim,int(features)) (56, 4)
TEST contents[i].shape= (44, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (2, 4)
TEST np.zeros((pad_dim,int(features)) (20, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (2, 4)
TEST np.zeros((pad_dim,int(features)) (62, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (10, 4)
TEST np.zeros((pad_dim,int(features)) (62, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
TEST np.zeros((pad_dim,int(features)) (54, 4)
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (2, 4)
TEST np.zeros((pad_dim,int(features)) (62, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 46, 12]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 4
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (46, 4)
TEST np.zeros((pad_dim,int(features)) (18, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (12, 4)
TEST np.zeros((pad_dim,int(features)) (52, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 46, 12, 2]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 5
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (46, 4)
TEST np.zeros((pad_dim,int(features)) (18, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (12, 4)
TEST np.zeros((pad_dim,int(features)) (52, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (2, 4)
TEST np.zeros((pad_dim,int(features)) (62, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 34, 4]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 4
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (34, 4)
TEST np.zeros((pad_dim,int(features)) (30, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (4, 4)
TEST np.zeros((pad_dim,int(features)) (60, 4)
train.py:220: RuntimeWarning: divide by zero encountered in true_divide
  inv_fpr = interp(base_tpr, tpr, 1. / fpr)[125]
- Eval metrics : accuracy: 0.5182 ; loss: 0.7032
--------------------------------------------------------------------------------
subjets per level= [32, 64, 48, 14, 2]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 5
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 44, 6, 2]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 5
////////////////////////////////////////////////////////////////////////////////////////////////////
--------------------------------------------------------------------------------
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (48, 4)
TEST np.zeros((pad_dim,int(features)) (16, 4)
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (14, 4)
TEST np.zeros((pad_dim,int(features)) (50, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
////////////////////////////////////////////////////////////////////////////////////////////////////
TEST contents[i].shape= (32, 4)
--------------------------------------------------------------------------------
max_n_level and len(levels[i])= 64 64
subjets per level= [32, 64, 42, 12]
TEST np.zeros((pad_dim,int(features)) (32, 4)
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
TEST contents[i].shape= (2, 4)
Number of levels= 4
--------------------------------------------------------------------------------
TEST np.zeros((pad_dim,int(features)) (62, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (44, 4)
max_n_level= 64
--------------------------------------------------------------------------------
TEST np.zeros((pad_dim,int(features)) (20, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (6, 4)
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (58, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
////////////////////////////////////////////////////////////////////////////////////////////////////
TEST contents[i].shape= (2, 4)
max_n_level and len(levels[i])= 64 64
TEST np.zeros((pad_dim,int(features)) (62, 4)
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (42, 4)
TEST np.zeros((pad_dim,int(features)) (22, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (12, 4)
TEST np.zeros((pad_dim,int(features)) (52, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 44, 10]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 4
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (44, 4)
TEST np.zeros((pad_dim,int(features)) (20, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (10, 4)
TEST np.zeros((pad_dim,int(features)) (54, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 46, 16, 4, 4]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 6
subjets per level= [32, 64, 44, 6, 2]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 5
--------------------------------------------------------------------------------
max_n_level= 64
max_n_level= 64
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST contents[i].shape= (32, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 36, 10, 2, 2]
TEST np.zeros((pad_dim,int(features)) (32, 4)
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 6
--------------------------------------------------------------------------------
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
TEST np.zeros((pad_dim,int(features)) (0, 4)
max_n_level= 64
max_n_level and len(levels[i])= 64 64
--------------------------------------------------------------------------------
TEST contents[i].shape= (64, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////////////////////////
TEST np.zeros((pad_dim,int(features)) (0, 4)
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (44, 4)
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (20, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
TEST np.zeros((pad_dim,int(features)) (32, 4)
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (46, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
TEST np.zeros((pad_dim,int(features)) (18, 4)
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (6, 4)
TEST np.zeros((pad_dim,int(features)) (58, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (16, 4)
max_n_level and len(levels[i])= 64 64
max_n_level and len(levels[i])= 64 64
TEST np.zeros((pad_dim,int(features)) (48, 4)
TEST contents[i].shape= (2, 4)
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
TEST np.zeros((pad_dim,int(features)) (62, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
////////////////////////////////////////////////////////////////////////////////////////////////////
TEST contents[i].shape= (4, 4)
max_n_level and len(levels[i])= 64 64
TEST np.zeros((pad_dim,int(features)) (60, 4)
TEST contents[i].shape= (36, 4)
//////////////////////////////////////////////////TEST np.zeros((pad_dim,int(features)) (28, 4)
//////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (4, 4)
TEST np.zeros((pad_dim,int(features)) (60, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (10, 4)
TEST np.zeros((pad_dim,int(features)) (54, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (2, 4)
TEST np.zeros((pad_dim,int(features)) (62, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (2, 4)
TEST np.zeros((pad_dim,int(features)) (62, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 48, 8]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 4
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (48, 4)
TEST np.zeros((pad_dim,int(features)) (16, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (8, 4)
TEST np.zeros((pad_dim,int(features)) (56, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 60, 18]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 4
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
--------------------------------------------------------------------------------
subjets per level= [32, 64, 50, 12, 2]
max_n_level and len(levels[i])= 64 64
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
TEST contents[i].shape= (64, 4)
Number of levels= 5
--------------------------------------------------------------------------------
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (60, 4)
TEST np.zeros((pad_dim,int(features)) (4, 4)
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (18, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
TEST np.zeros((pad_dim,int(features)) (46, 4)
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (50, 4)
TEST np.zeros((pad_dim,int(features)) (14, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (12, 4)
TEST np.zeros((pad_dim,int(features)) (52, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (2, 4)
TEST np.zeros((pad_dim,int(features)) (62, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 44, 8]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 4
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (44, 4)
TEST np.zeros((pad_dim,int(features)) (20, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (8, 4)
TEST np.zeros((pad_dim,int(features)) (56, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 50, 10]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 4
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (50, 4)
TEST np.zeros((pad_dim,int(features)) (14, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (10, 4)
TEST np.zeros((pad_dim,int(features)) (54, 4)
Checkpoint Directory exists!
- Found new best bg rejection = 4.0625
Epoch 16/30
- Train metrics: accuracy: 0.6086 ; loss: 0.6587██████████████████████████| 37/37 [00:18<00:00,  1.99it/s, loss=0.661]
- Train metrics: accuracy: 0.6086 ; loss: 0.6587██████████████████████████| 37/37 [00:18<00:00,  1.99it/s, loss=0.661]
--------------------------------------------------------------------------------
subjets per level= [32, 64, 42, 14]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 4
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (42, 4)
TEST np.zeros((pad_dim,int(features)) (22, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (14, 4)
TEST np.zeros((pad_dim,int(features)) (50, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 46, 14]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 4
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (46, 4)
TEST np.zeros((pad_dim,int(features)) (18, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (14, 4)
TEST np.zeros((pad_dim,int(features)) (50, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 36, 14, 4]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 5
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (36, 4)
TEST np.zeros((pad_dim,int(features)) (28, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (14, 4)
TEST np.zeros((pad_dim,int(features)) (50, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (4, 4)
TEST np.zeros((pad_dim,int(features)) (60, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 52, 8, 2]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 5
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (52, 4)
TEST np.zeros((pad_dim,int(features)) (12, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 38, 6]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 4
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (8, 4)
TEST np.zeros((pad_dim,int(features)) (56, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level= 64
--------------------------------------------------------------------------------
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (2, 4)
TEST np.zeros((pad_dim,int(features)) (62, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (38, 4)
TEST np.zeros((pad_dim,int(features)) (26, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (6, 4)
TEST np.zeros((pad_dim,int(features)) (58, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 48, 8, 2]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 5
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (48, 4)
TEST np.zeros((pad_dim,int(features)) (16, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (8, 4)
TEST np.zeros((pad_dim,int(features)) (56, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (2, 4)
TEST np.zeros((pad_dim,int(features)) (62, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 46, 18, 2]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 5
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (46, 4)
TEST np.zeros((pad_dim,int(features)) (18, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (18, 4)
TEST np.zeros((pad_dim,int(features)) (46, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (2, 4)
TEST np.zeros((pad_dim,int(features)) (62, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 36, 8]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 4
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (36, 4)
TEST np.zeros((pad_dim,int(features)) (28, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (8, 4)
TEST np.zeros((pad_dim,int(features)) (56, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 40, 8]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 4
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (40, 4)
TEST np.zeros((pad_dim,int(features)) (24, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (8, 4)
TEST np.zeros((pad_dim,int(features)) (56, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 44, 6, 2]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 5
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (44, 4)
TEST np.zeros((pad_dim,int(features)) (20, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (6, 4)
TEST np.zeros((pad_dim,int(features)) (58, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (2, 4)
TEST np.zeros((pad_dim,int(features)) (62, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 58, 22]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 4
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (58, 4)
TEST np.zeros((pad_dim,int(features)) (6, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (22, 4)
TEST np.zeros((pad_dim,int(features)) (42, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 48, 10]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 4
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (48, 4)
TEST np.zeros((pad_dim,int(features)) (16, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (10, 4)
TEST np.zeros((pad_dim,int(features)) (54, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 50, 12]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 4
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (50, 4)
TEST np.zeros((pad_dim,int(features)) (14, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (12, 4)
TEST np.zeros((pad_dim,int(features)) (52, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 44, 24]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 4
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (44, 4)
TEST np.zeros((pad_dim,int(features)) (20, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (24, 4)
TEST np.zeros((pad_dim,int(features)) (40, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 32, 8, 2]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 5
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (8, 4)
TEST np.zeros((pad_dim,int(features)) (56, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (2, 4)
TEST np.zeros((pad_dim,int(features)) (62, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 40, 12]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 4
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (40, 4)
TEST np.zeros((pad_dim,int(features)) (24, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (12, 4)
TEST np.zeros((pad_dim,int(features)) (52, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 42, 12, 6]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 5
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (42, 4)
TEST np.zeros((pad_dim,int(features)) (22, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (12, 4)
TEST np.zeros((pad_dim,int(features)) (52, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (6, 4)
TEST np.zeros((pad_dim,int(features)) (58, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 34, 4, 4]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 5
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (34, 4)
TEST np.zeros((pad_dim,int(features)) (30, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (4, 4)
TEST np.zeros((pad_dim,int(features)) (60, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (4, 4)
TEST np.zeros((pad_dim,int(features)) (60, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 36, 2]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 4
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (36, 4)
TEST np.zeros((pad_dim,int(features)) (28, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (2, 4)
TEST np.zeros((pad_dim,int(features)) (62, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 42, 18, 4]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 5
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (42, 4)
TEST np.zeros((pad_dim,int(features)) (22, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (18, 4)
TEST np.zeros((pad_dim,int(features)) (46, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (4, 4)
TEST np.zeros((pad_dim,int(features)) (60, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 40, 10, 2]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 5
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (40, 4)
TEST np.zeros((pad_dim,int(features)) (24, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (10, 4)
TEST np.zeros((pad_dim,int(features)) (54, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (2, 4)
TEST np.zeros((pad_dim,int(features)) (62, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 42, 6]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 4
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (42, 4)
TEST np.zeros((pad_dim,int(features)) (22, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (6, 4)
TEST np.zeros((pad_dim,int(features)) (58, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 46, 12]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 4
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (46, 4)
TEST np.zeros((pad_dim,int(features)) (18, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (12, 4)
TEST np.zeros((pad_dim,int(features)) (52, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 32, 8, 2]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 5
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (8, 4)
TEST np.zeros((pad_dim,int(features)) (56, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (2, 4)
TEST np.zeros((pad_dim,int(features)) (62, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 40, 14, 4]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 5
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (40, 4)
TEST np.zeros((pad_dim,int(features)) (24, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (14, 4)
TEST np.zeros((pad_dim,int(features)) (50, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (4, 4)
TEST np.zeros((pad_dim,int(features)) (60, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 48, 10, 4]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 5
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (48, 4)
TEST np.zeros((pad_dim,int(features)) (16, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (10, 4)
TEST np.zeros((pad_dim,int(features)) (54, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (4, 4)
TEST np.zeros((pad_dim,int(features)) (60, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 44, 8, 4]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 5
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (44, 4)
TEST np.zeros((pad_dim,int(features)) (20, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (8, 4)
TEST np.zeros((pad_dim,int(features)) (56, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (4, 4)
TEST np.zeros((pad_dim,int(features)) (60, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 44, 10]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 4
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (44, 4)
TEST np.zeros((pad_dim,int(features)) (20, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (10, 4)
TEST np.zeros((pad_dim,int(features)) (54, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 40, 12, 4]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 5
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (40, 4)
TEST np.zeros((pad_dim,int(features)) (24, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (12, 4)
TEST np.zeros((pad_dim,int(features)) (52, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (4, 4)
TEST np.zeros((pad_dim,int(features)) (60, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 50, 12, 2]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 5
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (50, 4)
TEST np.zeros((pad_dim,int(features)) (14, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (12, 4)
TEST np.zeros((pad_dim,int(features)) (52, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (2, 4)
TEST np.zeros((pad_dim,int(features)) (62, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 46, 12, 4]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 5
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (46, 4)
TEST np.zeros((pad_dim,int(features)) (18, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (12, 4)
TEST np.zeros((pad_dim,int(features)) (52, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (4, 4)
TEST np.zeros((pad_dim,int(features)) (60, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 48, 20, 8, 2]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 6
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (48, 4)
TEST np.zeros((pad_dim,int(features)) (16, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (20, 4)
TEST np.zeros((pad_dim,int(features)) (44, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (8, 4)
TEST np.zeros((pad_dim,int(features)) (56, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (2, 4)
TEST np.zeros((pad_dim,int(features)) (62, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 44, 10, 2, 2]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 6
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (44, 4)
TEST np.zeros((pad_dim,int(features)) (20, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (10, 4)
TEST np.zeros((pad_dim,int(features)) (54, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (2, 4)
TEST np.zeros((pad_dim,int(features)) (62, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (2, 4)
TEST np.zeros((pad_dim,int(features)) (62, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 44, 10]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 4
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (44, 4)
TEST np.zeros((pad_dim,int(features)) (20, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (10, 4)
TEST np.zeros((pad_dim,int(features)) (54, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 46, 12]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 4
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (46, 4)
TEST np.zeros((pad_dim,int(features)) (18, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (12, 4)
TEST np.zeros((pad_dim,int(features)) (52, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 46, 12, 2]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 5
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (46, 4)
TEST np.zeros((pad_dim,int(features)) (18, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (12, 4)
TEST np.zeros((pad_dim,int(features)) (52, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (2, 4)
TEST np.zeros((pad_dim,int(features)) (62, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 34, 4]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 4
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (34, 4)
TEST np.zeros((pad_dim,int(features)) (30, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (4, 4)
TEST np.zeros((pad_dim,int(features)) (60, 4)
train.py:220: RuntimeWarning: divide by zero encountered in true_divide
  inv_fpr = interp(base_tpr, tpr, 1. / fpr)[125]
- Eval metrics : accuracy: 0.5234 ; loss: 0.7038
--------------------------------------------------------------------------------
subjets per level= [32, 64, 48, 14, 2]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 5
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
--------------------------------------------------------------------------------
max_n_level and len(levels[i])= 64 64
subjets per level= [32, 64, 44, 6, 2]
TEST contents[i].shape= (32, 4)
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
TEST np.zeros((pad_dim,int(features)) (32, 4)
Number of levels= 5
---------////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
-----------------------------------------------------------------------
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (48, 4)
TEST np.zeros((pad_dim,int(features)) (16, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (14, 4)
max_n_level= 64
TEST np.zeros((pad_dim,int(features)) (50, 4)
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (2, 4)
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (62, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (44, 4)
TEST np.zeros((pad_dim,int(features)) (20, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (6, 4)
TEST np.zeros((pad_dim,int(features)) (58, 4)
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
subjets per level= [32, 64, 42, 12]
TEST contents[i].shape= (2, 4)
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 4
--------------------------------------------------------------------------------
TEST np.zeros((pad_dim,int(features)) (62, 4)
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (42, 4)
TEST np.zeros((pad_dim,int(features)) (22, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (12, 4)
TEST np.zeros((pad_dim,int(features)) (52, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 44, 10]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 4
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
subjets per level= [32, 64, 46, 16, 4, 4]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 6
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (46, 4)
TEST np.zeros((pad_dim,int(features)) (18, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (16, 4)
TEST np.zeros((pad_dim,int(features)) (48, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (4, 4)
TEST np.zeros((pad_dim,int(features)) (60, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (4, 4)
TEST np.zeros((pad_dim,int(features)) (60, 4)
max_n_level and len(levels[i])= 64 64
subjets per level= [32, 64, 44, 6, 2]
TEST contents[i].shape= (44, 4)
TEST np.zeros((pad_dim,int(features)) (20, 4)
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 5
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (10, 4)
TEST np.zeros((pad_dim,int(features)) (54, 4)
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (44, 4)
TEST np.zeros((pad_dim,int(features)) (20, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (6, 4)
TEST np.zeros((pad_dim,int(features)) (58, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (2, 4)
TEST np.zeros((pad_dim,int(features)) (62, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 36, 10, 2, 2]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 6
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (36, 4)
TEST np.zeros((pad_dim,int(features)) (28, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (10, 4)
TEST np.zeros((pad_dim,int(features)) (54, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (2, 4)
TEST np.zeros((pad_dim,int(features)) (62, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (2, 4)
TEST np.zeros((pad_dim,int(features)) (62, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 50, 12, 2]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 5
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (50, 4)
TEST np.zeros((pad_dim,int(features)) (14, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (12, 4)
TEST np.zeros((pad_dim,int(features)) (52, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (2, 4)
TEST np.zeros((pad_dim,int(features)) (62, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 48, 8]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 4
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
--------------------------------------------------------------------------------
subjets per level= [32, 64, 44, 8]
--------------------------------------------------------------------------------
max_n_level and len(levels[i])= 64 64
--------------------------------------------------------------------------------
Number of levels= 4
--------------------------------------------------------------------------------
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level= 64
max_n_level and len(levels[i])= 64 64
--------------------------------------------------------------------------------
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
////////////////////////////////////////////////////////////////////////////////////////////////////
TEST contents[i].shape= (32, 4)
max_n_level and len(levels[i])= 64 64
TEST np.zeros((pad_dim,int(features)) (32, 4)
TEST contents[i].shape= (48, 4)
TEST np.zeros((pad_dim,int(features)) (16, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (8, 4)
TEST np.zeros((pad_dim,int(features)) (56, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (44, 4)
TEST np.zeros((pad_dim,int(features)) (20, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (8, 4)
TEST np.zeros((pad_dim,int(features)) (56, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 60, 18]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 4
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (60, 4)
TEST np.zeros((pad_dim,int(features)) (4, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (18, 4)
TEST np.zeros((pad_dim,int(features)) (46, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 50, 10]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 4
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (50, 4)
TEST np.zeros((pad_dim,int(features)) (14, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (10, 4)
TEST np.zeros((pad_dim,int(features)) (54, 4)
Checkpoint Directory exists!
- Found new best bg rejection = 4.148936170212766
Epoch 17/30
  0%|                                                                                          | 0/37 [00:00<?, ?it/s]
--------------------------------------------------------------------------------
subjets per level= [32, 64, 36, 14, 4]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 5
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (36, 4)
TEST np.zeros((pad_dim,int(features)) (28, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (14, 4)
TEST np.zeros((pad_dim,int(features)) (50, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (4, 4)
TEST np.zeros((pad_dim,int(features)) (60, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 42, 14]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 4
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
subjets per level= [32, 64, 46, 14]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
Number of levels= 4
--------------------------------------------------------------------------------
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (42, 4)
max_n_level= 64
--------------------------------------------------------------------------------
TEST np.zeros((pad_dim,int(features)) (22, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (14, 4)
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (50, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
100%|█████████████████████████████████████████████████████████████████████| 37/37 [00:20<00:00,  1.80it/s, loss=0.659]
- Train metrics: accuracy: 0.6151 ; loss: 0.6575
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (46, 4)
TEST np.zeros((pad_dim,int(features)) (18, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (14, 4)
TEST np.zeros((pad_dim,int(features)) (50, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 38, 6]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 4
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
--------------------------------------------------------------------------------
subjets per level= [32, 64, 48, 8, 2]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 5
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
--------------------------------------------------------------------------------
subjets per level= [32, 64, 52, 8, 2]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 5
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (38, 4)
TEST np.zeros((pad_dim,int(features)) (26, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (48, 4)
TEST np.zeros((pad_dim,int(features)) (16, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
TEST contents[i].shape= (32, 4)
max_n_level and len(levels[i])= 64 64
////////////////////////////////////////////////////////////////////////////////////////////////////
TEST contents[i].shape= (6, 4)
max_n_level and len(levels[i])= 64 64
TEST np.zeros((pad_dim,int(features)) (32, 4)
TEST contents[i].shape= (8, 4)
TEST np.zeros((pad_dim,int(features)) (58, 4)
TEST np.zeros((pad_dim,int(features)) (56, 4)
///////////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (52, 4)
/////////////////////////////////////////////////////////////////////////////////////////////
TEST np.zeros((pad_dim,int(features)) (12, 4)
max_n_level and len(levels[i])= 64 64
////////////////////////////////////////////////////////////////////////////////////////////////////
TEST contents[i].shape= (2, 4)
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (8, 4)
TEST np.zeros((pad_dim,int(features)) (56, 4)
TEST np.zeros((pad_dim,int(features)) (62, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (2, 4)
TEST np.zeros((pad_dim,int(features)) (62, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 46, 18, 2]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 5
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (46, 4)
TEST np.zeros((pad_dim,int(features)) (18, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (18, 4)
TEST np.zeros((pad_dim,int(features)) (46, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (2, 4)
TEST np.zeros((pad_dim,int(features)) (62, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 36, 8]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 4
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (36, 4)
TEST np.zeros((pad_dim,int(features)) (28, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (8, 4)
TEST np.zeros((pad_dim,int(features)) (56, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 40, 8]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 4
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (40, 4)
TEST np.zeros((pad_dim,int(features)) (24, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (8, 4)
TEST np.zeros((pad_dim,int(features)) (56, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 44, 6, 2]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 5
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (44, 4)
TEST np.zeros((pad_dim,int(features)) (20, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (6, 4)
TEST np.zeros((pad_dim,int(features)) (58, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (2, 4)
TEST np.zeros((pad_dim,int(features)) (62, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 58, 22]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 4
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (58, 4)
TEST np.zeros((pad_dim,int(features)) (6, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (22, 4)
TEST np.zeros((pad_dim,int(features)) (42, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 48, 10]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 4
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (48, 4)
TEST np.zeros((pad_dim,int(features)) (16, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (10, 4)
TEST np.zeros((pad_dim,int(features)) (54, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 50, 12]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 4
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (50, 4)
TEST np.zeros((pad_dim,int(features)) (14, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (12, 4)
TEST np.zeros((pad_dim,int(features)) (52, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 44, 24]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 4
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (44, 4)
TEST np.zeros((pad_dim,int(features)) (20, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (24, 4)
TEST np.zeros((pad_dim,int(features)) (40, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 32, 8, 2]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 5
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (8, 4)
TEST np.zeros((pad_dim,int(features)) (56, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (2, 4)
TEST np.zeros((pad_dim,int(features)) (62, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 40, 12]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 4
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (40, 4)
TEST np.zeros((pad_dim,int(features)) (24, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (12, 4)
TEST np.zeros((pad_dim,int(features)) (52, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 42, 12, 6]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 5
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (42, 4)
TEST np.zeros((pad_dim,int(features)) (22, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (12, 4)
TEST np.zeros((pad_dim,int(features)) (52, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (6, 4)
TEST np.zeros((pad_dim,int(features)) (58, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 34, 4, 4]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 5
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (34, 4)
TEST np.zeros((pad_dim,int(features)) (30, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (4, 4)
TEST np.zeros((pad_dim,int(features)) (60, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (4, 4)
TEST np.zeros((pad_dim,int(features)) (60, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 36, 2]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 4
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (36, 4)
TEST np.zeros((pad_dim,int(features)) (28, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (2, 4)
TEST np.zeros((pad_dim,int(features)) (62, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 42, 18, 4]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 5
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (42, 4)
TEST np.zeros((pad_dim,int(features)) (22, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (18, 4)
TEST np.zeros((pad_dim,int(features)) (46, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (4, 4)
TEST np.zeros((pad_dim,int(features)) (60, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 40, 10, 2]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 5
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (40, 4)
TEST np.zeros((pad_dim,int(features)) (24, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (10, 4)
TEST np.zeros((pad_dim,int(features)) (54, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (2, 4)
TEST np.zeros((pad_dim,int(features)) (62, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 42, 6]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 4
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (42, 4)
TEST np.zeros((pad_dim,int(features)) (22, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (6, 4)
TEST np.zeros((pad_dim,int(features)) (58, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 46, 12]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 4
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (46, 4)
TEST np.zeros((pad_dim,int(features)) (18, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (12, 4)
TEST np.zeros((pad_dim,int(features)) (52, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 32, 8, 2]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 5
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (8, 4)
TEST np.zeros((pad_dim,int(features)) (56, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (2, 4)
TEST np.zeros((pad_dim,int(features)) (62, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 40, 14, 4]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 5
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (40, 4)
TEST np.zeros((pad_dim,int(features)) (24, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (14, 4)
TEST np.zeros((pad_dim,int(features)) (50, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (4, 4)
TEST np.zeros((pad_dim,int(features)) (60, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 48, 10, 4]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 5
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (48, 4)
TEST np.zeros((pad_dim,int(features)) (16, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (10, 4)
TEST np.zeros((pad_dim,int(features)) (54, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (4, 4)
TEST np.zeros((pad_dim,int(features)) (60, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 44, 8, 4]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 5
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (44, 4)
TEST np.zeros((pad_dim,int(features)) (20, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (8, 4)
TEST np.zeros((pad_dim,int(features)) (56, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (4, 4)
TEST np.zeros((pad_dim,int(features)) (60, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 44, 10]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 4
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (44, 4)
TEST np.zeros((pad_dim,int(features)) (20, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (10, 4)
TEST np.zeros((pad_dim,int(features)) (54, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 40, 12, 4]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 5
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (40, 4)
TEST np.zeros((pad_dim,int(features)) (24, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (12, 4)
TEST np.zeros((pad_dim,int(features)) (52, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (4, 4)
TEST np.zeros((pad_dim,int(features)) (60, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 50, 12, 2]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 5
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (50, 4)
TEST np.zeros((pad_dim,int(features)) (14, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (12, 4)
TEST np.zeros((pad_dim,int(features)) (52, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (2, 4)
TEST np.zeros((pad_dim,int(features)) (62, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 46, 12, 4]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 5
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (46, 4)
TEST np.zeros((pad_dim,int(features)) (18, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (12, 4)
TEST np.zeros((pad_dim,int(features)) (52, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (4, 4)
TEST np.zeros((pad_dim,int(features)) (60, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 48, 20, 8, 2]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 6
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (48, 4)
TEST np.zeros((pad_dim,int(features)) (16, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (20, 4)
TEST np.zeros((pad_dim,int(features)) (44, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (8, 4)
TEST np.zeros((pad_dim,int(features)) (56, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (2, 4)
TEST np.zeros((pad_dim,int(features)) (62, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 44, 10, 2, 2]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 6
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (44, 4)
TEST np.zeros((pad_dim,int(features)) (20, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (10, 4)
TEST np.zeros((pad_dim,int(features)) (54, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (2, 4)
TEST np.zeros((pad_dim,int(features)) (62, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (2, 4)
TEST np.zeros((pad_dim,int(features)) (62, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 44, 10]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 4
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (44, 4)
TEST np.zeros((pad_dim,int(features)) (20, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (10, 4)
TEST np.zeros((pad_dim,int(features)) (54, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 46, 12]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 4
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (46, 4)
TEST np.zeros((pad_dim,int(features)) (18, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (12, 4)
TEST np.zeros((pad_dim,int(features)) (52, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 46, 12, 2]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 5
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (46, 4)
TEST np.zeros((pad_dim,int(features)) (18, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (12, 4)
TEST np.zeros((pad_dim,int(features)) (52, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (2, 4)
TEST np.zeros((pad_dim,int(features)) (62, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 34, 4]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 4
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (34, 4)
TEST np.zeros((pad_dim,int(features)) (30, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (4, 4)
TEST np.zeros((pad_dim,int(features)) (60, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 48, 14, 2]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 5
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
--------------------------------------------------------------------------------
subjets per level= [32, 64, 44, 6, 2]
max_n_level and len(levels[i])= 64 64
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
TEST contents[i].shape= (48, 4)
Number of levels= 5
--------------------------------------------------------------------------------
TEST np.zeros((pad_dim,int(features)) (16, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (14, 4)
TEST np.zeros((pad_dim,int(features)) (50, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
--------------------------------------------------------------------------------
max_n_level= 64
TEST contents[i].shape= (2, 4)
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
TEST np.zeros((pad_dim,int(features)) (62, 4)
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (44, 4)
TEST np.zeros((pad_dim,int(features)) (20, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (6, 4)
TEST np.zeros((pad_dim,int(features)) (58, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (2, 4)
TEST np.zeros((pad_dim,int(features)) (62, 4)
subjets per level= [32, 64, 42, 12]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 4
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (42, 4)
TEST np.zeros((pad_dim,int(features)) (22, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (12, 4)
TEST np.zeros((pad_dim,int(features)) (52, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 44, 10]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 4
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (44, 4)
TEST np.zeros((pad_dim,int(features)) (20, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 46, 16, 4, 4]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
--------------------------------------------------------------------------------
Number of levels= 6
--------------------------------------------------------------------------------
subjets per level= [32, 64, 44, 6, 2]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
max_n_level and len(levels[i])= 64 64
Number of levels= 5
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
TEST contents[i].shape= (10, 4)
max_n_level and len(levels[i])= 64 64
max_n_level= 64
TEST contents[i].shape= (32, 4)
--------------------------------------------------------------------------------
TEST np.zeros((pad_dim,int(features)) (54, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST contents[i].shape= (46, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
TEST np.zeros((pad_dim,int(features)) (18, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (16, 4)
TEST contents[i].shape= (44, 4)
TEST np.zeros((pad_dim,int(features)) (48, 4)
TEST np.zeros((pad_dim,int(features)) (20, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (4, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
TEST np.zeros((pad_dim,int(features)) (60, 4)
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (6, 4)
TEST np.zeros((pad_dim,int(features)) (58, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (4, 4)
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
subjets per level= [32, 64, 36, 10, 2, 2]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 6
--------------------------------------------------------------------------------
TEST np.zeros((pad_dim,int(features)) (60, 4)
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (2, 4)
TEST np.zeros((pad_dim,int(features)) (62, 4)
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (36, 4)
TEST np.zeros((pad_dim,int(features)) (28, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (10, 4)
TEST np.zeros((pad_dim,int(features)) (54, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (2, 4)
TEST np.zeros((pad_dim,int(features)) (62, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (2, 4)
TEST np.zeros((pad_dim,int(features)) (62, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 48, 8]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 4
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (48, 4)
TEST np.zeros((pad_dim,int(features)) (16, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (8, 4)
TEST np.zeros((pad_dim,int(features)) (56, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 60, 18]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 4
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (60, 4)
TEST np.zeros((pad_dim,int(features)) (4, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (18, 4)
TEST np.zeros((pad_dim,int(features)) (46, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 50, 12, 2]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 5
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (50, 4)
TEST np.zeros((pad_dim,int(features)) (14, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (12, 4)
TEST np.zeros((pad_dim,int(features)) (52, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (2, 4)
TEST np.zeros((pad_dim,int(features)) (62, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 44, 8]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 4
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (44, 4)
TEST np.zeros((pad_dim,int(features)) (20, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (8, 4)
TEST np.zeros((pad_dim,int(features)) (56, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 50, 10]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 4
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (50, 4)
TEST np.zeros((pad_dim,int(features)) (14, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (10, 4)
TEST np.zeros((pad_dim,int(features)) (54, 4)
train.py:220: RuntimeWarning: divide by zero encountered in true_divide
  inv_fpr = interp(base_tpr, tpr, 1. / fpr)[125]
- Eval metrics : accuracy: 0.5156 ; loss: 0.7047
Epoch 18/30
  0%|                                                                                          | 0/37 [00:00<?, ?it/s]
Checkpoint Directory exists!
--------------------------------------------------------------------------------
subjets per level= [32, 64, 36, 14, 4]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 5
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
///////////////////////////////////////////////////////////////////////////////////////////////--------------------------------------------------------------------------------
subjets per level= [32, 64, 42, 14]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 4
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
/////
max_n_level and len(levels[i])= 64 64
max_n_level and len(levels[i])= 64 64
--------------------------------------------------------------------------------
TEST contents[i].shape= (42, 4)
TEST contents[i].shape= (36, 4)
subjets per level= [32, 64, 46, 14]
--------------------------------------------------------------------------------
TEST np.zeros((pad_dim,int(features)) (28, 4)
--------------------------------------------------------------------------------
Number of levels= 4
--------------------------------------------------------------------------------
TEST np.zeros((pad_dim,int(features)) (22, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (14, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
TEST np.zeros((pad_dim,int(features)) (50, 4)
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (14, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (4, 4)
TEST np.zeros((pad_dim,int(features)) (50, 4)
TEST np.zeros((pad_dim,int(features)) (60, 4)
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (46, 4)
TEST np.zeros((pad_dim,int(features)) (18, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (14, 4)
TEST np.zeros((pad_dim,int(features)) (50, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 48, 8, 2]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 5
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (48, 4)
TEST np.zeros((pad_dim,int(features)) (16, 4)
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (8, 4)
subjets per level= [32, 64, 52, 8, 2]
--------------------------------------------------------------------------------
TEST np.zeros((pad_dim,int(features)) (56, 4)
--------------------------------------------------------------------------------
Number of levels= 5
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (2, 4)
TEST np.zeros((pad_dim,int(features)) (62, 4)
--------------------------------------------------------------------------------
max_n_level= 64
subjets per level= [32, 64, 38, 6]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 4
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (38, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
TEST np.zeros((pad_dim,int(features)) (26, 4)
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (52, 4)
TEST np.zeros((pad_dim,int(features)) (12, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (6, 4)
TEST np.zeros((pad_dim,int(features)) (58, 4)
TEST contents[i].shape= (8, 4)
TEST np.zeros((pad_dim,int(features)) (56, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (2, 4)
TEST np.zeros((pad_dim,int(features)) (62, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 46, 18, 2]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 5
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (46, 4)
TEST np.zeros((pad_dim,int(features)) (18, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (18, 4)
TEST np.zeros((pad_dim,int(features)) (46, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (2, 4)
100%|█████████████████████████████████████████████████████████████████████| 37/37 [00:19<00:00,  1.90it/s, loss=0.658]
- Train metrics: accuracy: 0.6184 ; loss: 0.6558
100%|█████████████████████████████████████████████████████████████████████| 37/37 [00:19<00:00,  1.90it/s, loss=0.658]
subjets per level= [32, 64, 36, 8]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 4
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (36, 4)
TEST np.zeros((pad_dim,int(features)) (28, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (8, 4)
TEST np.zeros((pad_dim,int(features)) (56, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 40, 8]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 4
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (40, 4)
TEST np.zeros((pad_dim,int(features)) (24, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (8, 4)
TEST np.zeros((pad_dim,int(features)) (56, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 44, 6, 2]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 5
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (44, 4)
TEST np.zeros((pad_dim,int(features)) (20, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (6, 4)
TEST np.zeros((pad_dim,int(features)) (58, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (2, 4)
TEST np.zeros((pad_dim,int(features)) (62, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 58, 22]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 4
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (58, 4)
TEST np.zeros((pad_dim,int(features)) (6, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (22, 4)
TEST np.zeros((pad_dim,int(features)) (42, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 48, 10]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 4
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (48, 4)
TEST np.zeros((pad_dim,int(features)) (16, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (10, 4)
TEST np.zeros((pad_dim,int(features)) (54, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 50, 12]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 4
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (50, 4)
TEST np.zeros((pad_dim,int(features)) (14, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (12, 4)
TEST np.zeros((pad_dim,int(features)) (52, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 44, 24]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 4
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (44, 4)
TEST np.zeros((pad_dim,int(features)) (20, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (24, 4)
TEST np.zeros((pad_dim,int(features)) (40, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 32, 8, 2]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 5
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (8, 4)
TEST np.zeros((pad_dim,int(features)) (56, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (2, 4)
TEST np.zeros((pad_dim,int(features)) (62, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 40, 12]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 4
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (40, 4)
TEST np.zeros((pad_dim,int(features)) (24, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (12, 4)
TEST np.zeros((pad_dim,int(features)) (52, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 42, 12, 6]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 5
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (42, 4)
TEST np.zeros((pad_dim,int(features)) (22, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (12, 4)
TEST np.zeros((pad_dim,int(features)) (52, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (6, 4)
TEST np.zeros((pad_dim,int(features)) (58, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 34, 4, 4]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 5
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (34, 4)
TEST np.zeros((pad_dim,int(features)) (30, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (4, 4)
TEST np.zeros((pad_dim,int(features)) (60, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (4, 4)
TEST np.zeros((pad_dim,int(features)) (60, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 36, 2]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 4
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (36, 4)
TEST np.zeros((pad_dim,int(features)) (28, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (2, 4)
TEST np.zeros((pad_dim,int(features)) (62, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 42, 18, 4]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 5
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (42, 4)
TEST np.zeros((pad_dim,int(features)) (22, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (18, 4)
TEST np.zeros((pad_dim,int(features)) (46, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (4, 4)
TEST np.zeros((pad_dim,int(features)) (60, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 40, 10, 2]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 5
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (40, 4)
TEST np.zeros((pad_dim,int(features)) (24, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (10, 4)
TEST np.zeros((pad_dim,int(features)) (54, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (2, 4)
TEST np.zeros((pad_dim,int(features)) (62, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 42, 6]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 4
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (42, 4)
TEST np.zeros((pad_dim,int(features)) (22, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (6, 4)
TEST np.zeros((pad_dim,int(features)) (58, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 46, 12]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 4
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (46, 4)
TEST np.zeros((pad_dim,int(features)) (18, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (12, 4)
TEST np.zeros((pad_dim,int(features)) (52, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 32, 8, 2]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 5
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (8, 4)
TEST np.zeros((pad_dim,int(features)) (56, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (2, 4)
TEST np.zeros((pad_dim,int(features)) (62, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 40, 14, 4]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 5
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (40, 4)
TEST np.zeros((pad_dim,int(features)) (24, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (14, 4)
TEST np.zeros((pad_dim,int(features)) (50, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (4, 4)
TEST np.zeros((pad_dim,int(features)) (60, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 48, 10, 4]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 5
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (48, 4)
TEST np.zeros((pad_dim,int(features)) (16, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (10, 4)
TEST np.zeros((pad_dim,int(features)) (54, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (4, 4)
TEST np.zeros((pad_dim,int(features)) (60, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 44, 8, 4]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 5
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (44, 4)
TEST np.zeros((pad_dim,int(features)) (20, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (8, 4)
TEST np.zeros((pad_dim,int(features)) (56, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (4, 4)
TEST np.zeros((pad_dim,int(features)) (60, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 44, 10]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 4
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (44, 4)
TEST np.zeros((pad_dim,int(features)) (20, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (10, 4)
TEST np.zeros((pad_dim,int(features)) (54, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 40, 12, 4]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 5
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (40, 4)
TEST np.zeros((pad_dim,int(features)) (24, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (12, 4)
TEST np.zeros((pad_dim,int(features)) (52, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (4, 4)
TEST np.zeros((pad_dim,int(features)) (60, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 50, 12, 2]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 5
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (50, 4)
TEST np.zeros((pad_dim,int(features)) (14, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (12, 4)
TEST np.zeros((pad_dim,int(features)) (52, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (2, 4)
TEST np.zeros((pad_dim,int(features)) (62, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 46, 12, 4]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 5
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (46, 4)
TEST np.zeros((pad_dim,int(features)) (18, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (12, 4)
TEST np.zeros((pad_dim,int(features)) (52, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (4, 4)
TEST np.zeros((pad_dim,int(features)) (60, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 48, 20, 8, 2]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 6
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (48, 4)
TEST np.zeros((pad_dim,int(features)) (16, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (20, 4)
TEST np.zeros((pad_dim,int(features)) (44, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (8, 4)
TEST np.zeros((pad_dim,int(features)) (56, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (2, 4)
TEST np.zeros((pad_dim,int(features)) (62, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 44, 10, 2, 2]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 6
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (44, 4)
TEST np.zeros((pad_dim,int(features)) (20, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (10, 4)
TEST np.zeros((pad_dim,int(features)) (54, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (2, 4)
TEST np.zeros((pad_dim,int(features)) (62, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (2, 4)
TEST np.zeros((pad_dim,int(features)) (62, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 44, 10]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 4
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (44, 4)
TEST np.zeros((pad_dim,int(features)) (20, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (10, 4)
TEST np.zeros((pad_dim,int(features)) (54, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 46, 12]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 4
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (46, 4)
TEST np.zeros((pad_dim,int(features)) (18, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (12, 4)
TEST np.zeros((pad_dim,int(features)) (52, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 46, 12, 2]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 5
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (46, 4)
TEST np.zeros((pad_dim,int(features)) (18, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (12, 4)
TEST np.zeros((pad_dim,int(features)) (52, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (2, 4)
TEST np.zeros((pad_dim,int(features)) (62, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 34, 4]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 4
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (34, 4)
TEST np.zeros((pad_dim,int(features)) (30, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (4, 4)
TEST np.zeros((pad_dim,int(features)) (60, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 48, 14, 2]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 5
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
--------------------------------------------------------------------------------
TEST np.zeros((pad_dim,int(features)) (32, 4)
subjets per level= [32, 64, 44, 6, 2]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 5
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (48, 4)
TEST np.zeros((pad_dim,int(features)) (16, 4)
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (14, 4)
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (50, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
TEST np.zeros((pad_dim,int(features)) (0, 4)
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (2, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
TEST np.zeros((pad_dim,int(features)) (62, 4)
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (44, 4)
TEST np.zeros((pad_dim,int(features)) (20, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (6, 4)
TEST np.zeros((pad_dim,int(features)) (58, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 42, 12]
////////////////////////////////////////////////////////////////////////////////////////////////////
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
max_n_level and len(levels[i])= 64 64
Number of levels= 4
TEST contents[i].shape= (2, 4)
--------------------------------------------------------------------------------
TEST np.zeros((pad_dim,int(features)) (62, 4)
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (42, 4)
TEST np.zeros((pad_dim,int(features)) (22, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (12, 4)
TEST np.zeros((pad_dim,int(features)) (52, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 44, 10]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 4
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
--------------------------------------------------------------------------------
subjets per level= [32, 64, 46, 16, 4, 4]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 6
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
subjets per level= [32, 64, 44, 6, 2]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
max_n_level and len(levels[i])= 64 64
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (44, 4)
TEST np.zeros((pad_dim,int(features)) (20, 4)
TEST contents[i].shape= (64, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (10, 4)
TEST np.zeros((pad_dim,int(features)) (54, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
Number of levels= 5
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (46, 4)
TEST np.zeros((pad_dim,int(features)) (18, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (16, 4)
TEST np.zeros((pad_dim,int(features)) (48, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (4, 4)
TEST np.zeros((pad_dim,int(features)) (60, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
--------------------------------------------------------------------------------
TEST contents[i].shape= (4, 4)
TEST np.zeros((pad_dim,int(features)) (60, 4)
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (44, 4)
TEST np.zeros((pad_dim,int(features)) (20, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (6, 4)
TEST np.zeros((pad_dim,int(features)) (58, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (2, 4)
TEST np.zeros((pad_dim,int(features)) (62, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 36, 10, 2, 2]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 6
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (36, 4)
TEST np.zeros((pad_dim,int(features)) (28, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (10, 4)
TEST np.zeros((pad_dim,int(features)) (54, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (2, 4)
TEST np.zeros((pad_dim,int(features)) (62, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (2, 4)
TEST np.zeros((pad_dim,int(features)) (62, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 48, 8]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 4
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (48, 4)
TEST np.zeros((pad_dim,int(features)) (16, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (8, 4)
TEST np.zeros((pad_dim,int(features)) (56, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 60, 18]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 4
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (60, 4)
TEST np.zeros((pad_dim,int(features)) (4, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (18, 4)
TEST np.zeros((pad_dim,int(features)) (46, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 50, 12, 2]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 5
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (50, 4)
TEST np.zeros((pad_dim,int(features)) (14, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (12, 4)
TEST np.zeros((pad_dim,int(features)) (52, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (2, 4)
TEST np.zeros((pad_dim,int(features)) (62, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 44, 8]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 4
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (44, 4)
TEST np.zeros((pad_dim,int(features)) (20, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (8, 4)
TEST np.zeros((pad_dim,int(features)) (56, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 50, 10]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 4
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (50, 4)
TEST np.zeros((pad_dim,int(features)) (14, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (10, 4)
- Found new best bg rejection = 4.333333333333333█████████████████████████| 37/37 [00:19<00:00,  1.90it/s, loss=0.658]
Epoch 19/30
  0%|                                                                                          | 0/37 [00:00<?, ?it/s]
- Found new best bg rejection = 4.333333333333333█████████████████████████| 37/37 [00:19<00:00,  1.90it/s, loss=0.658]
Checkpoint Directory exists!
- Found new best bg rejection = 4.333333333333333█████████████████████████| 37/37 [00:19<00:00,  1.90it/s, loss=0.658]
--------------------------------------------------------------------------------
subjets per level= [32, 64, 36, 14, 4]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 5
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (36, 4)
--------------------------------------------------------------------------------
TEST np.zeros((pad_dim,int(features)) (28, 4)
subjets per level= [32, 64, 46, 14]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 4
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
////////////////////////////////////////////////////////////////////////////////////////////////////
TEST contents[i].shape= (14, 4)
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (50, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (46, 4)
TEST np.zeros((pad_dim,int(features)) (18, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
////////////////////////////////////////////////////////////////////////////////////////////////////
TEST contents[i].shape= (14, 4)
--------------------------------------------------------------------------------
TEST np.zeros((pad_dim,int(features)) (50, 4)
subjets per level= [32, 64, 42, 14]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 4
--------------------------------------------------------------------------------
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (4, 4)
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST np.zeros((pad_dim,int(features)) (60, 4)
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (42, 4)
TEST np.zeros((pad_dim,int(features)) (22, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (14, 4)
TEST np.zeros((pad_dim,int(features)) (50, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 52, 8, 2]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 5
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (52, 4)
TEST np.zeros((pad_dim,int(features)) (12, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (8, 4)
TEST np.zeros((pad_dim,int(features)) (56, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (2, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 48, 8, 2]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 5
--------------------------------------------------------------------------------
TEST np.zeros((pad_dim,int(features)) (62, 4)
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
--------------------------------------------------------------------------------
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
subjets per level= [32, 64, 38, 6]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 4
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level= 64
--------------------------------------------------------------------------------
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (48, 4)
TEST np.zeros((pad_dim,int(features)) (16, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (8, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
TEST np.zeros((pad_dim,int(features)) (56, 4)
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (2, 4)
TEST contents[i].shape= (38, 4)
TEST np.zeros((pad_dim,int(features)) (62, 4)
TEST np.zeros((pad_dim,int(features)) (26, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (6, 4)
TEST np.zeros((pad_dim,int(features)) (58, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 46, 18, 2]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 5
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (46, 4)
TEST np.zeros((pad_dim,int(features)) (18, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (18, 4)
TEST np.zeros((pad_dim,int(features)) (46, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (2, 4)
TEST np.zeros((pad_dim,int(features)) (62, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 36, 8]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 4
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (36, 4)
TEST np.zeros((pad_dim,int(features)) (28, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (8, 4)
TEST np.zeros((pad_dim,int(features)) (56, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 40, 8]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 4
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (40, 4)
TEST np.zeros((pad_dim,int(features)) (24, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (8, 4)
TEST np.zeros((pad_dim,int(features)) (56, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 44, 6, 2]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 5
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (44, 4)
TEST np.zeros((pad_dim,int(features)) (20, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (6, 4)
TEST np.zeros((pad_dim,int(features)) (58, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (2, 4)
TEST np.zeros((pad_dim,int(features)) (62, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 58, 22]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 4
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (58, 4)
TEST np.zeros((pad_dim,int(features)) (6, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (22, 4)
TEST np.zeros((pad_dim,int(features)) (42, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 48, 10]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 4
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (48, 4)
TEST np.zeros((pad_dim,int(features)) (16, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (10, 4)
TEST np.zeros((pad_dim,int(features)) (54, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 50, 12]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 4
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (50, 4)
TEST np.zeros((pad_dim,int(features)) (14, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (12, 4)
TEST np.zeros((pad_dim,int(features)) (52, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 44, 24]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 4
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (44, 4)
TEST np.zeros((pad_dim,int(features)) (20, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (24, 4)
TEST np.zeros((pad_dim,int(features)) (40, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 32, 8, 2]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 5
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (8, 4)
TEST np.zeros((pad_dim,int(features)) (56, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (2, 4)
TEST np.zeros((pad_dim,int(features)) (62, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 40, 12]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 4
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (40, 4)
TEST np.zeros((pad_dim,int(features)) (24, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (12, 4)
TEST np.zeros((pad_dim,int(features)) (52, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 42, 12, 6]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 5
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (42, 4)
TEST np.zeros((pad_dim,int(features)) (22, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (12, 4)
TEST np.zeros((pad_dim,int(features)) (52, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (6, 4)
TEST np.zeros((pad_dim,int(features)) (58, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 34, 4, 4]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 5
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (34, 4)
TEST np.zeros((pad_dim,int(features)) (30, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (4, 4)
TEST np.zeros((pad_dim,int(features)) (60, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (4, 4)
TEST np.zeros((pad_dim,int(features)) (60, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 36, 2]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 4
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (36, 4)
TEST np.zeros((pad_dim,int(features)) (28, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (2, 4)
TEST np.zeros((pad_dim,int(features)) (62, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 42, 18, 4]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 5
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (42, 4)
TEST np.zeros((pad_dim,int(features)) (22, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (18, 4)
TEST np.zeros((pad_dim,int(features)) (46, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (4, 4)
TEST np.zeros((pad_dim,int(features)) (60, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 40, 10, 2]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 5
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (40, 4)
TEST np.zeros((pad_dim,int(features)) (24, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (10, 4)
TEST np.zeros((pad_dim,int(features)) (54, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (2, 4)
TEST np.zeros((pad_dim,int(features)) (62, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 42, 6]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 4
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (42, 4)
TEST np.zeros((pad_dim,int(features)) (22, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (6, 4)
TEST np.zeros((pad_dim,int(features)) (58, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 46, 12]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 4
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (46, 4)
TEST np.zeros((pad_dim,int(features)) (18, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (12, 4)
TEST np.zeros((pad_dim,int(features)) (52, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 32, 8, 2]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 5
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (8, 4)
TEST np.zeros((pad_dim,int(features)) (56, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (2, 4)
TEST np.zeros((pad_dim,int(features)) (62, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 40, 14, 4]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 5
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (40, 4)
TEST np.zeros((pad_dim,int(features)) (24, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (14, 4)
TEST np.zeros((pad_dim,int(features)) (50, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (4, 4)
TEST np.zeros((pad_dim,int(features)) (60, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 48, 10, 4]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 5
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (48, 4)
TEST np.zeros((pad_dim,int(features)) (16, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (10, 4)
TEST np.zeros((pad_dim,int(features)) (54, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (4, 4)
TEST np.zeros((pad_dim,int(features)) (60, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 44, 8, 4]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 5
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (44, 4)
TEST np.zeros((pad_dim,int(features)) (20, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (8, 4)
TEST np.zeros((pad_dim,int(features)) (56, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (4, 4)
TEST np.zeros((pad_dim,int(features)) (60, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 44, 10]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 4
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (44, 4)
TEST np.zeros((pad_dim,int(features)) (20, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (10, 4)
TEST np.zeros((pad_dim,int(features)) (54, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 40, 12, 4]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 5
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (40, 4)
TEST np.zeros((pad_dim,int(features)) (24, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (12, 4)
TEST np.zeros((pad_dim,int(features)) (52, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (4, 4)
TEST np.zeros((pad_dim,int(features)) (60, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 50, 12, 2]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 5
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (50, 4)
TEST np.zeros((pad_dim,int(features)) (14, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (12, 4)
TEST np.zeros((pad_dim,int(features)) (52, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (2, 4)
TEST np.zeros((pad_dim,int(features)) (62, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 46, 12, 4]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 5
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (46, 4)
TEST np.zeros((pad_dim,int(features)) (18, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (12, 4)
TEST np.zeros((pad_dim,int(features)) (52, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (4, 4)
TEST np.zeros((pad_dim,int(features)) (60, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 48, 20, 8, 2]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 6
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (48, 4)
TEST np.zeros((pad_dim,int(features)) (16, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (20, 4)
TEST np.zeros((pad_dim,int(features)) (44, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (8, 4)
TEST np.zeros((pad_dim,int(features)) (56, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (2, 4)
TEST np.zeros((pad_dim,int(features)) (62, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 44, 10, 2, 2]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 6
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (44, 4)
TEST np.zeros((pad_dim,int(features)) (20, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (10, 4)
TEST np.zeros((pad_dim,int(features)) (54, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (2, 4)
TEST np.zeros((pad_dim,int(features)) (62, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (2, 4)
TEST np.zeros((pad_dim,int(features)) (62, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 44, 10]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 4
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (44, 4)
TEST np.zeros((pad_dim,int(features)) (20, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (10, 4)
TEST np.zeros((pad_dim,int(features)) (54, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 46, 12]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 4
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (46, 4)
TEST np.zeros((pad_dim,int(features)) (18, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (12, 4)
TEST np.zeros((pad_dim,int(features)) (52, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 46, 12, 2]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 5
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (46, 4)
TEST np.zeros((pad_dim,int(features)) (18, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (12, 4)
TEST np.zeros((pad_dim,int(features)) (52, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (2, 4)
TEST np.zeros((pad_dim,int(features)) (62, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 34, 4]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 4
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (34, 4)
TEST np.zeros((pad_dim,int(features)) (30, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (4, 4)
TEST np.zeros((pad_dim,int(features)) (60, 4)
- Found new best bg rejection = 4.333333333333333█████████████████████████| 37/37 [00:19<00:00,  1.90it/s, loss=0.658]
--------------------------------------------------------------------------------
subjets per level= [32, 64, 44, 6, 2]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
subjets per level= [32, 64, 48, 14, 2]
Number of levels= 5
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 5
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
max_n_level and len(levels[i])= 64 64
TEST np.zeros((pad_dim,int(features)) (32, 4)
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
////////////////////////////////////////////////////////////////////////////////////////////////////
TEST contents[i].shape= (64, 4)
max_n_level and len(levels[i])= 64 64
TEST np.zeros((pad_dim,int(features)) (0, 4)
TEST contents[i].shape= (64, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (44, 4)
TEST np.zeros((pad_dim,int(features)) (20, 4)
TEST np.zeros((p////////////////////////////////////////////////////////////////////////////////////////////////////
ad_dim,int(features)) (0, 4)
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (6, 4)
TEST np.zeros((pad_dim,int(features)) (58, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
////////////////////////////////////////////////////////////////////////////////////////////////////
TEST contents[i].shape= (48, 4)
max_n_level and len(levels[i])= 64 64
TEST np.zeros((pad_dim,int(features)) (16, 4)
TEST contents[i].shape= (2, 4)
TEST np.zeros((pad_dim,int(features)) (62, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (14, 4)
TEST np.zeros((pad_dim,int(features)) (50, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 42, 12]
////////////////////////////////////////////////////////////////////////////////////////////////////
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 4
max_n_level and len(levels[i])= 64 64
--------------------------------------------------------------------------------
TEST contents[i].shape= (2, 4)
TEST np.zeros((pad_dim,int(features)) (62, 4)
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (42, 4)
TEST np.zeros((pad_dim,int(features)) (22, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (12, 4)
TEST np.zeros((pad_dim,int(features)) (52, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 44, 6, 2]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 5
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////--------------------------------------------------------------------------------
subjets per level= [32, 64, 46, 16, 4, 4]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 6
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////--------------------------------------------------------------------------------
////////
////
max_n_level and len(levels[i])= 64 64
subjets per level= [32, 64, 44, 10]
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (46, 4)
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
TEST contents[i].shape= (44, 4)
Number of levels= 4
--------------------------------------------------------------------------------
TEST np.zeros((pad_dim,int(features)) (18, 4)
TEST np.zeros((pad_dim,int(features)) (20, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (16, 4)
TEST contents[i].shape= (6, 4)
max_n_level= 64
--------------------------------------------------------------------------------
TEST np.zeros((pad_dim,int(features)) (48, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (4, 4)
TEST np.zeros((pad_dim,int(features)) (60, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
TEST np.zeros((pad_dim,int(features)) (58, 4)
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (4, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
TEST np.zeros((pad_dim,int(features)) (60, 4)
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (44, 4)
TEST np.zeros((pad_dim,int(features)) (20, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (2, 4)
TEST np.zeros((pad_dim,int(features)) (62, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (10, 4)
TEST np.zeros((pad_dim,int(features)) (54, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 36, 10, 2, 2]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 6
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (36, 4)
TEST np.zeros((pad_dim,int(features)) (28, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (10, 4)
TEST np.zeros((pad_dim,int(features)) (54, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (2, 4)
TEST np.zeros((pad_dim,int(features)) (62, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (2, 4)
TEST np.zeros((pad_dim,int(features)) (62, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 48, 8]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 4
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (48, 4)
TEST np.zeros((pad_dim,int(features)) (16, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (8, 4)
TEST np.zeros((pad_dim,int(features)) (56, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 60, 18]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 4
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (60, 4)
TEST np.zeros((pad_dim,int(features)) (4, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (18, 4)
TEST np.zeros((pad_dim,int(features)) (46, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 50, 12, 2]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 5
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (50, 4)
TEST np.zeros((pad_dim,int(features)) (14, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (12, 4)
TEST np.zeros((pad_dim,int(features)) (52, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (2, 4)
TEST np.zeros((pad_dim,int(features)) (62, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 44, 8]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 4
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (44, 4)
TEST np.zeros((pad_dim,int(features)) (20, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (8, 4)
TEST np.zeros((pad_dim,int(features)) (56, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 50, 10]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 4
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (50, 4)
TEST np.zeros((pad_dim,int(features)) (14, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (10, 4)
TEST np.zeros((pad_dim,int(features)) (54, 4)
  inv_fpr = interp(base_tpr, tpr, 1. / fpr)[125]3█████████████████████████| 37/37 [00:19<00:00,  1.90it/s, loss=0.658]
  inv_fpr = interp(base_tpr, tpr, 1. / fpr)[125]3█████████████████████████| 37/37 [00:19<00:00,  1.90it/s, loss=0.658]
--------------------------------------------------------------------------------
subjets per level= [32, 64, 36, 14, 4]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 5
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
///////////////////////////////////////////////////////////////////////////////////////////////--------------------------------------------------------------------------------
subjets per level= [32, 64, 42, 14]
--------------------------------------------------------------------------------
/////
--------------------------------------------------------------------------------
Number of levels= 4
--------------------------------------------------------------------------------
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (36, 4)
TEST np.zeros((pad_dim,int(features)) (28, 4)
max_n_level= 64
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
subjets per level= [32, 64, 46, 14]
--------------------------------------------------------------------------------
max_n_level and len(levels[i])= 64 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
Number of levels= 4
--------------------------------------------------------------------------------
TEST contents[i].shape= (14, 4)
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (50, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
////////////////////////////////////////////////////////////////////////////////////////////////////
TEST contents[i].shape= (4, 4)
max_n_level and len(levels[i])= 64 64
TEST np.zeros((pad_dim,int(features)) (60, 4)
TEST contents[i].shape= (64, 4)
max_n_level= 64
--------------------------------------------------------------------------------
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (42, 4)
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (22, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (14, 4)
TEST np.zeros((pad_dim,int(features)) (50, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (46, 4)
TEST np.zeros((pad_dim,int(features)) (18, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (14, 4)
TEST np.zeros((pad_dim,int(features)) (50, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 48, 8, 2]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 5
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (48, 4)
TEST np.zeros((pad_dim,int(features)) (16, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
subjets per level= [32, 64, 52, 8, 2]
max_n_level and len(levels[i])= 64 64
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
TEST contents[i].shape= (8, 4)
Number of levels= 5
TEST np.zeros((pad_dim,int(features)) (56, 4)
subjets per level= [32, 64, 38, 6]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 4
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////max_n_level= 64
max_n_level= 64
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (38, 4)
TEST contents[i].shape= (2, 4)
TEST np.zeros((pad_dim,int(features)) (62, 4)
TEST np.zeros((pad_dim,int(features)) (26, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
////////////////////////////////////////////////////////////////////////////////////////////////////
TEST contents[i].shape= (52, 4)
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (6, 4)
TEST np.zeros((pad_dim,int(features)) (12, 4)
TEST np.zeros((pad_dim,int(features)) (58, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (8, 4)
TEST np.zeros((pad_dim,int(features)) (56, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (2, 4)
TEST np.zeros((pad_dim,int(features)) (62, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 46, 18, 2]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 5
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (46, 4)
TEST np.zeros((pad_dim,int(features)) (18, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (18, 4)
TEST np.zeros((pad_dim,int(features)) (46, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (2, 4)
TEST np.zeros((pad_dim,int(features)) (62, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 36, 8]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 4
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (36, 4)
TEST np.zeros((pad_dim,int(features)) (28, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (8, 4)
TEST np.zeros((pad_dim,int(features)) (56, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 40, 8]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 4
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (40, 4)
TEST np.zeros((pad_dim,int(features)) (24, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (8, 4)
TEST np.zeros((pad_dim,int(features)) (56, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 44, 6, 2]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 5
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (44, 4)
TEST np.zeros((pad_dim,int(features)) (20, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (6, 4)
TEST np.zeros((pad_dim,int(features)) (58, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (2, 4)
TEST np.zeros((pad_dim,int(features)) (62, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 58, 22]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 4
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (58, 4)
TEST np.zeros((pad_dim,int(features)) (6, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (22, 4)
TEST np.zeros((pad_dim,int(features)) (42, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 48, 10]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 4
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (48, 4)
TEST np.zeros((pad_dim,int(features)) (16, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (10, 4)
TEST np.zeros((pad_dim,int(features)) (54, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 50, 12]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 4
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (50, 4)
TEST np.zeros((pad_dim,int(features)) (14, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (12, 4)
TEST np.zeros((pad_dim,int(features)) (52, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 44, 24]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 4
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (44, 4)
TEST np.zeros((pad_dim,int(features)) (20, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (24, 4)
TEST np.zeros((pad_dim,int(features)) (40, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 32, 8, 2]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 5
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (8, 4)
TEST np.zeros((pad_dim,int(features)) (56, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (2, 4)
TEST np.zeros((pad_dim,int(features)) (62, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 40, 12]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 4
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (40, 4)
TEST np.zeros((pad_dim,int(features)) (24, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (12, 4)
TEST np.zeros((pad_dim,int(features)) (52, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 42, 12, 6]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 5
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (42, 4)
TEST np.zeros((pad_dim,int(features)) (22, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (12, 4)
TEST np.zeros((pad_dim,int(features)) (52, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (6, 4)
TEST np.zeros((pad_dim,int(features)) (58, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 34, 4, 4]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 5
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (34, 4)
TEST np.zeros((pad_dim,int(features)) (30, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (4, 4)
TEST np.zeros((pad_dim,int(features)) (60, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (4, 4)
TEST np.zeros((pad_dim,int(features)) (60, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 36, 2]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 4
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (36, 4)
TEST np.zeros((pad_dim,int(features)) (28, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (2, 4)
TEST np.zeros((pad_dim,int(features)) (62, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 42, 18, 4]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 5
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (42, 4)
TEST np.zeros((pad_dim,int(features)) (22, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (18, 4)
TEST np.zeros((pad_dim,int(features)) (46, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (4, 4)
TEST np.zeros((pad_dim,int(features)) (60, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 40, 10, 2]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 5
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (40, 4)
TEST np.zeros((pad_dim,int(features)) (24, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (10, 4)
TEST np.zeros((pad_dim,int(features)) (54, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (2, 4)
TEST np.zeros((pad_dim,int(features)) (62, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 42, 6]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 4
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (42, 4)
TEST np.zeros((pad_dim,int(features)) (22, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (6, 4)
TEST np.zeros((pad_dim,int(features)) (58, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 46, 12]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 4
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (46, 4)
TEST np.zeros((pad_dim,int(features)) (18, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (12, 4)
TEST np.zeros((pad_dim,int(features)) (52, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 32, 8, 2]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 5
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (8, 4)
TEST np.zeros((pad_dim,int(features)) (56, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (2, 4)
TEST np.zeros((pad_dim,int(features)) (62, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 40, 14, 4]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 5
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (40, 4)
TEST np.zeros((pad_dim,int(features)) (24, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (14, 4)
TEST np.zeros((pad_dim,int(features)) (50, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (4, 4)
TEST np.zeros((pad_dim,int(features)) (60, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 48, 10, 4]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 5
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (48, 4)
TEST np.zeros((pad_dim,int(features)) (16, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (10, 4)
TEST np.zeros((pad_dim,int(features)) (54, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (4, 4)
TEST np.zeros((pad_dim,int(features)) (60, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 44, 8, 4]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 5
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (44, 4)
TEST np.zeros((pad_dim,int(features)) (20, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (8, 4)
TEST np.zeros((pad_dim,int(features)) (56, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (4, 4)
TEST np.zeros((pad_dim,int(features)) (60, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 44, 10]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 4
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (44, 4)
TEST np.zeros((pad_dim,int(features)) (20, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (10, 4)
TEST np.zeros((pad_dim,int(features)) (54, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 40, 12, 4]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 5
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (40, 4)
TEST np.zeros((pad_dim,int(features)) (24, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (12, 4)
TEST np.zeros((pad_dim,int(features)) (52, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (4, 4)
TEST np.zeros((pad_dim,int(features)) (60, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 50, 12, 2]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 5
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (50, 4)
TEST np.zeros((pad_dim,int(features)) (14, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (12, 4)
TEST np.zeros((pad_dim,int(features)) (52, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (2, 4)
TEST np.zeros((pad_dim,int(features)) (62, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 46, 12, 4]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 5
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (46, 4)
TEST np.zeros((pad_dim,int(features)) (18, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (12, 4)
TEST np.zeros((pad_dim,int(features)) (52, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (4, 4)
TEST np.zeros((pad_dim,int(features)) (60, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 48, 20, 8, 2]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 6
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (48, 4)
TEST np.zeros((pad_dim,int(features)) (16, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (20, 4)
TEST np.zeros((pad_dim,int(features)) (44, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (8, 4)
TEST np.zeros((pad_dim,int(features)) (56, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (2, 4)
TEST np.zeros((pad_dim,int(features)) (62, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 44, 10, 2, 2]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 6
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (44, 4)
TEST np.zeros((pad_dim,int(features)) (20, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (10, 4)
TEST np.zeros((pad_dim,int(features)) (54, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (2, 4)
TEST np.zeros((pad_dim,int(features)) (62, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (2, 4)
TEST np.zeros((pad_dim,int(features)) (62, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 44, 10]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 4
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (44, 4)
TEST np.zeros((pad_dim,int(features)) (20, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (10, 4)
TEST np.zeros((pad_dim,int(features)) (54, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 46, 12]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 4
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (46, 4)
TEST np.zeros((pad_dim,int(features)) (18, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (12, 4)
TEST np.zeros((pad_dim,int(features)) (52, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 46, 12, 2]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 5
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (46, 4)
TEST np.zeros((pad_dim,int(features)) (18, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (12, 4)
TEST np.zeros((pad_dim,int(features)) (52, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (2, 4)
TEST np.zeros((pad_dim,int(features)) (62, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 34, 4]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 4
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (34, 4)
TEST np.zeros((pad_dim,int(features)) (30, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (4, 4)
TEST np.zeros((pad_dim,int(features)) (60, 4)
  inv_fpr = interp(base_tpr, tpr, 1. / fpr)[125]3█████████████████████████| 37/37 [00:19<00:00,  1.90it/s, loss=0.658]
--------------------------------------------------------------------------------
subjets per level= [32, 64, 48, 14, 2]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 5
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (48, 4)
TEST np.zeros((pad_dim,int(features)) (16, 4)
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
subjets per level= [32, 64, 44, 6, 2]
--------------------------------------------------------------------------------
max_n_level and len(levels[i])= 64 64
--------------------------------------------------------------------------------
Number of levels= 5
TEST contents[i].shape= (14, 4)
--------------------------------------------------------------------------------
TEST np.zeros((pad_dim,int(features)) (50, 4)
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
max_n_level and len(levels[i])= 64 64
TEST np.zeros((pad_dim,int(features)) (32, 4)
TEST contents[i].shape= (2, 4)
TEST np.zeros((pad_dim,int(features)) (62, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (44, 4)
TEST np.zeros((pad_dim,int(features)) (20, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
--------------------------------------------------------------------------------
max_n_level and len(levels[i])= 64 64
subjets per level= [32, 64, 42, 12]
--------------------------------------------------------------------------------
TEST contents[i].shape= (6, 4)
--------------------------------------------------------------------------------
Number of levels= 4
--------------------------------------------------------------------------------
TEST np.zeros((pad_dim,int(features)) (58, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (2, 4)
TEST np.zeros((pad_dim,int(features)) (62, 4)
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (42, 4)
TEST np.zeros((pad_dim,int(features)) (22, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (12, 4)
TEST np.zeros((pad_dim,int(features)) (52, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 46, 16, 4, 4]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 6
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
--------------------------------------------------------------------------------
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (46, 4)
subjets per level= [32, 64, 44, 6, 2]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
TEST np.zeros((pad_dim,int(features)) (18, 4)
Number of levels= 5
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
max_n_level= 64
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
subjets per level= [32, 64, 44, 10]
TEST contents[i].shape= (16, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
TEST np.zeros((pad_dim,int(features)) (48, 4)
max_n_level and len(levels[i])= 64 64
Number of levels= 4
--------------------------------------------------------------------------------
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
////////////////////////////////////////////////////////////////////////////////////////////////////
TEST contents[i].shape= (4, 4)
max_n_level and len(levels[i])= 64 64
TEST np.zeros((pad_dim,int(features)) (60, 4)
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
////////////////////////////////////////////////////////////////////////////////////////////////////
TEST contents[i].shape= (32, 4)
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (4, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
TEST np.zeros((pad_dim,int(features)) (60, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (44, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
TEST np.zeros((pad_dim,int(features)) (20, 4)
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (44, 4)
TEST np.zeros((pad_dim,int(features)) (20, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (6, 4)
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (10, 4)
TEST np.zeros((pad_dim,int(features)) (58, 4)
TEST np.zeros((pad_dim,int(features)) (54, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (2, 4)
TEST np.zeros((pad_dim,int(features)) (62, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 36, 10, 2, 2]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 6
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (36, 4)
TEST np.zeros((pad_dim,int(features)) (28, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (10, 4)
TEST np.zeros((pad_dim,int(features)) (54, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (2, 4)
TEST np.zeros((pad_dim,int(features)) (62, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (2, 4)
TEST np.zeros((pad_dim,int(features)) (62, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 48, 8]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 4
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (48, 4)
TEST np.zeros((pad_dim,int(features)) (16, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (8, 4)
TEST np.zeros((pad_dim,int(features)) (56, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 60, 18]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 4
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (60, 4)
TEST np.zeros((pad_dim,int(features)) (4, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (18, 4)
TEST np.zeros((pad_dim,int(features)) (46, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 50, 12, 2]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 5
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (50, 4)
TEST np.zeros((pad_dim,int(features)) (14, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (12, 4)
TEST np.zeros((pad_dim,int(features)) (52, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (2, 4)
TEST np.zeros((pad_dim,int(features)) (62, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 44, 8]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 4
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (44, 4)
TEST np.zeros((pad_dim,int(features)) (20, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (8, 4)
TEST np.zeros((pad_dim,int(features)) (56, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 50, 10]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 4
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (50, 4)
TEST np.zeros((pad_dim,int(features)) (14, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (10, 4)
TEST np.zeros((pad_dim,int(features)) (54, 4)
train.py:220: RuntimeWarning: divide by zero encountered in true_divide███| 37/37 [00:19<00:00,  1.90it/s, loss=0.658]
train.py:220: RuntimeWarning: divide by zero encountered in true_divide███| 37/37 [00:19<00:00,  1.90it/s, loss=0.658]
--------------------------------------------------------------------------------
subjets per level= [32, 64, 36, 14, 4]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 5
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
///////////////////////////////////////////////////////////////////////////////////////////////--------------------------------------------------------------------------------
subjets per level= [32, 64, 46, 14]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 4
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (46, 4)
--------------------------------------------------------------------------------
/////
TEST np.zeros((pad_dim,int(features)) (18, 4)
subjets per level= [32, 64, 42, 14]
--------------------------------------------------------------------------------
max_n_level and len(levels[i])= 64 64
--------------------------------------------------------------------------------
Number of levels= 4
TEST contents[i].shape= (36, 4)
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
TEST np.zeros((pad_dim,int(features)) (28, 4)
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (14, 4)
TEST np.zeros((pad_dim,int(features)) (50, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (14, 4)
max_n_level= 64
--------------------------------------------------------------------------------
TEST np.zeros((pad_dim,int(features)) (50, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
////////////////////////////////////////////////////////////////////////////////////////////////////
TEST contents[i].shape= (4, 4)
TEST np.zeros((pad_dim,int(features)) (60, 4)
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (42, 4)
TEST np.zeros((pad_dim,int(features)) (22, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (14, 4)
TEST np.zeros((pad_dim,int(features)) (50, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 38, 6]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 4
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
subjets per level= [32, 64, 52, 8, 2]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 5
subjets per level= [32, 64, 48, 8, 2]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 5
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
TEST contents[i].shape= (38, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (26, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
////////////////////////////////////////////////////////////////////////////////////////////////////
TEST contents[i].shape= (64, 4)
max_n_level and len(levels[i])= 64 64
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (52, 4)
TEST contents[i].shape= (6, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
TEST np.zeros((pad_dim,int(features)) (12, 4)
TEST np.zeros((pad_dim,int(features)) (58, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
////////////////////////////////////////////////////////////////////////////////////////////////////
TEST contents[i].shape= (48, 4)
max_n_level and len(levels[i])= 64 64
TEST np.zeros((pad_dim,int(features)) (16, 4)
TEST contents[i].shape= (8, 4)
TEST np.zeros((pad_dim,int(features)) (56, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
////////////////////////////////////////////////////////////////////////////////////////////////////
TEST contents[i].shape= (8, 4)
max_n_level and len(levels[i])= 64 64
TEST np.zeros((pad_dim,int(features)) (56, 4)
TEST contents[i].shape= (2, 4)
TEST np.zeros((pad_dim,int(features)) (62, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (2, 4)
TEST np.zeros((pad_dim,int(features)) (62, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 46, 18, 2]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 5
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (46, 4)
TEST np.zeros((pad_dim,int(features)) (18, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (18, 4)
TEST np.zeros((pad_dim,int(features)) (46, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (2, 4)
TEST np.zeros((pad_dim,int(features)) (62, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 36, 8]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 4
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (36, 4)
TEST np.zeros((pad_dim,int(features)) (28, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (8, 4)
TEST np.zeros((pad_dim,int(features)) (56, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 40, 8]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 4
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (40, 4)
TEST np.zeros((pad_dim,int(features)) (24, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (8, 4)
TEST np.zeros((pad_dim,int(features)) (56, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 44, 6, 2]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 5
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (44, 4)
TEST np.zeros((pad_dim,int(features)) (20, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (6, 4)
TEST np.zeros((pad_dim,int(features)) (58, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (2, 4)
TEST np.zeros((pad_dim,int(features)) (62, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 58, 22]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 4
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (58, 4)
TEST np.zeros((pad_dim,int(features)) (6, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (22, 4)
- Train metrics: accuracy: 0.6283 ; loss: 0.6515ountered in true_divide███| 37/37 [00:19<00:00,  1.90it/s, loss=0.658]
- Train metrics: accuracy: 0.6283 ; loss: 0.6515ountered in true_divide███| 37/37 [00:19<00:00,  1.90it/s, loss=0.658]
--------------------------------------------------------------------------------
subjets per level= [32, 64, 48, 10]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 4
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (48, 4)
TEST np.zeros((pad_dim,int(features)) (16, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (10, 4)
TEST np.zeros((pad_dim,int(features)) (54, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 50, 12]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 4
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (50, 4)
TEST np.zeros((pad_dim,int(features)) (14, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (12, 4)
TEST np.zeros((pad_dim,int(features)) (52, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 44, 24]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 4
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (44, 4)
TEST np.zeros((pad_dim,int(features)) (20, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (24, 4)
TEST np.zeros((pad_dim,int(features)) (40, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 32, 8, 2]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 5
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (8, 4)
TEST np.zeros((pad_dim,int(features)) (56, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (2, 4)
TEST np.zeros((pad_dim,int(features)) (62, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 40, 12]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 4
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (40, 4)
TEST np.zeros((pad_dim,int(features)) (24, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (12, 4)
TEST np.zeros((pad_dim,int(features)) (52, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 42, 12, 6]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 5
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (42, 4)
TEST np.zeros((pad_dim,int(features)) (22, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (12, 4)
TEST np.zeros((pad_dim,int(features)) (52, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (6, 4)
TEST np.zeros((pad_dim,int(features)) (58, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 34, 4, 4]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 5
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (34, 4)
TEST np.zeros((pad_dim,int(features)) (30, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (4, 4)
TEST np.zeros((pad_dim,int(features)) (60, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (4, 4)
TEST np.zeros((pad_dim,int(features)) (60, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 36, 2]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 4
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (36, 4)
TEST np.zeros((pad_dim,int(features)) (28, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (2, 4)
TEST np.zeros((pad_dim,int(features)) (62, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 42, 18, 4]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 5
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (42, 4)
TEST np.zeros((pad_dim,int(features)) (22, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (18, 4)
TEST np.zeros((pad_dim,int(features)) (46, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (4, 4)
TEST np.zeros((pad_dim,int(features)) (60, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 40, 10, 2]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 5
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (40, 4)
TEST np.zeros((pad_dim,int(features)) (24, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (10, 4)
TEST np.zeros((pad_dim,int(features)) (54, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (2, 4)
TEST np.zeros((pad_dim,int(features)) (62, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 42, 6]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 4
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (42, 4)
TEST np.zeros((pad_dim,int(features)) (22, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (6, 4)
TEST np.zeros((pad_dim,int(features)) (58, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 46, 12]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 4
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (46, 4)
TEST np.zeros((pad_dim,int(features)) (18, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (12, 4)
TEST np.zeros((pad_dim,int(features)) (52, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 32, 8, 2]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 5
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (8, 4)
TEST np.zeros((pad_dim,int(features)) (56, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (2, 4)
TEST np.zeros((pad_dim,int(features)) (62, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 40, 14, 4]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 5
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (40, 4)
TEST np.zeros((pad_dim,int(features)) (24, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (14, 4)
TEST np.zeros((pad_dim,int(features)) (50, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (4, 4)
TEST np.zeros((pad_dim,int(features)) (60, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 48, 10, 4]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 5
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (48, 4)
TEST np.zeros((pad_dim,int(features)) (16, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (10, 4)
TEST np.zeros((pad_dim,int(features)) (54, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (4, 4)
TEST np.zeros((pad_dim,int(features)) (60, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 44, 8, 4]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 5
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (44, 4)
TEST np.zeros((pad_dim,int(features)) (20, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (8, 4)
TEST np.zeros((pad_dim,int(features)) (56, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (4, 4)
TEST np.zeros((pad_dim,int(features)) (60, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 44, 10]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 4
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (44, 4)
TEST np.zeros((pad_dim,int(features)) (20, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (10, 4)
TEST np.zeros((pad_dim,int(features)) (54, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 40, 12, 4]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 5
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (40, 4)
TEST np.zeros((pad_dim,int(features)) (24, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (12, 4)
TEST np.zeros((pad_dim,int(features)) (52, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (4, 4)
TEST np.zeros((pad_dim,int(features)) (60, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 50, 12, 2]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 5
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (50, 4)
TEST np.zeros((pad_dim,int(features)) (14, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (12, 4)
TEST np.zeros((pad_dim,int(features)) (52, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (2, 4)
TEST np.zeros((pad_dim,int(features)) (62, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 46, 12, 4]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 5
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (46, 4)
TEST np.zeros((pad_dim,int(features)) (18, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (12, 4)
TEST np.zeros((pad_dim,int(features)) (52, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (4, 4)
TEST np.zeros((pad_dim,int(features)) (60, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 48, 20, 8, 2]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 6
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (48, 4)
TEST np.zeros((pad_dim,int(features)) (16, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (20, 4)
TEST np.zeros((pad_dim,int(features)) (44, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (8, 4)
TEST np.zeros((pad_dim,int(features)) (56, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (2, 4)
TEST np.zeros((pad_dim,int(features)) (62, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 44, 10, 2, 2]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 6
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (44, 4)
TEST np.zeros((pad_dim,int(features)) (20, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (10, 4)
TEST np.zeros((pad_dim,int(features)) (54, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (2, 4)
TEST np.zeros((pad_dim,int(features)) (62, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (2, 4)
TEST np.zeros((pad_dim,int(features)) (62, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 44, 10]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 4
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (44, 4)
TEST np.zeros((pad_dim,int(features)) (20, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (10, 4)
TEST np.zeros((pad_dim,int(features)) (54, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 46, 12]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 4
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (46, 4)
TEST np.zeros((pad_dim,int(features)) (18, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (12, 4)
TEST np.zeros((pad_dim,int(features)) (52, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 46, 12, 2]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 5
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (46, 4)
TEST np.zeros((pad_dim,int(features)) (18, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (12, 4)
TEST np.zeros((pad_dim,int(features)) (52, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (2, 4)
TEST np.zeros((pad_dim,int(features)) (62, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 34, 4]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 4
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (34, 4)
TEST np.zeros((pad_dim,int(features)) (30, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (4, 4)
TEST np.zeros((pad_dim,int(features)) (60, 4)
- Train metrics: accuracy: 0.6283 ; loss: 0.6515ountered in true_divide███| 37/37 [00:19<00:00,  1.90it/s, loss=0.658]
--------------------------------------------------------------------------------
subjets per level= [32, 64, 48, 14, 2]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 5
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (48, 4)
TEST np.zeros((pad_dim,int(features)) (16, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (14, 4)
TEST np.zeros((pad_dim,int(features)) (50, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (2, 4)
TEST np.zeros((pad_dim,int(features)) (62, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 44, 6, 2]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 5
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
--------------------------------------------------------------------------------
TEST contents[i].shape= (64, 4)
subjets per level= [32, 64, 42, 12]
TEST np.zeros((pad_dim,int(features)) (0, 4)
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 4
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (44, 4)
TEST np.zeros((pad_dim,int(features)) (20, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (6, 4)
TEST np.zeros((pad_dim,int(features)) (58, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (2, 4)
TEST np.zeros((pad_dim,int(features)) (62, 4)
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (42, 4)
TEST np.zeros((pad_dim,int(features)) (22, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (12, 4)
TEST np.zeros((pad_dim,int(features)) (52, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 46, 16, 4, 4]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 6
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (46, 4)
TEST np.zeros((pad_dim,int(features)) (18, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (16, 4)
TEST np.zeros((pad_dim,int(features)) (48, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (4, 4)
TEST np.zeros((pad_dim,int(features)) (60, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (4, 4)
TEST np.zeros((pad_dim,int(features)) (60, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 44, 10]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 4
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
subjets per level= [32, 64, 44, 6, 2]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 5
////////////////////////////////////////////////////////////////////////////////////////////////////
--------------------------------------------------------------------------------
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (44, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
TEST np.zeros((pad_dim,int(features)) (20, 4)
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (10, 4)
TEST np.zeros((pad_dim,int(features)) (54, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (44, 4)
TEST np.zeros((pad_dim,int(features)) (20, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (6, 4)
TEST np.zeros((pad_dim,int(features)) (58, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (2, 4)
TEST np.zeros((pad_dim,int(features)) (62, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 36, 10, 2, 2]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 6
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (36, 4)
TEST np.zeros((pad_dim,int(features)) (28, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (10, 4)
TEST np.zeros((pad_dim,int(features)) (54, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (2, 4)
TEST np.zeros((pad_dim,int(features)) (62, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (2, 4)
TEST np.zeros((pad_dim,int(features)) (62, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 50, 12, 2]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 5
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (50, 4)
TEST np.zeros((pad_dim,int(features)) (14, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (12, 4)
TEST np.zeros((pad_dim,int(features)) (52, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (2, 4)
TEST np.zeros((pad_dim,int(features)) (62, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 44, 8]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 4
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (44, 4)
TEST np.zeros((pad_dim,int(features)) (20, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (8, 4)
TEST np.zeros((pad_dim,int(features)) (56, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 48, 8]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 4
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (48, 4)
TEST np.zeros((pad_dim,int(features)) (16, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (8, 4)
TEST np.zeros((pad_dim,int(features)) (56, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 60, 18]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 4
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (60, 4)
TEST np.zeros((pad_dim,int(features)) (4, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (18, 4)
TEST np.zeros((pad_dim,int(features)) (46, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 50, 10]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 4
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (50, 4)
TEST np.zeros((pad_dim,int(features)) (14, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (10, 4)
  0%|                                                                                          | 0/37 [00:00<?, ?it/s]
  0%|                                                                                          | 0/37 [00:00<?, ?it/s]
Checkpoint Directory exists!
--------------------------------------------------------------------------------
subjets per level= [32, 64, 36, 14, 4]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 5
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
--------------------------------------------------------------------------------
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
subjets per level= [32, 64, 46, 14]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 4
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (36, 4)
TEST np.zeros((pad_dim,int(features)) (28, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (14, 4)
TEST np.zeros((pad_dim,int(features)) (50, 4)
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
--------------------------------------------------------------------------------
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (4, 4)
subjets per level= [32, 64, 42, 14]
--------------------------------------------------------------------------------
TEST np.zeros((pad_dim,int(features)) (60, 4)
--------------------------------------------------------------------------------
Number of levels= 4
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
max_n_level= 64
--------------------------------------------------------------------------------
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
TEST np.zeros((pad_dim,int(features)) (32, 4)
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (46, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
TEST np.zeros((pad_dim,int(features)) (18, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (42, 4)
TEST contents[i].shape= (14, 4)
TEST np.zeros((pad_dim,int(features)) (50, 4)
TEST np.zeros((pad_dim,int(features)) (22, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (14, 4)
TEST np.zeros((pad_dim,int(features)) (50, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 52, 8, 2]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 5
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
--------------------------------------------------------------------------------
subjets per level= [32, 64, 48, 8, 2]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 5
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
subjets per level= [32, 64, 38, 6]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 4
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
max_n_level and len(levels[i])= 64 64
max_n_level= 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
TEST np.zeros((pad_dim,int(features)) (0, 4)
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (52, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
TEST np.zeros((pad_dim,int(features)) (12, 4)
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (8, 4)
TEST contents[i].shape= (48, 4)
TEST np.zeros((pad_dim,int(features)) (56, 4)
TEST np.zeros((pad_dim,int(features)) (16, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (8, 4)
max_n_level and len(levels[i])= 64 64
TEST np.zeros((pad_dim,int(features)) (56, 4)
TEST contents[i].shape= (2, 4)
TEST np.zeros((pad_dim,int(features)) (62, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (2, 4)
TEST np.zeros((pad_dim,int(features)) (62, 4)
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (38, 4)
TEST np.zeros((pad_dim,int(features)) (26, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (6, 4)
TEST np.zeros((pad_dim,int(features)) (58, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 46, 18, 2]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 5
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (46, 4)
TEST np.zeros((pad_dim,int(features)) (18, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (18, 4)
TEST np.zeros((pad_dim,int(features)) (46, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (2, 4)
TEST np.zeros((pad_dim,int(features)) (62, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 36, 8]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 4
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (36, 4)
TEST np.zeros((pad_dim,int(features)) (28, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (8, 4)
TEST np.zeros((pad_dim,int(features)) (56, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 40, 8]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 4
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (40, 4)
TEST np.zeros((pad_dim,int(features)) (24, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (8, 4)
TEST np.zeros((pad_dim,int(features)) (56, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 44, 6, 2]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 5
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (44, 4)
TEST np.zeros((pad_dim,int(features)) (20, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (6, 4)
TEST np.zeros((pad_dim,int(features)) (58, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (2, 4)
TEST np.zeros((pad_dim,int(features)) (62, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 58, 22]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 4
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (58, 4)
TEST np.zeros((pad_dim,int(features)) (6, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (22, 4)
TEST np.zeros((pad_dim,int(features)) (42, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 48, 10]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 4
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (48, 4)
TEST np.zeros((pad_dim,int(features)) (16, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (10, 4)
TEST np.zeros((pad_dim,int(features)) (54, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 50, 12]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 4
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
100%|█████████████████████████████████████████████████████████████████████| 37/37 [00:19<00:00,  1.87it/s, loss=0.653]
100%|█████████████████████████████████████████████████████████████████████| 37/37 [00:19<00:00,  1.87it/s, loss=0.653]
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (50, 4)
TEST np.zeros((pad_dim,int(features)) (14, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (12, 4)
TEST np.zeros((pad_dim,int(features)) (52, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 44, 24]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 4
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (44, 4)
TEST np.zeros((pad_dim,int(features)) (20, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (24, 4)
TEST np.zeros((pad_dim,int(features)) (40, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 32, 8, 2]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 5
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (8, 4)
TEST np.zeros((pad_dim,int(features)) (56, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (2, 4)
TEST np.zeros((pad_dim,int(features)) (62, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 40, 12]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 4
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (40, 4)
TEST np.zeros((pad_dim,int(features)) (24, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (12, 4)
TEST np.zeros((pad_dim,int(features)) (52, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 42, 12, 6]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 5
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (42, 4)
TEST np.zeros((pad_dim,int(features)) (22, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (12, 4)
TEST np.zeros((pad_dim,int(features)) (52, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (6, 4)
TEST np.zeros((pad_dim,int(features)) (58, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 34, 4, 4]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 5
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (34, 4)
TEST np.zeros((pad_dim,int(features)) (30, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (4, 4)
TEST np.zeros((pad_dim,int(features)) (60, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (4, 4)
TEST np.zeros((pad_dim,int(features)) (60, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 36, 2]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 4
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (36, 4)
TEST np.zeros((pad_dim,int(features)) (28, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (2, 4)
TEST np.zeros((pad_dim,int(features)) (62, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 42, 18, 4]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 5
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (42, 4)
TEST np.zeros((pad_dim,int(features)) (22, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (18, 4)
TEST np.zeros((pad_dim,int(features)) (46, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (4, 4)
TEST np.zeros((pad_dim,int(features)) (60, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 40, 10, 2]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 5
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (40, 4)
TEST np.zeros((pad_dim,int(features)) (24, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (10, 4)
TEST np.zeros((pad_dim,int(features)) (54, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (2, 4)
TEST np.zeros((pad_dim,int(features)) (62, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 42, 6]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 4
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (42, 4)
TEST np.zeros((pad_dim,int(features)) (22, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (6, 4)
TEST np.zeros((pad_dim,int(features)) (58, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 46, 12]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 4
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (46, 4)
TEST np.zeros((pad_dim,int(features)) (18, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (12, 4)
TEST np.zeros((pad_dim,int(features)) (52, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 32, 8, 2]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 5
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (8, 4)
TEST np.zeros((pad_dim,int(features)) (56, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (2, 4)
TEST np.zeros((pad_dim,int(features)) (62, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 40, 14, 4]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 5
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (40, 4)
TEST np.zeros((pad_dim,int(features)) (24, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (14, 4)
TEST np.zeros((pad_dim,int(features)) (50, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (4, 4)
TEST np.zeros((pad_dim,int(features)) (60, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 48, 10, 4]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 5
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (48, 4)
TEST np.zeros((pad_dim,int(features)) (16, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (10, 4)
TEST np.zeros((pad_dim,int(features)) (54, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (4, 4)
TEST np.zeros((pad_dim,int(features)) (60, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 44, 8, 4]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 5
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (44, 4)
TEST np.zeros((pad_dim,int(features)) (20, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (8, 4)
TEST np.zeros((pad_dim,int(features)) (56, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (4, 4)
TEST np.zeros((pad_dim,int(features)) (60, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 44, 10]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 4
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (44, 4)
TEST np.zeros((pad_dim,int(features)) (20, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (10, 4)
TEST np.zeros((pad_dim,int(features)) (54, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 40, 12, 4]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 5
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (40, 4)
TEST np.zeros((pad_dim,int(features)) (24, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (12, 4)
TEST np.zeros((pad_dim,int(features)) (52, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (4, 4)
TEST np.zeros((pad_dim,int(features)) (60, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 50, 12, 2]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 5
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (50, 4)
TEST np.zeros((pad_dim,int(features)) (14, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (12, 4)
TEST np.zeros((pad_dim,int(features)) (52, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (2, 4)
TEST np.zeros((pad_dim,int(features)) (62, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 46, 12, 4]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 5
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (46, 4)
TEST np.zeros((pad_dim,int(features)) (18, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (12, 4)
TEST np.zeros((pad_dim,int(features)) (52, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (4, 4)
TEST np.zeros((pad_dim,int(features)) (60, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 48, 20, 8, 2]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 6
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (48, 4)
TEST np.zeros((pad_dim,int(features)) (16, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (20, 4)
TEST np.zeros((pad_dim,int(features)) (44, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (8, 4)
TEST np.zeros((pad_dim,int(features)) (56, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (2, 4)
TEST np.zeros((pad_dim,int(features)) (62, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 44, 10, 2, 2]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 6
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (44, 4)
TEST np.zeros((pad_dim,int(features)) (20, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (10, 4)
TEST np.zeros((pad_dim,int(features)) (54, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (2, 4)
TEST np.zeros((pad_dim,int(features)) (62, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (2, 4)
TEST np.zeros((pad_dim,int(features)) (62, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 44, 10]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 4
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (44, 4)
TEST np.zeros((pad_dim,int(features)) (20, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (10, 4)
TEST np.zeros((pad_dim,int(features)) (54, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 46, 12]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 4
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (46, 4)
TEST np.zeros((pad_dim,int(features)) (18, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (12, 4)
TEST np.zeros((pad_dim,int(features)) (52, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 46, 12, 2]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 5
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (46, 4)
TEST np.zeros((pad_dim,int(features)) (18, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (12, 4)
TEST np.zeros((pad_dim,int(features)) (52, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (2, 4)
TEST np.zeros((pad_dim,int(features)) (62, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 34, 4]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 4
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (34, 4)
TEST np.zeros((pad_dim,int(features)) (30, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (4, 4)
TEST np.zeros((pad_dim,int(features)) (60, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 48, 14, 2]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 5
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
--------------------------------------------------------------------------------
max_n_level and len(levels[i])= 64 64
subjets per level= [32, 64, 44, 6, 2]
TEST contents[i].shape= (32, 4)
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 5
Epoch 23/30███████████████████████████████████████████████████████████████| 37/37 [00:19<00:00,  1.87it/s, loss=0.653]
Epoch 23/30███████████████████████████████████████████████████████████████| 37/37 [00:19<00:00,  1.87it/s, loss=0.653]
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (48, 4)
TEST np.zeros((pad_dim,int(features)) (16, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (14, 4)
max_n_level= 64
TEST np.zeros((pad_dim,int(features)) (50, 4)
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
////////////////////////////////////////////////////////////////////////////////////////////////////
TEST contents[i].shape= (2, 4)
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (62, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (44, 4)
TEST np.zeros((pad_dim,int(features)) (20, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (6, 4)
TEST np.zeros((pad_dim,int(features)) (58, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
--------------------------------------------------------------------------------
TEST contents[i].shape= (2, 4)
subjets per level= [32, 64, 42, 12]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
TEST np.zeros((pad_dim,int(features)) (62, 4)
Number of levels= 4
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (42, 4)
TEST np.zeros((pad_dim,int(features)) (22, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (12, 4)
TEST np.zeros((pad_dim,int(features)) (52, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 44, 10]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 4
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (44, 4)
TEST np.zeros((pad_dim,int(features)) (20, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (10, 4)
TEST np.zeros((pad_dim,int(features)) (54, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 46, 16, 4, 4]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 6
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
subjets per level= [32, 64, 44, 6, 2]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
TEST np.zeros((pad_dim,int(features)) (32, 4)
Number of levels= 5
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (46, 4)
TEST np.zeros((pad_dim,int(features)) (18, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (16, 4)
max_n_level= 64
--------------------------------------------------------------------------------
TEST np.zeros((pad_dim,int(features)) (48, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (4, 4)
TEST np.zeros((pad_dim,int(features)) (60, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (44, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
TEST np.zeros((pad_dim,int(features)) (20, 4)
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (4, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
TEST np.zeros((pad_dim,int(features)) (60, 4)
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (6, 4)
TEST np.zeros((pad_dim,int(features)) (58, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (2, 4)
TEST np.zeros((pad_dim,int(features)) (62, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 36, 10, 2, 2]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 6
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (36, 4)
TEST np.zeros((pad_dim,int(features)) (28, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (10, 4)
TEST np.zeros((pad_dim,int(features)) (54, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (2, 4)
TEST np.zeros((pad_dim,int(features)) (62, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (2, 4)
TEST np.zeros((pad_dim,int(features)) (62, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 48, 8]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 4
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (48, 4)
TEST np.zeros((pad_dim,int(features)) (16, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (8, 4)
TEST np.zeros((pad_dim,int(features)) (56, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 60, 18]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 4
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (60, 4)
TEST np.zeros((pad_dim,int(features)) (4, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (18, 4)
TEST np.zeros((pad_dim,int(features)) (46, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 50, 12, 2]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 5
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (50, 4)
TEST np.zeros((pad_dim,int(features)) (14, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (12, 4)
TEST np.zeros((pad_dim,int(features)) (52, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (2, 4)
TEST np.zeros((pad_dim,int(features)) (62, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 44, 8]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 4
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (44, 4)
TEST np.zeros((pad_dim,int(features)) (20, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (8, 4)
TEST np.zeros((pad_dim,int(features)) (56, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 50, 10]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 4
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (50, 4)
TEST np.zeros((pad_dim,int(features)) (14, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (10, 4)
TEST np.zeros((pad_dim,int(features)) (54, 4)
Checkpoint Directory exists!
Epoch 23/30███████████████████████████████████████████████████████████████| 37/37 [00:19<00:00,  1.87it/s, loss=0.653]
--------------------------------------------------------------------------------
subjets per level= [32, 64, 36, 14, 4]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 5
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (36, 4)
TEST np.zeros((pad_dim,int(features)) (28, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (14, 4)
TEST np.zeros((pad_dim,int(features)) (50, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (4, 4)
TEST np.zeros((pad_dim,int(features)) (60, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 46, 14]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 4
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------------------------------------------------------------
subjets per level= [32, 64, 42, 14]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 4
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
--------------------------
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (42, 4)
TEST np.zeros((pad_dim,int(features)) (22, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (14, 4)
TEST np.zeros((pad_dim,int(features)) (50, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (46, 4)
TEST np.zeros((pad_dim,int(features)) (18, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (14, 4)
TEST np.zeros((pad_dim,int(features)) (50, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 38, 6]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 4
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
--------------------------------------------------------------------------------
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (38, 4)
TEST np.zeros((pad_dim,int(features)) (26, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (6, 4)
TEST np.zeros((pad_dim,int(features)) (58, 4)
subjets per level= [32, 64, 52, 8, 2]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 5
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (52, 4)
TEST np.zeros((pad_dim,int(features)) (12, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 48, 8, 2]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 5
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (8, 4)
TEST np.zeros((pad_dim,int(features)) (56, 4)
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (2, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
TEST np.zeros((pad_dim,int(features)) (62, 4)
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (48, 4)
TEST np.zeros((pad_dim,int(features)) (16, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (8, 4)
TEST np.zeros((pad_dim,int(features)) (56, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (2, 4)
TEST np.zeros((pad_dim,int(features)) (62, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 46, 18, 2]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 5
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (46, 4)
TEST np.zeros((pad_dim,int(features)) (18, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (18, 4)
TEST np.zeros((pad_dim,int(features)) (46, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (2, 4)
TEST np.zeros((pad_dim,int(features)) (62, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 36, 8]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 4
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (36, 4)
TEST np.zeros((pad_dim,int(features)) (28, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (8, 4)
TEST np.zeros((pad_dim,int(features)) (56, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 40, 8]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 4
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (40, 4)
TEST np.zeros((pad_dim,int(features)) (24, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (8, 4)
TEST np.zeros((pad_dim,int(features)) (56, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 44, 6, 2]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 5
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (44, 4)
TEST np.zeros((pad_dim,int(features)) (20, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (6, 4)
TEST np.zeros((pad_dim,int(features)) (58, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (2, 4)
TEST np.zeros((pad_dim,int(features)) (62, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 58, 22]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 4
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (58, 4)
TEST np.zeros((pad_dim,int(features)) (6, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (22, 4)
TEST np.zeros((pad_dim,int(features)) (42, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 48, 10]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 4
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (48, 4)
TEST np.zeros((pad_dim,int(features)) (16, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (10, 4)
TEST np.zeros((pad_dim,int(features)) (54, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 50, 12]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 4
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (50, 4)
TEST np.zeros((pad_dim,int(features)) (14, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (12, 4)
TEST np.zeros((pad_dim,int(features)) (52, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 44, 24]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 4
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (44, 4)
TEST np.zeros((pad_dim,int(features)) (20, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (24, 4)
TEST np.zeros((pad_dim,int(features)) (40, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 32, 8, 2]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 5
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (8, 4)
TEST np.zeros((pad_dim,int(features)) (56, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (2, 4)
TEST np.zeros((pad_dim,int(features)) (62, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 40, 12]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 4
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (40, 4)
TEST np.zeros((pad_dim,int(features)) (24, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (12, 4)
TEST np.zeros((pad_dim,int(features)) (52, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 42, 12, 6]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 5
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (42, 4)
TEST np.zeros((pad_dim,int(features)) (22, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (12, 4)
TEST np.zeros((pad_dim,int(features)) (52, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (6, 4)
TEST np.zeros((pad_dim,int(features)) (58, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 34, 4, 4]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 5
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (34, 4)
TEST np.zeros((pad_dim,int(features)) (30, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (4, 4)
TEST np.zeros((pad_dim,int(features)) (60, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (4, 4)
TEST np.zeros((pad_dim,int(features)) (60, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 36, 2]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 4
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (36, 4)
TEST np.zeros((pad_dim,int(features)) (28, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (2, 4)
TEST np.zeros((pad_dim,int(features)) (62, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 42, 18, 4]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 5
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (42, 4)
TEST np.zeros((pad_dim,int(features)) (22, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (18, 4)
TEST np.zeros((pad_dim,int(features)) (46, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (4, 4)
TEST np.zeros((pad_dim,int(features)) (60, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 40, 10, 2]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 5
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (40, 4)
TEST np.zeros((pad_dim,int(features)) (24, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (10, 4)
TEST np.zeros((pad_dim,int(features)) (54, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (2, 4)
TEST np.zeros((pad_dim,int(features)) (62, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 42, 6]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 4
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (42, 4)
TEST np.zeros((pad_dim,int(features)) (22, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (6, 4)
TEST np.zeros((pad_dim,int(features)) (58, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 46, 12]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 4
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (46, 4)
TEST np.zeros((pad_dim,int(features)) (18, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (12, 4)
TEST np.zeros((pad_dim,int(features)) (52, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 32, 8, 2]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 5
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (8, 4)
TEST np.zeros((pad_dim,int(features)) (56, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (2, 4)
TEST np.zeros((pad_dim,int(features)) (62, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 40, 14, 4]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 5
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (40, 4)
TEST np.zeros((pad_dim,int(features)) (24, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (14, 4)
TEST np.zeros((pad_dim,int(features)) (50, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (4, 4)
TEST np.zeros((pad_dim,int(features)) (60, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 48, 10, 4]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 5
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (48, 4)
TEST np.zeros((pad_dim,int(features)) (16, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (10, 4)
TEST np.zeros((pad_dim,int(features)) (54, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (4, 4)
TEST np.zeros((pad_dim,int(features)) (60, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 44, 8, 4]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 5
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (44, 4)
TEST np.zeros((pad_dim,int(features)) (20, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (8, 4)
TEST np.zeros((pad_dim,int(features)) (56, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (4, 4)
TEST np.zeros((pad_dim,int(features)) (60, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 44, 10]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 4
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (44, 4)
TEST np.zeros((pad_dim,int(features)) (20, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (10, 4)
TEST np.zeros((pad_dim,int(features)) (54, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 40, 12, 4]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 5
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (40, 4)
TEST np.zeros((pad_dim,int(features)) (24, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (12, 4)
TEST np.zeros((pad_dim,int(features)) (52, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (4, 4)
TEST np.zeros((pad_dim,int(features)) (60, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 50, 12, 2]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 5
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (50, 4)
TEST np.zeros((pad_dim,int(features)) (14, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (12, 4)
TEST np.zeros((pad_dim,int(features)) (52, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (2, 4)
TEST np.zeros((pad_dim,int(features)) (62, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 46, 12, 4]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 5
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (46, 4)
TEST np.zeros((pad_dim,int(features)) (18, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (12, 4)
TEST np.zeros((pad_dim,int(features)) (52, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (4, 4)
TEST np.zeros((pad_dim,int(features)) (60, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 48, 20, 8, 2]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 6
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (48, 4)
TEST np.zeros((pad_dim,int(features)) (16, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (20, 4)
TEST np.zeros((pad_dim,int(features)) (44, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (8, 4)
TEST np.zeros((pad_dim,int(features)) (56, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (2, 4)
TEST np.zeros((pad_dim,int(features)) (62, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 44, 10, 2, 2]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 6
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (44, 4)
TEST np.zeros((pad_dim,int(features)) (20, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (10, 4)
TEST np.zeros((pad_dim,int(features)) (54, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (2, 4)
TEST np.zeros((pad_dim,int(features)) (62, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (2, 4)
TEST np.zeros((pad_dim,int(features)) (62, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 44, 10]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 4
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (44, 4)
TEST np.zeros((pad_dim,int(features)) (20, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (10, 4)
TEST np.zeros((pad_dim,int(features)) (54, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 46, 12]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 4
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
- Eval metrics : accuracy: 0.5365 ; loss: 0.7081██████████████████████████| 37/37 [00:19<00:00,  1.87it/s, loss=0.653]
- Eval metrics : accuracy: 0.5365 ; loss: 0.7081██████████████████████████| 37/37 [00:19<00:00,  1.87it/s, loss=0.653]
--------------------------------------------------------------------------------
subjets per level= [32, 64, 48, 14, 2]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 5
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (48, 4)
TEST np.zeros((pad_dim,int(features)) (16, 4)
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
subjets per level= [32, 64, 44, 6, 2]
max_n_level and len(levels[i])= 64 64
--------------------------------------------------------------------------------
TEST contents[i].shape= (14, 4)
--------------------------------------------------------------------------------
Number of levels= 5
--------------------------------------------------------------------------------
TEST np.zeros((pad_dim,int(features)) (50, 4)
max_n_level= 64
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
subjets per level= [32, 64, 42, 12]
--------------------------------------------------------------------------------
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (2, 4)
--------------------------------------------------------------------------------
TEST contents[i].shape= (32, 4)
Number of levels= 4
TEST np.zeros((pad_dim,int(features)) (62, 4)
--------------------------------------------------------------------------------
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level= 64
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (44, 4)
max_n_level and len(levels[i])= 64 64
TEST np.zeros((pad_dim,int(features)) (20, 4)
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (6, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
TEST np.zeros((pad_dim,int(features)) (58, 4)
max_n_level a////////////////////////////////////////////////////////////////////////////////////////////////////
nd len(levels[i])= 64 64
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (2, 4)
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (62, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (42, 4)
TEST np.zeros((pad_dim,int(features)) (22, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (12, 4)
TEST np.zeros((pad_dim,int(features)) (52, 4)
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
subjets per level= [32, 64, 44, 6, 2]
subjets per level= [32, 64, 44, 10]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 5
Number of levels= 4
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
max_n_level= 64
max_n_level= 64
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (44, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (20, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (10, 4)
TEST np.zeros((pad_dim,int(features)) (54, 4)
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (44, 4)
TEST np.zeros((pad_dim,int(features)) (20, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (6, 4)
TEST np.zeros((pad_dim,int(features)) (58, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (2, 4)
TEST np.zeros((pad_dim,int(features)) (62, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 46, 16, 4, 4]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 6
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (46, 4)
TEST np.zeros((pad_dim,int(features)) (18, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (16, 4)
TEST np.zeros((pad_dim,int(features)) (48, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (4, 4)
TEST np.zeros((pad_dim,int(features)) (60, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (4, 4)
TEST np.zeros((pad_dim,int(features)) (60, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 36, 10, 2, 2]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 6
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (36, 4)
TEST np.zeros((pad_dim,int(features)) (28, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (10, 4)
TEST np.zeros((pad_dim,int(features)) (54, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (2, 4)
TEST np.zeros((pad_dim,int(features)) (62, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (2, 4)
TEST np.zeros((pad_dim,int(features)) (62, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 48, 8]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 4
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (48, 4)
TEST np.zeros((pad_dim,int(features)) (16, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (8, 4)
TEST np.zeros((pad_dim,int(features)) (56, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 60, 18]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 4
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (60, 4)
TEST np.zeros((pad_dim,int(features)) (4, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (18, 4)
TEST np.zeros((pad_dim,int(features)) (46, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 50, 12, 2]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 5
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (50, 4)
TEST np.zeros((pad_dim,int(features)) (14, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (12, 4)
TEST np.zeros((pad_dim,int(features)) (52, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (2, 4)
TEST np.zeros((pad_dim,int(features)) (62, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 44, 8]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 4
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (44, 4)
TEST np.zeros((pad_dim,int(features)) (20, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (8, 4)
TEST np.zeros((pad_dim,int(features)) (56, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 50, 10]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 4
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (50, 4)
TEST np.zeros((pad_dim,int(features)) (14, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (10, 4)
TEST np.zeros((pad_dim,int(features)) (54, 4)
- Eval metrics : accuracy: 0.5365 ; loss: 0.7081██████████████████████████| 37/37 [00:19<00:00,  1.87it/s, loss=0.653]
Checkpoint Directory exists!
- Eval metrics : accuracy: 0.5365 ; loss: 0.7081██████████████████████████| 37/37 [00:19<00:00,  1.87it/s, loss=0.653]
--------------------------------------------------------------------------------
subjets per level= [32, 64, 36, 14, 4]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 5
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (36, 4)
--------------------------------------------------------------------------------
TEST np.zeros((pad_dim,int(features)) (28, 4)
subjets per level= [32, 64, 46, 14]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 4
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (14, 4)
TEST np.zeros((pad_dim,int(features)) (50, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (4, 4)
TEST np.zeros((pad_dim,int(features)) (60, 4)
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (46, 4)
TEST np.zeros((pad_dim,int(features)) (18, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (14, 4)
TEST np.zeros((pad_dim,int(features)) (50, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 42, 14]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 4
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (42, 4)
TEST np.zeros((pad_dim,int(features)) (22, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (14, 4)
TEST np.zeros((pad_dim,int(features)) (50, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 38, 6]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 4
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (38, 4)
TEST np.zeros((pad_dim,int(features)) (26, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (6, 4)
TEST np.zeros((pad_dim,int(features)) (58, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 52, 8, 2]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 5
--------------------------------------------------------------------------------
subjets per level= [32, 64, 48, 8, 2]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 5
--------------------------------------------------------------------------------
max_n_level= 64
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
--------------------------------------------------------------------------------
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
TEST np.zeros((pad_dim,int(features)) (0, 4)
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
////////////////////////////////////////////////////////////////////////////////////////////////////
TEST contents[i].shape= (48, 4)
max_n_level and len(levels[i])= 64 64
TEST np.zeros((pad_dim,int(features)) (16, 4)
TEST contents[i].shape= (52, 4)
TEST np.zeros((pad_dim,int(features)) (12, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (8, 4)
TEST contents[i].shape= (8, 4)
TEST np.zeros((pad_dim,int(features)) (56, 4)
TEST np.zeros((pad_dim,int(features)) (56, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
////////////////////////////////////////////////////////////////////////////////////////////////////
TEST contents[i].shape= (2, 4)
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (2, 4)
TEST np.zeros((pad_dim,int(features)) (62, 4)
TEST np.zeros((pad_dim,int(features)) (62, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 46, 18, 2]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 5
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (46, 4)
TEST np.zeros((pad_dim,int(features)) (18, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (18, 4)
TEST np.zeros((pad_dim,int(features)) (46, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (2, 4)
TEST np.zeros((pad_dim,int(features)) (62, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 36, 8]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 4
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (36, 4)
TEST np.zeros((pad_dim,int(features)) (28, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (8, 4)
TEST np.zeros((pad_dim,int(features)) (56, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 40, 8]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 4
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (40, 4)
TEST np.zeros((pad_dim,int(features)) (24, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (8, 4)
TEST np.zeros((pad_dim,int(features)) (56, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 44, 6, 2]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 5
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (44, 4)
TEST np.zeros((pad_dim,int(features)) (20, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (6, 4)
TEST np.zeros((pad_dim,int(features)) (58, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (2, 4)
TEST np.zeros((pad_dim,int(features)) (62, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 58, 22]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 4
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (58, 4)
TEST np.zeros((pad_dim,int(features)) (6, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (22, 4)
TEST np.zeros((pad_dim,int(features)) (42, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 48, 10]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 4
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (48, 4)
TEST np.zeros((pad_dim,int(features)) (16, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (10, 4)
TEST np.zeros((pad_dim,int(features)) (54, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 50, 12]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 4
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (50, 4)
TEST np.zeros((pad_dim,int(features)) (14, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (12, 4)
TEST np.zeros((pad_dim,int(features)) (52, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 44, 24]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 4
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (44, 4)
TEST np.zeros((pad_dim,int(features)) (20, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (24, 4)
TEST np.zeros((pad_dim,int(features)) (40, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 32, 8, 2]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 5
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (8, 4)
TEST np.zeros((pad_dim,int(features)) (56, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (2, 4)
TEST np.zeros((pad_dim,int(features)) (62, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 40, 12]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 4
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (40, 4)
TEST np.zeros((pad_dim,int(features)) (24, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (12, 4)
TEST np.zeros((pad_dim,int(features)) (52, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 42, 12, 6]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 5
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (42, 4)
TEST np.zeros((pad_dim,int(features)) (22, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (12, 4)
TEST np.zeros((pad_dim,int(features)) (52, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (6, 4)
TEST np.zeros((pad_dim,int(features)) (58, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 34, 4, 4]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 5
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (34, 4)
TEST np.zeros((pad_dim,int(features)) (30, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (4, 4)
TEST np.zeros((pad_dim,int(features)) (60, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (4, 4)
TEST np.zeros((pad_dim,int(features)) (60, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 36, 2]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 4
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (36, 4)
TEST np.zeros((pad_dim,int(features)) (28, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (2, 4)
TEST np.zeros((pad_dim,int(features)) (62, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 42, 18, 4]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 5
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (42, 4)
TEST np.zeros((pad_dim,int(features)) (22, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (18, 4)
TEST np.zeros((pad_dim,int(features)) (46, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (4, 4)
TEST np.zeros((pad_dim,int(features)) (60, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 40, 10, 2]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 5
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (40, 4)
TEST np.zeros((pad_dim,int(features)) (24, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (10, 4)
TEST np.zeros((pad_dim,int(features)) (54, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (2, 4)
TEST np.zeros((pad_dim,int(features)) (62, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 42, 6]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 4
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (42, 4)
TEST np.zeros((pad_dim,int(features)) (22, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (6, 4)
TEST np.zeros((pad_dim,int(features)) (58, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 46, 12]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 4
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (46, 4)
TEST np.zeros((pad_dim,int(features)) (18, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (12, 4)
TEST np.zeros((pad_dim,int(features)) (52, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 32, 8, 2]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 5
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (8, 4)
TEST np.zeros((pad_dim,int(features)) (56, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (2, 4)
TEST np.zeros((pad_dim,int(features)) (62, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 40, 14, 4]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 5
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (40, 4)
TEST np.zeros((pad_dim,int(features)) (24, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (14, 4)
TEST np.zeros((pad_dim,int(features)) (50, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (4, 4)
TEST np.zeros((pad_dim,int(features)) (60, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 48, 10, 4]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 5
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (48, 4)
TEST np.zeros((pad_dim,int(features)) (16, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (10, 4)
TEST np.zeros((pad_dim,int(features)) (54, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (4, 4)
TEST np.zeros((pad_dim,int(features)) (60, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 44, 8, 4]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 5
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (44, 4)
TEST np.zeros((pad_dim,int(features)) (20, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (8, 4)
TEST np.zeros((pad_dim,int(features)) (56, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (4, 4)
TEST np.zeros((pad_dim,int(features)) (60, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 44, 10]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 4
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (44, 4)
TEST np.zeros((pad_dim,int(features)) (20, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (10, 4)
TEST np.zeros((pad_dim,int(features)) (54, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 40, 12, 4]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 5
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (40, 4)
TEST np.zeros((pad_dim,int(features)) (24, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (12, 4)
TEST np.zeros((pad_dim,int(features)) (52, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (4, 4)
TEST np.zeros((pad_dim,int(features)) (60, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 50, 12, 2]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 5
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (50, 4)
TEST np.zeros((pad_dim,int(features)) (14, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (12, 4)
TEST np.zeros((pad_dim,int(features)) (52, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (2, 4)
TEST np.zeros((pad_dim,int(features)) (62, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 46, 12, 4]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 5
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (46, 4)
TEST np.zeros((pad_dim,int(features)) (18, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (12, 4)
TEST np.zeros((pad_dim,int(features)) (52, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (4, 4)
TEST np.zeros((pad_dim,int(features)) (60, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 48, 20, 8, 2]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 6
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (48, 4)
TEST np.zeros((pad_dim,int(features)) (16, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (20, 4)
TEST np.zeros((pad_dim,int(features)) (44, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (8, 4)
TEST np.zeros((pad_dim,int(features)) (56, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (2, 4)
TEST np.zeros((pad_dim,int(features)) (62, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 44, 10, 2, 2]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 6
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (44, 4)
TEST np.zeros((pad_dim,int(features)) (20, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (10, 4)
TEST np.zeros((pad_dim,int(features)) (54, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (2, 4)
TEST np.zeros((pad_dim,int(features)) (62, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (2, 4)
TEST np.zeros((pad_dim,int(features)) (62, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 44, 10]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 4
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (44, 4)
TEST np.zeros((pad_dim,int(features)) (20, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (10, 4)
TEST np.zeros((pad_dim,int(features)) (54, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 46, 12]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 4
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (46, 4)
TEST np.zeros((pad_dim,int(features)) (18, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (12, 4)
TEST np.zeros((pad_dim,int(features)) (52, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 46, 12, 2]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 5
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (46, 4)
TEST np.zeros((pad_dim,int(features)) (18, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (12, 4)
TEST np.zeros((pad_dim,int(features)) (52, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (2, 4)
TEST np.zeros((pad_dim,int(features)) (62, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 34, 4]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 4
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (34, 4)
TEST np.zeros((pad_dim,int(features)) (30, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (4, 4)
TEST np.zeros((pad_dim,int(features)) (60, 4)
train.py:220: RuntimeWarning: divide by zero encountered in true_divide███| 37/37 [00:19<00:00,  1.87it/s, loss=0.653]
train.py:220: RuntimeWarning: divide by zero encountered in true_divide███| 37/37 [00:19<00:00,  1.87it/s, loss=0.653]
--------------------------------------------------------------------------------
subjets per level= [32, 64, 48, 14, 2]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 5
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
subjets per level= [32, 64, 44, 6, 2]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 5
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (48, 4)
TEST np.zeros((pad_dim,int(features)) (16, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (14, 4)
TEST np.zeros((pad_dim,int(features)) (50, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level= 64
max_n_level and len(levels[i])= 64 64
--------------------------------------------------------------------------------
TEST contents[i].shape= (2, 4)
TEST np.zeros((pad_dim,int(features)) (62, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
//////////////////////////////////////////--------------------------------------------------------------------------------
subjets per level= [32, 64, 42, 12]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 4
--------------------------------------------------------------------------------
//////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (44, 4)
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (20, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
////////////////////////////////////////////////////////////////////////////////////////////////////
TEST contents[i].shape= (6, 4)
max_n_level and len(levels[i])= 64 64
TEST np.zeros((pad_dim,int(features)) (58, 4)
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (42, 4)
max_n_level and len(levels[i])= 64 64
TEST np.zeros((pad_dim,int(features)) (22, 4)
TEST contents[i].shape= (2, 4)
TEST np.zeros((pad_dim,int(features)) (62, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (12, 4)
TEST np.zeros((pad_dim,int(features)) (52, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 46, 16, 4, 4]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 6
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (46, 4)
TEST np.zeros((pad_dim,int(features)) (18, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (16, 4)
TEST np.zeros((pad_dim,int(features)) (48, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
--------------------------------------------------------------------------------
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (4, 4)
subjets per level= [32, 64, 44, 6, 2]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
TEST np.zeros((pad_dim,int(features)) (60, 4)
Number of levels= 5
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
subjets per level= [32, 64, 44, 10]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 4
--------------------------------------------------------------------------------
max_n_level= 64
////////////////////////////////////////////////////////////////////////////////////////////////////
--------------------------------------------------------------------------------
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (4, 4)
max_n_level= 64
////////////////////////////////////////////////////////////////////////////////////////////////////
-TEST np.zeros((pad_dim,int(features)) (60, 4)
-------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
TEST np.zeros((pad_dim,int(features)) (0, 4)
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
//////////////max_n_level and len(levels[i])= 64 64
//////////////////////////////////////////////////////////////////////////////////////
TEST contents[i].shape= (44, 4)
max_n_level and len(levels[i])= 64 64
TEST np.zeros((pad_dim,int(features)) (20, 4)
TEST contents[i].shape= (44, 4)
TEST np.zeros((pad_dim,int(features)) (20, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (10, 4)
TEST np.zeros((pad_dim,int(features)) (54, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (6, 4)
TEST np.zeros((pad_dim,int(features)) (58, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (2, 4)
TEST np.zeros((pad_dim,int(features)) (62, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 36, 10, 2, 2]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 6
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (36, 4)
TEST np.zeros((pad_dim,int(features)) (28, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (10, 4)
TEST np.zeros((pad_dim,int(features)) (54, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (2, 4)
TEST np.zeros((pad_dim,int(features)) (62, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (2, 4)
TEST np.zeros((pad_dim,int(features)) (62, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 48, 8]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 4
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (48, 4)
TEST np.zeros((pad_dim,int(features)) (16, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (8, 4)
TEST np.zeros((pad_dim,int(features)) (56, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 60, 18]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 4
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (60, 4)
TEST np.zeros((pad_dim,int(features)) (4, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (18, 4)
TEST np.zeros((pad_dim,int(features)) (46, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 50, 12, 2]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 5
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (50, 4)
TEST np.zeros((pad_dim,int(features)) (14, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (12, 4)
TEST np.zeros((pad_dim,int(features)) (52, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (2, 4)
TEST np.zeros((pad_dim,int(features)) (62, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 44, 8]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 4
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (44, 4)
TEST np.zeros((pad_dim,int(features)) (20, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (8, 4)
TEST np.zeros((pad_dim,int(features)) (56, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 50, 10]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 4
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (50, 4)
TEST np.zeros((pad_dim,int(features)) (14, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (10, 4)
TEST np.zeros((pad_dim,int(features)) (54, 4)
Checkpoint Directory exists!
--------------------------------------------------------------------------------
subjets per level= [32, 64, 36, 14, 4]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 5
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (36, 4)
--------------------------------------------------------------------------------
TEST np.zeros((pad_dim,int(features)) (28, 4)
subjets per level= [32, 64, 46, 14]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
Number of levels= 4
--------------------------------------------------------------------------------
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (14, 4)
TEST np.zeros((pad_dim,int(features)) (50, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (4, 4)
TEST np.zeros((pad_dim,int(features)) (60, 4)
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (46, 4)
TEST np.zeros((pad_dim,int(features)) (18, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (14, 4)
TEST np.zeros((pad_dim,int(features)) (50, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 42, 14]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 4
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (42, 4)
TEST np.zeros((pad_dim,int(features)) (22, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (14, 4)
TEST np.zeros((pad_dim,int(features)) (50, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 52, 8, 2]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 5
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (52, 4)
TEST np.zeros((pad_dim,int(features)) (12, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (8, 4)
TEST np.zeros((pad_dim,int(features)) (56, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (2, 4)
TEST np.zeros((pad_dim,int(features)) (62, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 48, 8, 2]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 5
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
--------------------------------------------------------------------------------
subjets per level= [32, 64, 38, 6]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 4
max_n_level and len(levels[i])= 64 64
--------------------------------------------------------------------------------
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level= 64
--------------------------------------------------------------------------------
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
////////////////////////////////////////////////////////////////////////////////////////////////////
TEST contents[i].shape= (48, 4)
max_n_level and len(levels[i])= 64 64
TEST np.zeros((pad_dim,int(features)) (16, 4)
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (38, 4)
TEST np.zeros((pad_dim,int(features)) (26, 4)
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (8, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
TEST np.zeros((pad_dim,int(features)) (56, 4)
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (6, 4)
TEST np.zeros((pad_dim,int(features)) (58, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (2, 4)
TEST np.zeros((pad_dim,int(features)) (62, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 46, 18, 2]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 5
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (46, 4)
TEST np.zeros((pad_dim,int(features)) (18, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (18, 4)
TEST np.zeros((pad_dim,int(features)) (46, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (2, 4)
TEST np.zeros((pad_dim,int(features)) (62, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 36, 8]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 4
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (36, 4)
TEST np.zeros((pad_dim,int(features)) (28, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (8, 4)
TEST np.zeros((pad_dim,int(features)) (56, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 40, 8]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 4
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (40, 4)
TEST np.zeros((pad_dim,int(features)) (24, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (8, 4)
TEST np.zeros((pad_dim,int(features)) (56, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 44, 6, 2]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 5
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (44, 4)
TEST np.zeros((pad_dim,int(features)) (20, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (6, 4)
TEST np.zeros((pad_dim,int(features)) (58, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (2, 4)
TEST np.zeros((pad_dim,int(features)) (62, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 58, 22]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 4
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (58, 4)
TEST np.zeros((pad_dim,int(features)) (6, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (22, 4)
TEST np.zeros((pad_dim,int(features)) (42, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 48, 10]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 4
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (48, 4)
TEST np.zeros((pad_dim,int(features)) (16, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (10, 4)
TEST np.zeros((pad_dim,int(features)) (54, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 50, 12]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 4
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (50, 4)
TEST np.zeros((pad_dim,int(features)) (14, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (12, 4)
TEST np.zeros((pad_dim,int(features)) (52, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 44, 24]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 4
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (44, 4)
TEST np.zeros((pad_dim,int(features)) (20, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (24, 4)
TEST np.zeros((pad_dim,int(features)) (40, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 32, 8, 2]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 5
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (8, 4)
TEST np.zeros((pad_dim,int(features)) (56, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (2, 4)
TEST np.zeros((pad_dim,int(features)) (62, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 40, 12]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 4
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (40, 4)
TEST np.zeros((pad_dim,int(features)) (24, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (12, 4)
TEST np.zeros((pad_dim,int(features)) (52, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 42, 12, 6]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 5
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (42, 4)
TEST np.zeros((pad_dim,int(features)) (22, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (12, 4)
TEST np.zeros((pad_dim,int(features)) (52, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (6, 4)
TEST np.zeros((pad_dim,int(features)) (58, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 34, 4, 4]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 5
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (34, 4)
TEST np.zeros((pad_dim,int(features)) (30, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (4, 4)
TEST np.zeros((pad_dim,int(features)) (60, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (4, 4)
TEST np.zeros((pad_dim,int(features)) (60, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 36, 2]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 4
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (36, 4)
TEST np.zeros((pad_dim,int(features)) (28, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (2, 4)
TEST np.zeros((pad_dim,int(features)) (62, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 42, 18, 4]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 5
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (42, 4)
TEST np.zeros((pad_dim,int(features)) (22, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (18, 4)
TEST np.zeros((pad_dim,int(features)) (46, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (4, 4)
TEST np.zeros((pad_dim,int(features)) (60, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 40, 10, 2]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 5
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (40, 4)
TEST np.zeros((pad_dim,int(features)) (24, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (10, 4)
TEST np.zeros((pad_dim,int(features)) (54, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (2, 4)
TEST np.zeros((pad_dim,int(features)) (62, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 42, 6]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 4
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (42, 4)
TEST np.zeros((pad_dim,int(features)) (22, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (6, 4)
TEST np.zeros((pad_dim,int(features)) (58, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 46, 12]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 4
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (46, 4)
TEST np.zeros((pad_dim,int(features)) (18, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (12, 4)
TEST np.zeros((pad_dim,int(features)) (52, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 32, 8, 2]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 5
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (8, 4)
TEST np.zeros((pad_dim,int(features)) (56, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (2, 4)
TEST np.zeros((pad_dim,int(features)) (62, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 40, 14, 4]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 5
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (40, 4)
TEST np.zeros((pad_dim,int(features)) (24, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (14, 4)
TEST np.zeros((pad_dim,int(features)) (50, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (4, 4)
TEST np.zeros((pad_dim,int(features)) (60, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 48, 10, 4]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 5
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (48, 4)
TEST np.zeros((pad_dim,int(features)) (16, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (10, 4)
TEST np.zeros((pad_dim,int(features)) (54, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (4, 4)
TEST np.zeros((pad_dim,int(features)) (60, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 44, 8, 4]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 5
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (44, 4)
TEST np.zeros((pad_dim,int(features)) (20, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (8, 4)
TEST np.zeros((pad_dim,int(features)) (56, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (4, 4)
TEST np.zeros((pad_dim,int(features)) (60, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 44, 10]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 4
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (44, 4)
TEST np.zeros((pad_dim,int(features)) (20, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (10, 4)
TEST np.zeros((pad_dim,int(features)) (54, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 40, 12, 4]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 5
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (40, 4)
TEST np.zeros((pad_dim,int(features)) (24, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (12, 4)
TEST np.zeros((pad_dim,int(features)) (52, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (4, 4)
TEST np.zeros((pad_dim,int(features)) (60, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 50, 12, 2]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 5
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (50, 4)
TEST np.zeros((pad_dim,int(features)) (14, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (12, 4)
TEST np.zeros((pad_dim,int(features)) (52, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (2, 4)
TEST np.zeros((pad_dim,int(features)) (62, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 46, 12, 4]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 5
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (46, 4)
TEST np.zeros((pad_dim,int(features)) (18, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (12, 4)
TEST np.zeros((pad_dim,int(features)) (52, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (4, 4)
TEST np.zeros((pad_dim,int(features)) (60, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 48, 20, 8, 2]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 6
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (48, 4)
TEST np.zeros((pad_dim,int(features)) (16, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (20, 4)
TEST np.zeros((pad_dim,int(features)) (44, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (8, 4)
TEST np.zeros((pad_dim,int(features)) (56, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (2, 4)
TEST np.zeros((pad_dim,int(features)) (62, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 44, 10, 2, 2]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 6
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (44, 4)
TEST np.zeros((pad_dim,int(features)) (20, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (10, 4)
TEST np.zeros((pad_dim,int(features)) (54, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (2, 4)
TEST np.zeros((pad_dim,int(features)) (62, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (2, 4)
TEST np.zeros((pad_dim,int(features)) (62, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 44, 10]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 4
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (44, 4)
TEST np.zeros((pad_dim,int(features)) (20, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (10, 4)
TEST np.zeros((pad_dim,int(features)) (54, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 46, 12]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 4
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (46, 4)
TEST np.zeros((pad_dim,int(features)) (18, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (12, 4)
TEST np.zeros((pad_dim,int(features)) (52, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 46, 12, 2]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 5
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (46, 4)
TEST np.zeros((pad_dim,int(features)) (18, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (12, 4)
TEST np.zeros((pad_dim,int(features)) (52, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (2, 4)
TEST np.zeros((pad_dim,int(features)) (62, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 34, 4]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 4
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (34, 4)
TEST np.zeros((pad_dim,int(features)) (30, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (4, 4)
- Train metrics: accuracy: 0.6316 ; loss: 0.6478ountered in true_divide███| 37/37 [00:19<00:00,  1.87it/s, loss=0.653]
- Train metrics: accuracy: 0.6316 ; loss: 0.6478ountered in true_divide███| 37/37 [00:19<00:00,  1.87it/s, loss=0.653]
--------------------------------------------------------------------------------
subjets per level= [32, 64, 48, 14, 2]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 5
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
--------------------------------------------------------------------------------
TEST contents[i].shape= (48, 4)
TEST np.zeros((pad_dim,int(features)) (16, 4)
subjets per level= [32, 64, 44, 6, 2]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 5
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (14, 4)
TEST np.zeros((pad_dim,int(features)) (50, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (2, 4)
max_n_level= 64
TEST np.zeros((pad_dim,int(features)) (62, 4)
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (44, 4)
TEST np.zeros((pad_dim,int(features)) (20, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 42, 12]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
Number of levels= 4
--------------------------------------------------------------------------------
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (6, 4)
TEST np.zeros((pad_dim,int(features)) (58, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (2, 4)
TEST np.zeros((pad_dim,int(features)) (62, 4)
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (42, 4)
TEST np.zeros((pad_dim,int(features)) (22, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (12, 4)
TEST np.zeros((pad_dim,int(features)) (52, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 46, 16, 4, 4]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 6
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
subjets per level= [32, 64, 44, 6, 2]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 5
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level= 64
--------------------------------------------------------------------------------
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
TEST np.zeros((pad_dim,int(features)) (32, 4)
max_n_level and len(levels[i])= 64 64
////////////////////////////////////////////////////////////////////////////////////////////////////
TEST contents[i].shape= (32, 4)
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (46, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
TEST np.zeros((pad_dim,int(features)) (18, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (44, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
TEST np.zeros((pad_dim,int(features)) (20, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (16, 4)
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (6, 4)
TEST np.zeros((pad_dim,int(features)) (58, 4)
TEST np.zeros((pad_dim,int(features)) (48, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (2, 4)
TEST np.zeros((pad_dim,int(features)) (62, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (4, 4)
TEST np.zeros((pad_dim,int(features)) (60, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (4, 4)
TEST np.zeros((pad_dim,int(features)) (60, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 44, 10]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 4
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (44, 4)
TEST np.zeros((pad_dim,int(features)) (20, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (10, 4)
TEST np.zeros((pad_dim,int(features)) (54, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 36, 10, 2, 2]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 6
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (36, 4)
TEST np.zeros((pad_dim,int(features)) (28, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (10, 4)
TEST np.zeros((pad_dim,int(features)) (54, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (2, 4)
TEST np.zeros((pad_dim,int(features)) (62, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (2, 4)
TEST np.zeros((pad_dim,int(features)) (62, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 48, 8]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 4
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (48, 4)
TEST np.zeros((pad_dim,int(features)) (16, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (8, 4)
TEST np.zeros((pad_dim,int(features)) (56, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 60, 18]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 4
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (60, 4)
TEST np.zeros((pad_dim,int(features)) (4, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (18, 4)
TEST np.zeros((pad_dim,int(features)) (46, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 50, 12, 2]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 5
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (50, 4)
TEST np.zeros((pad_dim,int(features)) (14, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (12, 4)
TEST np.zeros((pad_dim,int(features)) (52, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (2, 4)
TEST np.zeros((pad_dim,int(features)) (62, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 44, 8]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 4
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (44, 4)
TEST np.zeros((pad_dim,int(features)) (20, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (8, 4)
TEST np.zeros((pad_dim,int(features)) (56, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 50, 10]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 4
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (50, 4)
TEST np.zeros((pad_dim,int(features)) (14, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (10, 4)
TEST np.zeros((pad_dim,int(features)) (54, 4)
- Train metrics: accuracy: 0.6316 ; loss: 0.6478ountered in true_divide███| 37/37 [00:19<00:00,  1.87it/s, loss=0.653]
Epoch 26/30rics: accuracy: 0.6316 ; loss: 0.6478ountered in true_divide███| 37/37 [00:19<00:00,  1.87it/s, loss=0.653]
Epoch 26/30rics: accuracy: 0.6316 ; loss: 0.6478ountered in true_divide███| 37/37 [00:19<00:00,  1.87it/s, loss=0.653]
--------------------------------------------------------------------------------
subjets per level= [32, 64, 36, 14, 4]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 5
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
///////////////////////////////////////////////////////////////////////////////////////////////--------------------------------------------------------------------------------
subjets per level= [32, 64, 46, 14]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 4
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
--------------------------------------------------------------------------------
/////
TEST contents[i].shape= (46, 4)
subjets per level= [32, 64, 42, 14]
TEST np.zeros((pad_dim,int(features)) (18, 4)
--------------------------------------------------------------------------------
max_n_level and len(levels[i])= 64 64
--------------------------------------------------------------------------------
Number of levels= 4
TEST contents[i].shape= (36, 4)
--------------------------------------------------------------------------------
TEST np.zeros((pad_dim,int(features)) (28, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (14, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (14, 4)
TEST np.zeros((pad_dim,int(features)) (50, 4)
TEST np.zeros((pad_dim,int(features)) (50, 4)
max_n_level= 64
////////////////////////////////////////////////////////////////////////////////////////////////////
--------------------------------------------------------------------------------
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (4, 4)
TEST np.zeros((pad_dim,int(features)) (60, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (42, 4)
TEST np.zeros((pad_dim,int(features)) (22, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (14, 4)
TEST np.zeros((pad_dim,int(features)) (50, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 38, 6]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 4
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (38, 4)
TEST np.zeros((pad_dim,int(features)) (26, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (6, 4)
TEST np.zeros((pad_dim,int(features)) (58, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 48, 8, 2]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
subjets per level= [32, 64, 52, 8, 2]
--------------------------------------------------------------------------------
Number of levels= 5
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 5
--------------------------------------------------------------------------------
max_n_level= 64
max_n_level= 64
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
////////////////////////////////////////////////////////////////////////////////////////////////////
TEST contents[i].shape= (32, 4)
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (52, 4)
TEST np.zeros((pad_dim,int(features)) (12, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (8, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
TEST np.zeros((pad_dim,int(features)) (56, 4)
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (48, 4)
TEST np.zeros((pad_dim,int(features)) (16, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
////////////////////////////////////////////////////////////////////////////////////////////////////
TEST contents[i].shape= (2, 4)
max_n_level and len(levels[i])= 64 64
TEST np.zeros((pad_dim,int(features)) (62, 4)
TEST contents[i].shape= (8, 4)
TEST np.zeros((pad_dim,int(features)) (56, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (2, 4)
TEST np.zeros((pad_dim,int(features)) (62, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 46, 18, 2]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 5
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (46, 4)
TEST np.zeros((pad_dim,int(features)) (18, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (18, 4)
TEST np.zeros((pad_dim,int(features)) (46, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (2, 4)
TEST np.zeros((pad_dim,int(features)) (62, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 36, 8]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 4
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (36, 4)
TEST np.zeros((pad_dim,int(features)) (28, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (8, 4)
TEST np.zeros((pad_dim,int(features)) (56, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 40, 8]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 4
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (40, 4)
TEST np.zeros((pad_dim,int(features)) (24, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (8, 4)
TEST np.zeros((pad_dim,int(features)) (56, 4)
Epoch 26/30rics: accuracy: 0.6316 ; loss: 0.6478ountered in true_divide███| 37/37 [00:19<00:00,  1.87it/s, loss=0.653]
--------------------------------------------------------------------------------
subjets per level= [32, 64, 44, 6, 2]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 5
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (44, 4)
TEST np.zeros((pad_dim,int(features)) (20, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (6, 4)
TEST np.zeros((pad_dim,int(features)) (58, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (2, 4)
TEST np.zeros((pad_dim,int(features)) (62, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 58, 22]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 4
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (58, 4)
TEST np.zeros((pad_dim,int(features)) (6, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (22, 4)
TEST np.zeros((pad_dim,int(features)) (42, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 48, 10]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 4
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (48, 4)
TEST np.zeros((pad_dim,int(features)) (16, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (10, 4)
TEST np.zeros((pad_dim,int(features)) (54, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 50, 12]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 4
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (50, 4)
TEST np.zeros((pad_dim,int(features)) (14, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (12, 4)
TEST np.zeros((pad_dim,int(features)) (52, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 44, 24]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 4
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (44, 4)
TEST np.zeros((pad_dim,int(features)) (20, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (24, 4)
TEST np.zeros((pad_dim,int(features)) (40, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 32, 8, 2]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 5
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (8, 4)
TEST np.zeros((pad_dim,int(features)) (56, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (2, 4)
TEST np.zeros((pad_dim,int(features)) (62, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 40, 12]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 4
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (40, 4)
TEST np.zeros((pad_dim,int(features)) (24, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (12, 4)
TEST np.zeros((pad_dim,int(features)) (52, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 42, 12, 6]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 5
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (42, 4)
TEST np.zeros((pad_dim,int(features)) (22, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (12, 4)
TEST np.zeros((pad_dim,int(features)) (52, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (6, 4)
TEST np.zeros((pad_dim,int(features)) (58, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 34, 4, 4]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 5
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (34, 4)
TEST np.zeros((pad_dim,int(features)) (30, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (4, 4)
TEST np.zeros((pad_dim,int(features)) (60, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (4, 4)
TEST np.zeros((pad_dim,int(features)) (60, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 36, 2]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 4
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (36, 4)
TEST np.zeros((pad_dim,int(features)) (28, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (2, 4)
TEST np.zeros((pad_dim,int(features)) (62, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 42, 18, 4]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 5
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (42, 4)
TEST np.zeros((pad_dim,int(features)) (22, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (18, 4)
TEST np.zeros((pad_dim,int(features)) (46, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (4, 4)
TEST np.zeros((pad_dim,int(features)) (60, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 40, 10, 2]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 5
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (40, 4)
TEST np.zeros((pad_dim,int(features)) (24, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (10, 4)
TEST np.zeros((pad_dim,int(features)) (54, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (2, 4)
TEST np.zeros((pad_dim,int(features)) (62, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 42, 6]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 4
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (42, 4)
TEST np.zeros((pad_dim,int(features)) (22, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (6, 4)
TEST np.zeros((pad_dim,int(features)) (58, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 46, 12]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 4
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (46, 4)
TEST np.zeros((pad_dim,int(features)) (18, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (12, 4)
TEST np.zeros((pad_dim,int(features)) (52, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 32, 8, 2]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 5
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (8, 4)
TEST np.zeros((pad_dim,int(features)) (56, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (2, 4)
TEST np.zeros((pad_dim,int(features)) (62, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 40, 14, 4]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 5
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (40, 4)
TEST np.zeros((pad_dim,int(features)) (24, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (14, 4)
TEST np.zeros((pad_dim,int(features)) (50, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (4, 4)
TEST np.zeros((pad_dim,int(features)) (60, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 48, 10, 4]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 5
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (48, 4)
TEST np.zeros((pad_dim,int(features)) (16, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (10, 4)
TEST np.zeros((pad_dim,int(features)) (54, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (4, 4)
TEST np.zeros((pad_dim,int(features)) (60, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 44, 8, 4]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 5
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (44, 4)
TEST np.zeros((pad_dim,int(features)) (20, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (8, 4)
TEST np.zeros((pad_dim,int(features)) (56, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (4, 4)
TEST np.zeros((pad_dim,int(features)) (60, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 44, 10]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 4
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (44, 4)
TEST np.zeros((pad_dim,int(features)) (20, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (10, 4)
TEST np.zeros((pad_dim,int(features)) (54, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 40, 12, 4]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 5
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (40, 4)
TEST np.zeros((pad_dim,int(features)) (24, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (12, 4)
TEST np.zeros((pad_dim,int(features)) (52, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (4, 4)
TEST np.zeros((pad_dim,int(features)) (60, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 50, 12, 2]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 5
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (50, 4)
TEST np.zeros((pad_dim,int(features)) (14, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (12, 4)
TEST np.zeros((pad_dim,int(features)) (52, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (2, 4)
TEST np.zeros((pad_dim,int(features)) (62, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 46, 12, 4]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 5
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (46, 4)
TEST np.zeros((pad_dim,int(features)) (18, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (12, 4)
TEST np.zeros((pad_dim,int(features)) (52, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (4, 4)
TEST np.zeros((pad_dim,int(features)) (60, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 48, 20, 8, 2]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 6
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (48, 4)
TEST np.zeros((pad_dim,int(features)) (16, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (20, 4)
TEST np.zeros((pad_dim,int(features)) (44, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (8, 4)
TEST np.zeros((pad_dim,int(features)) (56, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (2, 4)
TEST np.zeros((pad_dim,int(features)) (62, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 44, 10, 2, 2]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 6
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (44, 4)
TEST np.zeros((pad_dim,int(features)) (20, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (10, 4)
TEST np.zeros((pad_dim,int(features)) (54, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (2, 4)
TEST np.zeros((pad_dim,int(features)) (62, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (2, 4)
TEST np.zeros((pad_dim,int(features)) (62, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 44, 10]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 4
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (44, 4)
TEST np.zeros((pad_dim,int(features)) (20, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (10, 4)
TEST np.zeros((pad_dim,int(features)) (54, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 46, 12]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 4
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (46, 4)
TEST np.zeros((pad_dim,int(features)) (18, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (12, 4)
TEST np.zeros((pad_dim,int(features)) (52, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 46, 12, 2]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 5
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (46, 4)
TEST np.zeros((pad_dim,int(features)) (18, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (12, 4)
TEST np.zeros((pad_dim,int(features)) (52, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (2, 4)
TEST np.zeros((pad_dim,int(features)) (62, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 34, 4]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 4
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (34, 4)
TEST np.zeros((pad_dim,int(features)) (30, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (4, 4)
TEST np.zeros((pad_dim,int(features)) (60, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 48, 14, 2]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 5
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
--------------------------------------------------------------------------------
max_n_level and len(levels[i])= 64 64
subjets per level= [32, 64, 44, 6, 2]
TEST contents[i].shape= (64, 4)
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
TEST np.zeros((pad_dim,int(features)) (0, 4)
Number of levels= 5
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (48, 4)
max_n_level= 64
--------------------------------------------------------------------------------
TEST np.zeros((pad_dim,int(features)) (16, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
--------------------------------------------------------------------------------
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (14, 4)
subjets per level= [32, 64, 42, 12]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
TEST np.zeros((pad_dim,int(features)) (50, 4)
Number of levels= 4
////////////////////////////////////////////////////////////////////////////////////////////////////
--------------------------------------------------------------------------------
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (2, 4)
TEST np.zeros((pad_dim,int(features)) (62, 4)
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (44, 4)
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (20, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (42, 4)
TEST np.zeros((pad_dim,int(features)) (22, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (12, 4)
TEST np.zeros((pad_dim,int(features)) (52, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (6, 4)
TEST np.zeros((pad_dim,int(features)) (58, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (2, 4)
TEST np.zeros((pad_dim,int(features)) (62, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 44, 6, 2]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 5
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (44, 4)
TEST np.zeros((pad_dim,int(features)) (20, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (6, 4)
TEST np.zeros((pad_dim,int(features)) (58, 4)
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
subjets per level= [32, 64, 46, 16, 4, 4]
subjets per level= [32, 64, 44, 10]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 4
--------------------------------------------------------------------------------
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (2, 4)
max_n_level= 64
--------------------------------------------------------------------------------
TEST np.zeros((pad_dim,int(features)) (62, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
//////////////////////////////////////////////////////////////--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 6
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
//////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
max_n_level and len(levels[i])= 64 64
TEST np.zeros((pad_dim,int(features)) (0, 4)
TEST contents[i].shape= (44, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
TEST np.zeros((pad_dim,int(features)) (20, 4)
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (46, 4)
TEST np.zeros((pad_dim,int(features)) (18, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (10, 4)
TEST np.zeros((pad_dim,int(features)) (54, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (16, 4)
TEST np.zeros((pad_dim,int(features)) (48, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (4, 4)
TEST np.zeros((pad_dim,int(features)) (60, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (4, 4)
TEST np.zeros((pad_dim,int(features)) (60, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 36, 10, 2, 2]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 6
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (36, 4)
TEST np.zeros((pad_dim,int(features)) (28, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (10, 4)
TEST np.zeros((pad_dim,int(features)) (54, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (2, 4)
TEST np.zeros((pad_dim,int(features)) (62, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (2, 4)
TEST np.zeros((pad_dim,int(features)) (62, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 48, 8]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 4
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (48, 4)
TEST np.zeros((pad_dim,int(features)) (16, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (8, 4)
TEST np.zeros((pad_dim,int(features)) (56, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 60, 18]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 4
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (60, 4)
TEST np.zeros((pad_dim,int(features)) (4, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (18, 4)
TEST np.zeros((pad_dim,int(features)) (46, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 50, 12, 2]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 5
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (50, 4)
TEST np.zeros((pad_dim,int(features)) (14, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (12, 4)
TEST np.zeros((pad_dim,int(features)) (52, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (2, 4)
TEST np.zeros((pad_dim,int(features)) (62, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 44, 8]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 4
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (44, 4)
TEST np.zeros((pad_dim,int(features)) (20, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (8, 4)
TEST np.zeros((pad_dim,int(features)) (56, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 50, 10]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 4
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (50, 4)
TEST np.zeros((pad_dim,int(features)) (14, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (10, 4)
- Eval metrics : accuracy: 0.5339 ; loss: 0.7096ountered in true_divide███| 37/37 [00:19<00:00,  1.87it/s, loss=0.653]
- Eval metrics : accuracy: 0.5339 ; loss: 0.7096ountered in true_divide███| 37/37 [00:19<00:00,  1.87it/s, loss=0.653]
Checkpoint Directory exists!
--------------------------------------------------------------------------------
subjets per level= [32, 64, 36, 14, 4]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 5
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
subjets per level= [32, 64, 46, 14]
--------------------------------------------------------------------------------
max_n_level and len(levels[i])= 64 64
--------------------------------------------------------------------------------
TEST contents[i].shape= (64, 4)
Number of levels= 4
--------------------------------------------------------------------------------
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (36, 4)
TEST np.zeros((pad_dim,int(features)) (28, 4)
max_n_level= 64
////////////////////////////////////////////////////////////////////////////////////////////////////
--------------------------------------------------------------------------------
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (14, 4)
TEST np.zeros((pad_dim,int(features)) (50, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
TEST np.zeros((pad_dim,int(features)) (32, 4)
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (4, 4)
TEST np.zeros((pad_dim,int(features)) (60, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 42, 14]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 4
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
max_n_level= 64
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (46, 4)
TEST np.zeros((pad_dim,int(features)) (18, 4)
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (14, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
TEST np.zeros((pad_dim,int(features)) (50, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (42, 4)
TEST np.zeros((pad_dim,int(features)) (22, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (14, 4)
TEST np.zeros((pad_dim,int(features)) (50, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 48, 8, 2]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 5
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
subjets per level= [32, 64, 38, 6]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 4
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
max_n_level= 64
TEST contents[i].shape= (32, 4)
--------------------------------------------------------------------------------
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (48, 4)
TEST np.zeros((pad_dim,int(features)) (16, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
////////////////////////////////////////////////////////////////////////////////////////////////////
TEST contents[i].shape= (64, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 52, 8, 2]
--------------------------------------------------------------------------------
max_n_level and len(levels[i])= 64 64
--------------------------------------------------------------------------------
TEST np.zeros((pad_dim,int(features)) (0, 4)
Number of levels= 5
--------------------------------------------------------------------------------
TEST contents[i].shape= (8, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
TEST np.zeros((pad_dim,int(features)) (56, 4)
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (38, 4)
TEST np.zeros((pad_dim,int(features)) (26, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level= 64
--------------------------------------------------------------------------------
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (6, 4)
TEST np.zeros((pad_dim,int(features)) (58, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST contents[i].shape= (2, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
TEST np.zeros((pad_dim,int(features)) (62, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (52, 4)
TEST np.zeros((pad_dim,int(features)) (12, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (8, 4)
TEST np.zeros((pad_dim,int(features)) (56, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (2, 4)
TEST np.zeros((pad_dim,int(features)) (62, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 46, 18, 2]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 5
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (46, 4)
TEST np.zeros((pad_dim,int(features)) (18, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (18, 4)
TEST np.zeros((pad_dim,int(features)) (46, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (2, 4)
TEST np.zeros((pad_dim,int(features)) (62, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 36, 8]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 4
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (36, 4)
TEST np.zeros((pad_dim,int(features)) (28, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (8, 4)
TEST np.zeros((pad_dim,int(features)) (56, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 40, 8]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 4
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (40, 4)
TEST np.zeros((pad_dim,int(features)) (24, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (8, 4)
TEST np.zeros((pad_dim,int(features)) (56, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 44, 6, 2]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 5
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (44, 4)
TEST np.zeros((pad_dim,int(features)) (20, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (6, 4)
TEST np.zeros((pad_dim,int(features)) (58, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (2, 4)
TEST np.zeros((pad_dim,int(features)) (62, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 58, 22]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 4
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (58, 4)
TEST np.zeros((pad_dim,int(features)) (6, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (22, 4)
TEST np.zeros((pad_dim,int(features)) (42, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 48, 10]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 4
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (48, 4)
TEST np.zeros((pad_dim,int(features)) (16, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (10, 4)
TEST np.zeros((pad_dim,int(features)) (54, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 50, 12]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 4
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (50, 4)
TEST np.zeros((pad_dim,int(features)) (14, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (12, 4)
TEST np.zeros((pad_dim,int(features)) (52, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 44, 24]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 4
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (44, 4)
TEST np.zeros((pad_dim,int(features)) (20, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (24, 4)
TEST np.zeros((pad_dim,int(features)) (40, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 32, 8, 2]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 5
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (8, 4)
TEST np.zeros((pad_dim,int(features)) (56, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (2, 4)
TEST np.zeros((pad_dim,int(features)) (62, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 40, 12]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 4
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (40, 4)
TEST np.zeros((pad_dim,int(features)) (24, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (12, 4)
TEST np.zeros((pad_dim,int(features)) (52, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 42, 12, 6]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 5
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (42, 4)
TEST np.zeros((pad_dim,int(features)) (22, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (12, 4)
TEST np.zeros((pad_dim,int(features)) (52, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (6, 4)
TEST np.zeros((pad_dim,int(features)) (58, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 34, 4, 4]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 5
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (34, 4)
TEST np.zeros((pad_dim,int(features)) (30, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (4, 4)
TEST np.zeros((pad_dim,int(features)) (60, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (4, 4)
TEST np.zeros((pad_dim,int(features)) (60, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 36, 2]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 4
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (36, 4)
TEST np.zeros((pad_dim,int(features)) (28, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (2, 4)
TEST np.zeros((pad_dim,int(features)) (62, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 42, 18, 4]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 5
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (42, 4)
TEST np.zeros((pad_dim,int(features)) (22, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (18, 4)
TEST np.zeros((pad_dim,int(features)) (46, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (4, 4)
TEST np.zeros((pad_dim,int(features)) (60, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 40, 10, 2]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 5
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (40, 4)
TEST np.zeros((pad_dim,int(features)) (24, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (10, 4)
TEST np.zeros((pad_dim,int(features)) (54, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (2, 4)
TEST np.zeros((pad_dim,int(features)) (62, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 42, 6]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 4
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (42, 4)
TEST np.zeros((pad_dim,int(features)) (22, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (6, 4)
TEST np.zeros((pad_dim,int(features)) (58, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 46, 12]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 4
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (46, 4)
TEST np.zeros((pad_dim,int(features)) (18, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (12, 4)
TEST np.zeros((pad_dim,int(features)) (52, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 32, 8, 2]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 5
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (8, 4)
TEST np.zeros((pad_dim,int(features)) (56, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (2, 4)
TEST np.zeros((pad_dim,int(features)) (62, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 40, 14, 4]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 5
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (40, 4)
TEST np.zeros((pad_dim,int(features)) (24, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (14, 4)
TEST np.zeros((pad_dim,int(features)) (50, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (4, 4)
TEST np.zeros((pad_dim,int(features)) (60, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 48, 10, 4]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 5
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (48, 4)
TEST np.zeros((pad_dim,int(features)) (16, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (10, 4)
TEST np.zeros((pad_dim,int(features)) (54, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (4, 4)
TEST np.zeros((pad_dim,int(features)) (60, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 44, 8, 4]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 5
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (44, 4)
TEST np.zeros((pad_dim,int(features)) (20, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (8, 4)
TEST np.zeros((pad_dim,int(features)) (56, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (4, 4)
TEST np.zeros((pad_dim,int(features)) (60, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 44, 10]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 4
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (44, 4)
TEST np.zeros((pad_dim,int(features)) (20, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (10, 4)
TEST np.zeros((pad_dim,int(features)) (54, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 40, 12, 4]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 5
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (40, 4)
TEST np.zeros((pad_dim,int(features)) (24, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (12, 4)
TEST np.zeros((pad_dim,int(features)) (52, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (4, 4)
TEST np.zeros((pad_dim,int(features)) (60, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 50, 12, 2]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 5
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (50, 4)
TEST np.zeros((pad_dim,int(features)) (14, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (12, 4)
TEST np.zeros((pad_dim,int(features)) (52, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (2, 4)
TEST np.zeros((pad_dim,int(features)) (62, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 46, 12, 4]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 5
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (46, 4)
TEST np.zeros((pad_dim,int(features)) (18, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (12, 4)
TEST np.zeros((pad_dim,int(features)) (52, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (4, 4)
TEST np.zeros((pad_dim,int(features)) (60, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 48, 20, 8, 2]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 6
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (48, 4)
TEST np.zeros((pad_dim,int(features)) (16, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (20, 4)
TEST np.zeros((pad_dim,int(features)) (44, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (8, 4)
TEST np.zeros((pad_dim,int(features)) (56, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (2, 4)
TEST np.zeros((pad_dim,int(features)) (62, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 44, 10, 2, 2]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 6
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (44, 4)
TEST np.zeros((pad_dim,int(features)) (20, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (10, 4)
TEST np.zeros((pad_dim,int(features)) (54, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (2, 4)
TEST np.zeros((pad_dim,int(features)) (62, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (2, 4)
TEST np.zeros((pad_dim,int(features)) (62, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 44, 10]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 4
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (44, 4)
TEST np.zeros((pad_dim,int(features)) (20, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (10, 4)
TEST np.zeros((pad_dim,int(features)) (54, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 46, 12]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 4
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (46, 4)
TEST np.zeros((pad_dim,int(features)) (18, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (12, 4)
TEST np.zeros((pad_dim,int(features)) (52, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 46, 12, 2]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 5
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (46, 4)
TEST np.zeros((pad_dim,int(features)) (18, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (12, 4)
TEST np.zeros((pad_dim,int(features)) (52, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (2, 4)
TEST np.zeros((pad_dim,int(features)) (62, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 34, 4]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 4
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (34, 4)
TEST np.zeros((pad_dim,int(features)) (30, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (4, 4)
TEST np.zeros((pad_dim,int(features)) (60, 4)
- Eval metrics : accuracy: 0.5339 ; loss: 0.7096ountered in true_divide███| 37/37 [00:19<00:00,  1.87it/s, loss=0.653]
--------------------------------------------------------------------------------
subjets per level= [32, 64, 48, 14, 2]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 5
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
--------------------------------------------------------------------------------
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (48, 4)
subjets per level= [32, 64, 44, 6, 2]
TEST np.zeros((pad_dim,int(features)) (16, 4)
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 5
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (14, 4)
TEST np.zeros((pad_dim,int(features)) (50, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level= 64
max_n_level and len(levels[i])= 64 64
--------------------------------------------------------------------------------
TEST contents[i].shape= (2, 4)
TEST np.zeros((pad_dim,int(features)) (62, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (44, 4)
TEST np.zeros((pad_dim,int(features)) (20, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (6, 4)
TEST np.zeros((pad_dim,int(features)) (58, 4)
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
subjets per level= [32, 64, 42, 12]
--------------------------------------------------------------------------------
max_n_level and len(levels[i])= 64 64
--------------------------------------------------------------------------------
TEST contents[i].shape= (2, 4)
Number of levels= 4
--------------------------------------------------------------------------------
TEST np.zeros((pad_dim,int(features)) (62, 4)
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (42, 4)
TEST np.zeros((pad_dim,int(features)) (22, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (12, 4)
TEST np.zeros((pad_dim,int(features)) (52, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 44, 6, 2]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 5
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
--------------------------------------------------------------------------------
TEST contents[i].shape= (32, 4)
subjets per level= [32, 64, 46, 16, 4, 4]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 6
-----------------------------------------------------TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
---------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (44, 4)
TEST np.zeros((pad_dim,int(features)) (20, 4)
max_n_level= 64
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (6, 4)
--------------------------------------------------------------------------------
TEST np.zeros((pad_dim,int(features)) (58, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
--------------------------------------------------------------------------------
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (2, 4)
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (62, 4)
subjets per level= [32, 64, 44, 10]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 4
--------------------------------------------------------------------------------
TEST np.zeros((pad_dim,int(features)) (32, 4)
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
TEST np.zeros((pad_dim,int(features)) (32, 4)
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (46, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
TEST np.zeros((pad_dim,int(features)) (18, 4)
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (44, 4)
TEST np.zeros((pad_dim,int(features)) (20, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (16, 4)
TEST np.zeros((pad_dim,int(features)) (48, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (10, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
TEST np.zeros((pad_dim,int(features)) (54, 4)
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (4, 4)
TEST np.zeros((pad_dim,int(features)) (60, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (4, 4)
TEST np.zeros((pad_dim,int(features)) (60, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 36, 10, 2, 2]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 6
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (36, 4)
TEST np.zeros((pad_dim,int(features)) (28, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (10, 4)
TEST np.zeros((pad_dim,int(features)) (54, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (2, 4)
TEST np.zeros((pad_dim,int(features)) (62, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (2, 4)
TEST np.zeros((pad_dim,int(features)) (62, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 48, 8]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 4
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (48, 4)
TEST np.zeros((pad_dim,int(features)) (16, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (8, 4)
TEST np.zeros((pad_dim,int(features)) (56, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 60, 18]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 4
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (60, 4)
TEST np.zeros((pad_dim,int(features)) (4, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (18, 4)
TEST np.zeros((pad_dim,int(features)) (46, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 50, 12, 2]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 5
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (50, 4)
TEST np.zeros((pad_dim,int(features)) (14, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (12, 4)
TEST np.zeros((pad_dim,int(features)) (52, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (2, 4)
TEST np.zeros((pad_dim,int(features)) (62, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 44, 8]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 4
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (44, 4)
TEST np.zeros((pad_dim,int(features)) (20, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (8, 4)
TEST np.zeros((pad_dim,int(features)) (56, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 50, 10]
train.py:220: RuntimeWarning: divide by zero encountered in true_divide███| 37/37 [00:19<00:00,  1.87it/s, loss=0.653]
train.py:220: RuntimeWarning: divide by zero encountered in true_divide███| 37/37 [00:19<00:00,  1.87it/s, loss=0.653]
  0%|                                                                                          | 0/37 [00:00<?, ?it/s]
100%|█████████████████████████████████████████████████████████████████████| 37/37 [00:16<00:00,  2.23it/s, loss=0.648]
100%|█████████████████████████████████████████████████████████████████████| 37/37 [00:16<00:00,  2.23it/s, loss=0.648]
--------------------------------------------------------------------------------
subjets per level= [32, 64, 36, 14, 4]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 5
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
subjets per level= [32, 64, 46, 14]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 4
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level= 64
--------------------------------------------------------------------------------
max_n_level and len(levels[i])= 64 64
////////////////////////////////////////////////////////////////////////////////////////////////////
TEST contents[i].shape= (32, 4)
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (46, 4)
TEST np.zeros((pad_dim,int(features)) (18, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (14, 4)
TEST contents[i].shape= (36, 4)
TEST np.zeros((pad_dim,int(features)) (50, 4)
TEST np.zeros((pad_dim,int(features)) (28, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (14, 4)
TEST np.zeros((pad_dim,int(features)) (50, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (4, 4)
TEST np.zeros((pad_dim,int(features)) (60, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 42, 14]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 4
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (42, 4)
TEST np.zeros((pad_dim,int(features)) (22, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (14, 4)
TEST np.zeros((pad_dim,int(features)) (50, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 48, 8, 2]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 5
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (48, 4)
TEST np.zeros((pad_dim,int(features)) (16, 4)
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
subjets per level= [32, 64, 52, 8, 2]
subjets per level= [32, 64, 38, 6]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 4
Number of levels= 5
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (8, 4)
TEST np.zeros((pad_dim,int(features)) (56, 4)
max_n_level= 64
max_n_level= 64
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
max_n_level and len(levels[i])= 64 64
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (2, 4)
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (62, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
TEST np.zeros((pad_dim,int(features)) (0, 4)
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
TEST np.zeros((pad_dim,int(features)) (0, 4)
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (52, 4)
TEST np.zeros((pad_dim,int(features)) (12, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (38, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST np.zeros((pad_dim,int(features)) (26, 4)
TEST contents[i].shape= (8, 4)
TEST np.zeros((pad_dim,int(features)) (56, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
////////////////////////////////////////////////////////////////////////////////////////////////////
TEST contents[i].shape= (6, 4)
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (2, 4)
TEST np.zeros((pad_dim,int(features)) (58, 4)
TEST np.zeros((pad_dim,int(features)) (62, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 46, 18, 2]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 5
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (46, 4)
TEST np.zeros((pad_dim,int(features)) (18, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (18, 4)
TEST np.zeros((pad_dim,int(features)) (46, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (2, 4)
TEST np.zeros((pad_dim,int(features)) (62, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 36, 8]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 4
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (36, 4)
TEST np.zeros((pad_dim,int(features)) (28, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (8, 4)
TEST np.zeros((pad_dim,int(features)) (56, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 40, 8]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 4
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (40, 4)
TEST np.zeros((pad_dim,int(features)) (24, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (8, 4)
TEST np.zeros((pad_dim,int(features)) (56, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 44, 6, 2]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 5
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (44, 4)
TEST np.zeros((pad_dim,int(features)) (20, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (6, 4)
TEST np.zeros((pad_dim,int(features)) (58, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (2, 4)
TEST np.zeros((pad_dim,int(features)) (62, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 58, 22]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 4
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (58, 4)
TEST np.zeros((pad_dim,int(features)) (6, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (22, 4)
TEST np.zeros((pad_dim,int(features)) (42, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 48, 10]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 4
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (48, 4)
TEST np.zeros((pad_dim,int(features)) (16, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (10, 4)
TEST np.zeros((pad_dim,int(features)) (54, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 50, 12]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 4
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (50, 4)
TEST np.zeros((pad_dim,int(features)) (14, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (12, 4)
TEST np.zeros((pad_dim,int(features)) (52, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 44, 24]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 4
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (44, 4)
TEST np.zeros((pad_dim,int(features)) (20, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (24, 4)
TEST np.zeros((pad_dim,int(features)) (40, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 32, 8, 2]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 5
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (8, 4)
TEST np.zeros((pad_dim,int(features)) (56, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (2, 4)
TEST np.zeros((pad_dim,int(features)) (62, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 40, 12]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 4
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (40, 4)
TEST np.zeros((pad_dim,int(features)) (24, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (12, 4)
TEST np.zeros((pad_dim,int(features)) (52, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 42, 12, 6]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 5
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (42, 4)
TEST np.zeros((pad_dim,int(features)) (22, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (12, 4)
TEST np.zeros((pad_dim,int(features)) (52, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (6, 4)
TEST np.zeros((pad_dim,int(features)) (58, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 34, 4, 4]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 5
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (34, 4)
TEST np.zeros((pad_dim,int(features)) (30, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (4, 4)
TEST np.zeros((pad_dim,int(features)) (60, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (4, 4)
TEST np.zeros((pad_dim,int(features)) (60, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 36, 2]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 4
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (36, 4)
TEST np.zeros((pad_dim,int(features)) (28, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (2, 4)
TEST np.zeros((pad_dim,int(features)) (62, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 42, 18, 4]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 5
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (42, 4)
TEST np.zeros((pad_dim,int(features)) (22, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (18, 4)
TEST np.zeros((pad_dim,int(features)) (46, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (4, 4)
TEST np.zeros((pad_dim,int(features)) (60, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 40, 10, 2]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 5
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (40, 4)
TEST np.zeros((pad_dim,int(features)) (24, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (10, 4)
TEST np.zeros((pad_dim,int(features)) (54, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (2, 4)
TEST np.zeros((pad_dim,int(features)) (62, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 42, 6]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 4
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (42, 4)
TEST np.zeros((pad_dim,int(features)) (22, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (6, 4)
TEST np.zeros((pad_dim,int(features)) (58, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 46, 12]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 4
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (46, 4)
TEST np.zeros((pad_dim,int(features)) (18, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (12, 4)
TEST np.zeros((pad_dim,int(features)) (52, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 32, 8, 2]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 5
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (8, 4)
TEST np.zeros((pad_dim,int(features)) (56, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (2, 4)
TEST np.zeros((pad_dim,int(features)) (62, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 40, 14, 4]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 5
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (40, 4)
TEST np.zeros((pad_dim,int(features)) (24, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (14, 4)
TEST np.zeros((pad_dim,int(features)) (50, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (4, 4)
TEST np.zeros((pad_dim,int(features)) (60, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 48, 10, 4]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 5
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (48, 4)
TEST np.zeros((pad_dim,int(features)) (16, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (10, 4)
TEST np.zeros((pad_dim,int(features)) (54, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (4, 4)
TEST np.zeros((pad_dim,int(features)) (60, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 44, 8, 4]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 5
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (44, 4)
TEST np.zeros((pad_dim,int(features)) (20, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (8, 4)
TEST np.zeros((pad_dim,int(features)) (56, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (4, 4)
TEST np.zeros((pad_dim,int(features)) (60, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 44, 10]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 4
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (44, 4)
TEST np.zeros((pad_dim,int(features)) (20, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (10, 4)
TEST np.zeros((pad_dim,int(features)) (54, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 40, 12, 4]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 5
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (40, 4)
TEST np.zeros((pad_dim,int(features)) (24, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (12, 4)
TEST np.zeros((pad_dim,int(features)) (52, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (4, 4)
TEST np.zeros((pad_dim,int(features)) (60, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 50, 12, 2]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 5
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (50, 4)
TEST np.zeros((pad_dim,int(features)) (14, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (12, 4)
TEST np.zeros((pad_dim,int(features)) (52, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (2, 4)
TEST np.zeros((pad_dim,int(features)) (62, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 46, 12, 4]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 5
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (46, 4)
TEST np.zeros((pad_dim,int(features)) (18, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (12, 4)
TEST np.zeros((pad_dim,int(features)) (52, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (4, 4)
TEST np.zeros((pad_dim,int(features)) (60, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 48, 20, 8, 2]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 6
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (48, 4)
TEST np.zeros((pad_dim,int(features)) (16, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (20, 4)
TEST np.zeros((pad_dim,int(features)) (44, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (8, 4)
TEST np.zeros((pad_dim,int(features)) (56, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (2, 4)
TEST np.zeros((pad_dim,int(features)) (62, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 44, 10, 2, 2]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 6
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (44, 4)
TEST np.zeros((pad_dim,int(features)) (20, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (10, 4)
TEST np.zeros((pad_dim,int(features)) (54, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (2, 4)
TEST np.zeros((pad_dim,int(features)) (62, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (2, 4)
TEST np.zeros((pad_dim,int(features)) (62, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 44, 10]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 4
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (44, 4)
TEST np.zeros((pad_dim,int(features)) (20, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (10, 4)
TEST np.zeros((pad_dim,int(features)) (54, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 46, 12]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 4
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (46, 4)
TEST np.zeros((pad_dim,int(features)) (18, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (12, 4)
TEST np.zeros((pad_dim,int(features)) (52, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 46, 12, 2]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 5
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (46, 4)
TEST np.zeros((pad_dim,int(features)) (18, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (12, 4)
TEST np.zeros((pad_dim,int(features)) (52, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (2, 4)
TEST np.zeros((pad_dim,int(features)) (62, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 34, 4]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 4
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (34, 4)
TEST np.zeros((pad_dim,int(features)) (30, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (4, 4)
TEST np.zeros((pad_dim,int(features)) (60, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 48, 14, 2]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 5
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
///////////////////////////////////////////////////////////////////////////////////////////////--------------------------------------------------------------------------------
subjets per level= [32, 64, 44, 6, 2]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 5
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
/////
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
max_n_level and len(levels[i])= 64 64
TEST np.zeros((pad_dim,int(features)) (32, 4)
TEST contents[i].shape= (48, 4)
TEST np.zeros((pad_dim,int(features)) (16, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
TEST np.zeros((pad_dim,int(features)) (0, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 42, 12]
max_n_level and len(levels[i])= 64 64
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 4
TEST contents[i].shape= (14, 4)
--------------------------------------------------------------------------------
TEST np.zeros((pad_dim,int(features)) (50, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (44, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
TEST np.zeros((pad_dim,int(features)) (20, 4)
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (2, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level= 64
--------------------------------------------------------------------------------
max_n_level and len(levels[i])= 64 64
TEST np.zeros((pad_dim,int(features)) (62, 4)
TEST contents[i].shape= (6, 4)
TEST np.zeros((pad_dim,int(features)) (58, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (2, 4)
TEST np.zeros((pad_dim,int(features)) (62, 4)
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (42, 4)
TEST np.zeros((pad_dim,int(features)) (22, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (12, 4)
TEST np.zeros((pad_dim,int(features)) (52, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 44, 10]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 4
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (44, 4)
TEST np.zeros((pad_dim,int(features)) (20, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 46, 16, 4, 4]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 6
--------------------------------------------------------------------------------
subjets per level= [32, 64, 44, 6, 2]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 5
////////////////////////////////////////////////////////////////////////////////////////////////////
--------------------------------------------------------------------------------
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (10, 4)
TEST np.zeros((pad_dim,int(features)) (54, 4)
max_n_level= 64
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
TEST np.zeros((pad_dim,int(features)) (32, 4)
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
TEST np.zeros((pad_dim,int(features)) (32, 4)
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
/////////////////////////////////////////////////////////////////////////////////max_n_level and len(levels[i])= 64 64
///////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (44, 4)
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
TEST np.zeros((pad_dim,int(features)) (20, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
////////////////////////////////////////////////////////////////////////////////////////////////////
TEST contents[i].shape= (46, 4)
max_n_level and len(levels[i])= 64 64
TEST np.zeros((pad_dim,int(features)) (18, 4)
TEST contents[i].shape= (6, 4)
TEST np.zeros((pad_dim,int(features)) (58, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
////////////////////////////////////////////////////////////////////////////////////////////////////
TEST contents[i].shape= (16, 4)
max_n_level and len(levels[i])= 64 64
TEST np.zeros((pad_dim,int(features)) (48, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (4, 4)
TEST np.zeros((pad_dim,int(features)) (60, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (2, 4)
TEST np.zeros((pad_dim,int(features)) (62, 4)
TEST contents[i].shape= (4, 4)
TEST np.zeros((pad_dim,int(features)) (60, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 36, 10, 2, 2]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 6
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (36, 4)
TEST np.zeros((pad_dim,int(features)) (28, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (10, 4)
TEST np.zeros((pad_dim,int(features)) (54, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (2, 4)
TEST np.zeros((pad_dim,int(features)) (62, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (2, 4)
TEST np.zeros((pad_dim,int(features)) (62, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 48, 8]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 4
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (48, 4)
TEST np.zeros((pad_dim,int(features)) (16, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (8, 4)
TEST np.zeros((pad_dim,int(features)) (56, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 60, 18]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 4
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (60, 4)
TEST np.zeros((pad_dim,int(features)) (4, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (18, 4)
TEST np.zeros((pad_dim,int(features)) (46, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 50, 12, 2]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 5
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (50, 4)
TEST np.zeros((pad_dim,int(features)) (14, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (12, 4)
TEST np.zeros((pad_dim,int(features)) (52, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (2, 4)
TEST np.zeros((pad_dim,int(features)) (62, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 44, 8]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 4
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (44, 4)
TEST np.zeros((pad_dim,int(features)) (20, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (8, 4)
TEST np.zeros((pad_dim,int(features)) (56, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 50, 10]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 4
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (50, 4)
TEST np.zeros((pad_dim,int(features)) (14, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (10, 4)
- Found new best bg rejection = 4.333333333333333█████████████████████████| 37/37 [00:16<00:00,  2.23it/s, loss=0.648]
- Found new best bg rejection = 4.333333333333333█████████████████████████| 37/37 [00:16<00:00,  2.23it/s, loss=0.648]
Checkpoint Directory exists!
- Found new best bg rejection = 4.333333333333333█████████████████████████| 37/37 [00:16<00:00,  2.23it/s, loss=0.648]
--------------------------------------------------------------------------------
subjets per level= [32, 64, 36, 14, 4]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 5
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (36, 4)
TEST np.zeros((pad_dim,int(features)) (28, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (14, 4)
--------------------------------------------------------------------------------
TEST np.zeros((pad_dim,int(features)) (50, 4)
subjets per level= [32, 64, 46, 14]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 4
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (4, 4)
TEST np.zeros((pad_dim,int(features)) (60, 4)
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
subjets per level= [32, 64, 42, 14]
TEST contents[i].shape= (46, 4)
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 4
TEST np.zeros((pad_dim,int(features)) (18, 4)
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (14, 4)
max_n_level= 64
--------------------------------------------------------------------------------
TEST np.zeros((pad_dim,int(features)) (50, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (42, 4)
TEST np.zeros((pad_dim,int(features)) (22, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (14, 4)
TEST np.zeros((pad_dim,int(features)) (50, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 52, 8, 2]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 5
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////--------------------------------------------------------------------------------
subjets per level= [32, 64, 38, 6]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 4
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
////
--------------------------------------------------------------------------------
subjets per level= [32, 64, 48, 8, 2]
--------------------------------------------------------------------------------
max_n_level and len(levels[i])= 64 64
--------------------------------------------------------------------------------
Number of levels= 5
TEST contents[i].shape= (52, 4)
--------------------------------------------------------------------------------
TEST np.zeros((pad_dim,int(features)) (12, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (8, 4)
max_n_level= 64
--------------------------------------------------------------------------------
TEST contents[i].shape= (38, 4)
TEST np.zeros((pad_dim,int(features)) (56, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST np.zeros((pad_dim,int(features)) (26, 4)
TEST contents[i].shape= (2, 4)
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((padTEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////////////////////////
_dim,int(features)) (62, 4)
max_n_level and len(levels[i])= 64 64
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (48, 4)
TEST contents[i].shape= (6, 4)
TEST np.zeros((pad_dim,int(features)) (16, 4)
TEST np.zeros((pad_dim,int(features)) (58, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (8, 4)
TEST np.zeros((pad_dim,int(features)) (56, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (2, 4)
TEST np.zeros((pad_dim,int(features)) (62, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 46, 18, 2]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 5
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (46, 4)
TEST np.zeros((pad_dim,int(features)) (18, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (18, 4)
TEST np.zeros((pad_dim,int(features)) (46, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (2, 4)
TEST np.zeros((pad_dim,int(features)) (62, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 36, 8]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 4
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (36, 4)
TEST np.zeros((pad_dim,int(features)) (28, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (8, 4)
TEST np.zeros((pad_dim,int(features)) (56, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 40, 8]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 4
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (40, 4)
TEST np.zeros((pad_dim,int(features)) (24, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (8, 4)
TEST np.zeros((pad_dim,int(features)) (56, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 44, 6, 2]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 5
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (44, 4)
TEST np.zeros((pad_dim,int(features)) (20, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (6, 4)
TEST np.zeros((pad_dim,int(features)) (58, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (2, 4)
TEST np.zeros((pad_dim,int(features)) (62, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 58, 22]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 4
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (58, 4)
TEST np.zeros((pad_dim,int(features)) (6, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (22, 4)
TEST np.zeros((pad_dim,int(features)) (42, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 48, 10]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 4
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (48, 4)
TEST np.zeros((pad_dim,int(features)) (16, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (10, 4)
TEST np.zeros((pad_dim,int(features)) (54, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 50, 12]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 4
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (50, 4)
TEST np.zeros((pad_dim,int(features)) (14, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (12, 4)
TEST np.zeros((pad_dim,int(features)) (52, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 44, 24]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 4
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (44, 4)
TEST np.zeros((pad_dim,int(features)) (20, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (24, 4)
TEST np.zeros((pad_dim,int(features)) (40, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 32, 8, 2]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 5
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (8, 4)
TEST np.zeros((pad_dim,int(features)) (56, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (2, 4)
TEST np.zeros((pad_dim,int(features)) (62, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 40, 12]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 4
  inv_fpr = interp(base_tpr, tpr, 1. / fpr)[125]3█████████████████████████| 37/37 [00:16<00:00,  2.23it/s, loss=0.648]
  inv_fpr = interp(base_tpr, tpr, 1. / fpr)[125]3█████████████████████████| 37/37 [00:16<00:00,  2.23it/s, loss=0.648]
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (40, 4)
TEST np.zeros((pad_dim,int(features)) (24, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (12, 4)
TEST np.zeros((pad_dim,int(features)) (52, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 42, 12, 6]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 5
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (42, 4)
TEST np.zeros((pad_dim,int(features)) (22, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (12, 4)
TEST np.zeros((pad_dim,int(features)) (52, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (6, 4)
TEST np.zeros((pad_dim,int(features)) (58, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 34, 4, 4]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 5
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (34, 4)
TEST np.zeros((pad_dim,int(features)) (30, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (4, 4)
TEST np.zeros((pad_dim,int(features)) (60, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (4, 4)
TEST np.zeros((pad_dim,int(features)) (60, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 36, 2]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 4
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (36, 4)
TEST np.zeros((pad_dim,int(features)) (28, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (2, 4)
TEST np.zeros((pad_dim,int(features)) (62, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 42, 18, 4]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 5
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (42, 4)
TEST np.zeros((pad_dim,int(features)) (22, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (18, 4)
TEST np.zeros((pad_dim,int(features)) (46, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (4, 4)
TEST np.zeros((pad_dim,int(features)) (60, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 40, 10, 2]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 5
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (40, 4)
TEST np.zeros((pad_dim,int(features)) (24, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (10, 4)
TEST np.zeros((pad_dim,int(features)) (54, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (2, 4)
TEST np.zeros((pad_dim,int(features)) (62, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 42, 6]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 4
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (42, 4)
TEST np.zeros((pad_dim,int(features)) (22, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (6, 4)
TEST np.zeros((pad_dim,int(features)) (58, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 46, 12]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 4
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (46, 4)
TEST np.zeros((pad_dim,int(features)) (18, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (12, 4)
TEST np.zeros((pad_dim,int(features)) (52, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 32, 8, 2]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 5
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (8, 4)
TEST np.zeros((pad_dim,int(features)) (56, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (2, 4)
TEST np.zeros((pad_dim,int(features)) (62, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 40, 14, 4]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 5
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (40, 4)
TEST np.zeros((pad_dim,int(features)) (24, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (14, 4)
TEST np.zeros((pad_dim,int(features)) (50, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (4, 4)
TEST np.zeros((pad_dim,int(features)) (60, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 48, 10, 4]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 5
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (48, 4)
TEST np.zeros((pad_dim,int(features)) (16, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (10, 4)
TEST np.zeros((pad_dim,int(features)) (54, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (4, 4)
TEST np.zeros((pad_dim,int(features)) (60, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 44, 8, 4]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 5
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (44, 4)
TEST np.zeros((pad_dim,int(features)) (20, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (8, 4)
TEST np.zeros((pad_dim,int(features)) (56, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (4, 4)
TEST np.zeros((pad_dim,int(features)) (60, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 44, 10]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 4
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (44, 4)
TEST np.zeros((pad_dim,int(features)) (20, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (10, 4)
TEST np.zeros((pad_dim,int(features)) (54, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 40, 12, 4]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 5
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (40, 4)
TEST np.zeros((pad_dim,int(features)) (24, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (12, 4)
TEST np.zeros((pad_dim,int(features)) (52, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (4, 4)
TEST np.zeros((pad_dim,int(features)) (60, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 50, 12, 2]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 5
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (50, 4)
TEST np.zeros((pad_dim,int(features)) (14, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (12, 4)
TEST np.zeros((pad_dim,int(features)) (52, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (2, 4)
TEST np.zeros((pad_dim,int(features)) (62, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 46, 12, 4]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 5
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (46, 4)
TEST np.zeros((pad_dim,int(features)) (18, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (12, 4)
TEST np.zeros((pad_dim,int(features)) (52, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (4, 4)
TEST np.zeros((pad_dim,int(features)) (60, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 48, 20, 8, 2]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 6
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (48, 4)
TEST np.zeros((pad_dim,int(features)) (16, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (20, 4)
TEST np.zeros((pad_dim,int(features)) (44, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (8, 4)
TEST np.zeros((pad_dim,int(features)) (56, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (2, 4)
TEST np.zeros((pad_dim,int(features)) (62, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 44, 10, 2, 2]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 6
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (44, 4)
TEST np.zeros((pad_dim,int(features)) (20, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (10, 4)
TEST np.zeros((pad_dim,int(features)) (54, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (2, 4)
TEST np.zeros((pad_dim,int(features)) (62, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (2, 4)
TEST np.zeros((pad_dim,int(features)) (62, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 44, 10]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 4
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (44, 4)
TEST np.zeros((pad_dim,int(features)) (20, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (10, 4)
TEST np.zeros((pad_dim,int(features)) (54, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 46, 12]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 4
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (46, 4)
TEST np.zeros((pad_dim,int(features)) (18, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (12, 4)
TEST np.zeros((pad_dim,int(features)) (52, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 46, 12, 2]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 5
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (46, 4)
TEST np.zeros((pad_dim,int(features)) (18, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (12, 4)
TEST np.zeros((pad_dim,int(features)) (52, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (2, 4)
TEST np.zeros((pad_dim,int(features)) (62, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 34, 4]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 4
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (34, 4)
TEST np.zeros((pad_dim,int(features)) (30, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (4, 4)
TEST np.zeros((pad_dim,int(features)) (60, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 44, 6, 2]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 5
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
subjets per level= [32, 64, 48, 14, 2]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 5
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
max_n_level= 64
TEST np.zeros((pad_dim,int(features)) (32, 4)
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (44, 4)
TEST np.zeros((pad_dim,int(features)) (20, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
TEST contents[i].shape= (64, 4)
subjets per level= [32, 64, 42, 12]
--------------------------------------------------------------------------------
max_n_level and len(levels[i])= 64 64
--------------------------------------------------------------------------------
Number of levels= 4
TEST contents[i].shape= (6, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
--------------------------------------------------------------------------------
TEST np.zeros((pad_dim,int(features)) (58, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (2, 4)
TEST np.zeros((pad_dim,int(features)) (62, 4)
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (48, 4)
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
TEST np.zeros((pad_dim,int(features)) (16, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (42, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST np.zeros((pad_dim,int(features)) (22, 4)
TEST contents[i].shape= (14, 4)
TEST np.zeros((pad_dim,int(features)) (50, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (12, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
TEST np.zeros((pad_dim,int(features)) (52, 4)
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (2, 4)
TEST np.zeros((pad_dim,int(features)) (62, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 44, 6, 2]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 5
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
subjets per level= [32, 64, 44, 10]
--------------------------------------------------------------------------------
max_n_level and len(levels[i])= 64 64
--------------------------------------------------------------------------------
TEST contents[i].shape= (32, 4)
Number of levels= 4
--------------------------------------------------------------------------------
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
max_n_level= 64
--------------------------------------------------------------------------------
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
////////////////////////////////////////////////////////////////////////////////////////////////////
TEST contents[i].shape= (44, 4)
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (20, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (44, 4)
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (6, 4)
TEST np.zeros((pad_dim,int(features)) (20, 4)
TEST np.zeros((pad_dim,int(features)) (58, 4)
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
subjets per level= [32, 64, 46, 16, 4, 4]
--------------------------------------------------------------------------------
max_n_level and len(levels[i])= 64 64
--------------------------------------------------------------------------------
Number of levels= 6
TEST contents[i].shape= (10, 4)
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
TEST np.zeros((pad_dim,int(features)) (54, 4)
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (2, 4)
TEST np.zeros((pad_dim,int(features)) (62, 4)
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (46, 4)
TEST np.zeros((pad_dim,int(features)) (18, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (16, 4)
TEST np.zeros((pad_dim,int(features)) (48, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (4, 4)
TEST np.zeros((pad_dim,int(features)) (60, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (4, 4)
TEST np.zeros((pad_dim,int(features)) (60, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 36, 10, 2, 2]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 6
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (36, 4)
TEST np.zeros((pad_dim,int(features)) (28, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (10, 4)
TEST np.zeros((pad_dim,int(features)) (54, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (2, 4)
TEST np.zeros((pad_dim,int(features)) (62, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (2, 4)
TEST np.zeros((pad_dim,int(features)) (62, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 48, 8]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 4
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (48, 4)
TEST np.zeros((pad_dim,int(features)) (16, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (8, 4)
TEST np.zeros((pad_dim,int(features)) (56, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 60, 18]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 4
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (60, 4)
TEST np.zeros((pad_dim,int(features)) (4, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (18, 4)
TEST np.zeros((pad_dim,int(features)) (46, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 50, 12, 2]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 5
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (50, 4)
TEST np.zeros((pad_dim,int(features)) (14, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (12, 4)
TEST np.zeros((pad_dim,int(features)) (52, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (2, 4)
TEST np.zeros((pad_dim,int(features)) (62, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 44, 8]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 4
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (44, 4)
TEST np.zeros((pad_dim,int(features)) (20, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (8, 4)
TEST np.zeros((pad_dim,int(features)) (56, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 50, 10]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 4
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (50, 4)
TEST np.zeros((pad_dim,int(features)) (14, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (10, 4)
TEST np.zeros((pad_dim,int(features)) (54, 4)
Checkpoint Directory exists!
  inv_fpr = interp(base_tpr, tpr, 1. / fpr)[125]3█████████████████████████| 37/37 [00:16<00:00,  2.23it/s, loss=0.648]
--------------------------------------------------------------------------------
subjets per level= [32, 64, 36, 14, 4]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 5
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (36, 4)
TEST np.zeros((pad_dim,int(features)) (28, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (14, 4)
TEST np.zeros((pad_dim,int(features)) (50, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (4, 4)
--------------------------------------------------------------------------------
TEST np.zeros((pad_dim,int(features)) (60, 4)
subjets per level= [32, 64, 46, 14]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 4
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
subjets per level= [32, 64, 42, 14]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 4
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
////////////////////////////////////////////////////////////////////////////////////////////////////
TEST contents[i].shape= (64, 4)
max_n_level and len(levels[i])= 64 64
TEST np.zeros((pad_dim,int(features)) (0, 4)
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (46, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
TEST np.zeros((pad_dim,int(features)) (18, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (14, 4)
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (50, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (42, 4)
TEST np.zeros((pad_dim,int(features)) (22, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (14, 4)
TEST np.zeros((pad_dim,int(features)) (50, 4)
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
subjets per level= [32, 64, 48, 8, 2]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 5
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
subjets per level= [32, 64, 38, 6]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
subjets per level= [32, 64, 52, 8, 2]
Number of levels= 4
////////////////////////////////////////////////////////////////////////////////////////////////////
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level= 64
max_n_level and len(levels[i])= 64 64
--------------------------------------------------------------------------------
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
--------------------------------------------------------------------------------
Number of levels= 5
--------------------------------------------------------------------------------
TEST np.zeros((pad_dim,int(features)) (32, 4)
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (48, 4)
TEST np.zeros((pad_dim,int(features)) (16, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
max_n_level= 64
TEST contents[i].shape= (64, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
--------------------------------------------------------------------------------
TEST np.zeros((pad_dim,int(features)) (0, 4)
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (8, 4)
TEST np.zeros((pad_dim,int(features)) (56, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST contents[i].shape= (38, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
TEST np.zeros((pad_dim,int(features)) (26, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (6, 4)
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
TEST np.zeros((pad_dim,int(features)) (58, 4)
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (2, 4)
TEST np.zeros((pad_dim,int(features)) (62, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (52, 4)
TEST np.zeros((pad_dim,int(features)) (12, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (8, 4)
TEST np.zeros((pad_dim,int(features)) (56, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (2, 4)
TEST np.zeros((pad_dim,int(features)) (62, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 46, 18, 2]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 5
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (46, 4)
TEST np.zeros((pad_dim,int(features)) (18, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (18, 4)
TEST np.zeros((pad_dim,int(features)) (46, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (2, 4)
TEST np.zeros((pad_dim,int(features)) (62, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 36, 8]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 4
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (36, 4)
TEST np.zeros((pad_dim,int(features)) (28, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (8, 4)
TEST np.zeros((pad_dim,int(features)) (56, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 40, 8]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 4
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (40, 4)
TEST np.zeros((pad_dim,int(features)) (24, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (8, 4)
TEST np.zeros((pad_dim,int(features)) (56, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 44, 6, 2]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 5
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (44, 4)
TEST np.zeros((pad_dim,int(features)) (20, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (6, 4)
TEST np.zeros((pad_dim,int(features)) (58, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (2, 4)
TEST np.zeros((pad_dim,int(features)) (62, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 58, 22]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 4
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (58, 4)
TEST np.zeros((pad_dim,int(features)) (6, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (22, 4)
TEST np.zeros((pad_dim,int(features)) (42, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 48, 10]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 4
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (48, 4)
TEST np.zeros((pad_dim,int(features)) (16, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (10, 4)
TEST np.zeros((pad_dim,int(features)) (54, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 50, 12]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 4
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (50, 4)
TEST np.zeros((pad_dim,int(features)) (14, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (12, 4)
TEST np.zeros((pad_dim,int(features)) (52, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 44, 24]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 4
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (44, 4)
TEST np.zeros((pad_dim,int(features)) (20, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (24, 4)
TEST np.zeros((pad_dim,int(features)) (40, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 32, 8, 2]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 5
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (8, 4)
TEST np.zeros((pad_dim,int(features)) (56, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (2, 4)
TEST np.zeros((pad_dim,int(features)) (62, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 40, 12]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 4
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (40, 4)
TEST np.zeros((pad_dim,int(features)) (24, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (12, 4)
TEST np.zeros((pad_dim,int(features)) (52, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 42, 12, 6]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 5
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (42, 4)
TEST np.zeros((pad_dim,int(features)) (22, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (12, 4)
TEST np.zeros((pad_dim,int(features)) (52, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (6, 4)
TEST np.zeros((pad_dim,int(features)) (58, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 34, 4, 4]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 5
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (34, 4)
TEST np.zeros((pad_dim,int(features)) (30, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (4, 4)
TEST np.zeros((pad_dim,int(features)) (60, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (4, 4)
TEST np.zeros((pad_dim,int(features)) (60, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 36, 2]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 4
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (36, 4)
TEST np.zeros((pad_dim,int(features)) (28, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (2, 4)
TEST np.zeros((pad_dim,int(features)) (62, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 42, 18, 4]
--------------------------------------------------------------------------------
- Train metrics: accuracy: 0.6266 ; loss: 0.64513█████████████████████████| 37/37 [00:16<00:00,  2.23it/s, loss=0.648]
- Train metrics: accuracy: 0.6266 ; loss: 0.64513█████████████████████████| 37/37 [00:16<00:00,  2.23it/s, loss=0.648]
- Train metrics: accuracy: 0.6266 ; loss: 0.64513█████████████████████████| 37/37 [00:16<00:00,  2.23it/s, loss=0.648]
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (42, 4)
TEST np.zeros((pad_dim,int(features)) (22, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (18, 4)
TEST np.zeros((pad_dim,int(features)) (46, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (4, 4)
TEST np.zeros((pad_dim,int(features)) (60, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 40, 10, 2]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 5
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (40, 4)
TEST np.zeros((pad_dim,int(features)) (24, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (10, 4)
TEST np.zeros((pad_dim,int(features)) (54, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (2, 4)
TEST np.zeros((pad_dim,int(features)) (62, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 42, 6]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 4
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (42, 4)
TEST np.zeros((pad_dim,int(features)) (22, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (6, 4)
TEST np.zeros((pad_dim,int(features)) (58, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 46, 12]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 4
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (46, 4)
TEST np.zeros((pad_dim,int(features)) (18, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (12, 4)
TEST np.zeros((pad_dim,int(features)) (52, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 32, 8, 2]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 5
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (8, 4)
TEST np.zeros((pad_dim,int(features)) (56, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (2, 4)
TEST np.zeros((pad_dim,int(features)) (62, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 40, 14, 4]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 5
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (40, 4)
TEST np.zeros((pad_dim,int(features)) (24, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (14, 4)
TEST np.zeros((pad_dim,int(features)) (50, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (4, 4)
TEST np.zeros((pad_dim,int(features)) (60, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 48, 10, 4]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 5
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (48, 4)
TEST np.zeros((pad_dim,int(features)) (16, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (10, 4)
TEST np.zeros((pad_dim,int(features)) (54, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (4, 4)
TEST np.zeros((pad_dim,int(features)) (60, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 44, 8, 4]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 5
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (44, 4)
TEST np.zeros((pad_dim,int(features)) (20, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (8, 4)
TEST np.zeros((pad_dim,int(features)) (56, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (4, 4)
TEST np.zeros((pad_dim,int(features)) (60, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 44, 10]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 4
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (44, 4)
TEST np.zeros((pad_dim,int(features)) (20, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (10, 4)
TEST np.zeros((pad_dim,int(features)) (54, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 40, 12, 4]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 5
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (40, 4)
TEST np.zeros((pad_dim,int(features)) (24, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (12, 4)
TEST np.zeros((pad_dim,int(features)) (52, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (4, 4)
TEST np.zeros((pad_dim,int(features)) (60, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 50, 12, 2]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 5
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (50, 4)
TEST np.zeros((pad_dim,int(features)) (14, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (12, 4)
TEST np.zeros((pad_dim,int(features)) (52, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (2, 4)
TEST np.zeros((pad_dim,int(features)) (62, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 46, 12, 4]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 5
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (46, 4)
TEST np.zeros((pad_dim,int(features)) (18, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (12, 4)
TEST np.zeros((pad_dim,int(features)) (52, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (4, 4)
TEST np.zeros((pad_dim,int(features)) (60, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 48, 20, 8, 2]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 6
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (48, 4)
TEST np.zeros((pad_dim,int(features)) (16, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (20, 4)
TEST np.zeros((pad_dim,int(features)) (44, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (8, 4)
TEST np.zeros((pad_dim,int(features)) (56, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (2, 4)
TEST np.zeros((pad_dim,int(features)) (62, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 44, 10, 2, 2]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 6
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (44, 4)
TEST np.zeros((pad_dim,int(features)) (20, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (10, 4)
TEST np.zeros((pad_dim,int(features)) (54, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (2, 4)
TEST np.zeros((pad_dim,int(features)) (62, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (2, 4)
TEST np.zeros((pad_dim,int(features)) (62, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 44, 10]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 4
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (44, 4)
TEST np.zeros((pad_dim,int(features)) (20, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (10, 4)
TEST np.zeros((pad_dim,int(features)) (54, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 46, 12]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 4
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (46, 4)
TEST np.zeros((pad_dim,int(features)) (18, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (12, 4)
TEST np.zeros((pad_dim,int(features)) (52, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 46, 12, 2]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 5
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (46, 4)
TEST np.zeros((pad_dim,int(features)) (18, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (12, 4)
TEST np.zeros((pad_dim,int(features)) (52, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (2, 4)
TEST np.zeros((pad_dim,int(features)) (62, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 34, 4]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 4
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (34, 4)
TEST np.zeros((pad_dim,int(features)) (30, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (4, 4)
TEST np.zeros((pad_dim,int(features)) (60, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 48, 14, 2]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 5
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
///////////////////////////////////////////////////////////////////////////////////////////////--------------------------------------------------------------------------------
subjets per level= [32, 64, 44, 6, 2]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 5
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
/////
/////////////////////////////////////////////////////////////////////////////////////////--------------------------------------------------------------------------------
subjets per level= [32, 64, 42, 12]
--------------------------------------------------------------------------------
///////////
--------------------------------------------------------------------------------
Number of levels= 4
--------------------------------------------------------------------------------
max_n_level and len(levels[i])= 64 64
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (44, 4)
TEST np.zeros((pad_dim,int(features)) (20, 4)
TEST contents[i].shape= (48, 4)
TEST np.zeros((pad_dim,int(features)) (16, 4)
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
////////////////////////////////////////////////////////////////////////////////////////////////////
TEST contents[i].shape= (6, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
TEST contents[i].shape= (14, 4)
TEST np.zeros((pad_dim,int(features)) (58, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
TEST np.zeros((pad_dim,int(features)) (50, 4)
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (42, 4)
TEST np.zeros((pad_dim,int(features)) (22, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (2, 4)
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (12, 4)
TEST np.zeros((pad_dim,int(features)) (62, 4)
TEST np.zeros((pad_dim,int(features)) (52, 4)
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (2, 4)
TEST np.zeros((pad_dim,int(features)) (62, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 44, 10]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 4
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
subjets per level= [32, 64, 44, 6, 2]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 5
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level= 64
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
subjets per level= [32, 64, 46, 16, 4, 4]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 6
--------------------------------------------------------------------------------
TEST np.zeros((pad_dim,int(features)) (32, 4)
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (44, 4)
TEST np.zeros((pad_dim,int(features)) (20, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (10, 4)
TEST np.zeros((pad_dim,int(features)) (54, 4)
max_n_level and len(levels[i])= 64 64
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
////////////////////////////////////////////////////////////////////////////////////////////////////
TEST contents[i].shape= (46, 4)
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (18, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (44, 4)
TEST contents[i].shape= (16, 4)
TEST np.zeros((pad_dim,int(features)) (48, 4)
TEST np.zeros((pad_dim,int(features)) (20, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (6, 4)
TEST contents[i].shape= (4, 4)
TEST np.zeros((pad_dim,int(features)) (58, 4)
TEST np.zeros((pad_dim,int(features)) (60, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (2, 4)
TEST np.zeros((pad_dim,int(features)) (62, 4)
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (4, 4)
TEST np.zeros((pad_dim,int(features)) (60, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 36, 10, 2, 2]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 6
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (36, 4)
TEST np.zeros((pad_dim,int(features)) (28, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (10, 4)
TEST np.zeros((pad_dim,int(features)) (54, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (2, 4)
TEST np.zeros((pad_dim,int(features)) (62, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (2, 4)
TEST np.zeros((pad_dim,int(features)) (62, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 48, 8]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 4
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (48, 4)
TEST np.zeros((pad_dim,int(features)) (16, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (8, 4)
TEST np.zeros((pad_dim,int(features)) (56, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 60, 18]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 4
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (60, 4)
TEST np.zeros((pad_dim,int(features)) (4, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (18, 4)
TEST np.zeros((pad_dim,int(features)) (46, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 50, 12, 2]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 5
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (50, 4)
TEST np.zeros((pad_dim,int(features)) (14, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (12, 4)
TEST np.zeros((pad_dim,int(features)) (52, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (2, 4)
TEST np.zeros((pad_dim,int(features)) (62, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 44, 8]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 4
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (44, 4)
TEST np.zeros((pad_dim,int(features)) (20, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (8, 4)
TEST np.zeros((pad_dim,int(features)) (56, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 50, 10]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 4
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (50, 4)
TEST np.zeros((pad_dim,int(features)) (14, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (10, 4)
Total time (minutes) =18.554393299420674: 0.64513█████████████████████████| 37/37 [00:16<00:00,  2.23it/s, loss=0.648]
Total time (minutes) =18.554393299420674: 0.64513█████████████████████████| 37/37 [00:16<00:00,  2.23it/s, loss=0.648]
Total time (minutes) =18.554393299420674: 0.64513█████████████████████████| 37/37 [00:16<00:00,  2.23it/s, loss=0.648]