
100%|█████████████████████████████████████████████████████████████████████| 37/37 [00:16<00:00,  2.26it/s, loss=0.712]
- Train metrics: accuracy: 0.5197 ; loss: 0.7128
--------------------------------------------------------------------------------
subjets per level= [32, 64, 36, 10]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 4
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
subjets per level= [32, 64, 46, 14, 2]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 5
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
max_n_level= 64
////////////////////////////////////////////////////////////////////////////////////////////////////
--------------------------------------------------------------------------------
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
TEST np.zeros((pad_dim,int(features)) (0, 4)
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
--------------------------------------------------------------------------------
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
////////////////////////////////////////////////////////////////////////////////////////////////////
subjets per level= [32, 64, 46, 6, 2]
TEST contents[i].shape= (36, 4)
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 5
--------------------------------------------------------------------------------
max_n_level and len(levels[i])= 64 64
TEST np.zeros((pad_dim,int(features)) (28, 4)
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
////////////////////////////////////////////////////////////////////////////////////////////////////
TEST contents[i].shape= (10, 4)
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (46, 4)
max_n_level= 64
TEST np.zeros((pad_dim,int(features)) (18, 4)
TEST np.zeros((pad_dim,int(features)) (54, 4)
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST contents[i].shape= (14, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
TEST np.zeros((pad_dim,int(features)) (50, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (2, 4)
TEST np.zeros((pad_dim,int(features)) (62, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (46, 4)
TEST np.zeros((pad_dim,int(features)) (18, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (6, 4)
TEST np.zeros((pad_dim,int(features)) (58, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (2, 4)
TEST np.zeros((pad_dim,int(features)) (62, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 40, 4, 4]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 5
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
subjets per level= [32, 64, 44, 6]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 4
max_n_level= 64
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
max_n_level= 64
TEST np.zeros((pad_dim,int(features)) (32, 4)
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (40, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
TEST np.zeros((pad_dim,int(features)) (24, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
////////////////////////////////////////////////////////////////////////////////////////////////////
TEST contents[i].shape= (44, 4)
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (4, 4)
TEST np.zeros((pad_dim,int(features)) (20, 4)
TEST np.zeros((pad_dim,int(features)) (60, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (6, 4)
TEST np.zeros((pad_dim,int(features)) (58, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (4, 4)
TEST np.zeros((pad_dim,int(features)) (60, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 38, 18, 6, 2]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 6
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (38, 4)
TEST np.zeros((pad_dim,int(features)) (26, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (18, 4)
TEST np.zeros((pad_dim,int(features)) (46, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (6, 4)
TEST np.zeros((pad_dim,int(features)) (58, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (2, 4)
TEST np.zeros((pad_dim,int(features)) (62, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 40, 12, 2]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 5
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (40, 4)
TEST np.zeros((pad_dim,int(features)) (24, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (12, 4)
TEST np.zeros((pad_dim,int(features)) (52, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (2, 4)
TEST np.zeros((pad_dim,int(features)) (62, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 36, 10]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 4
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (36, 4)
TEST np.zeros((pad_dim,int(features)) (28, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (10, 4)
TEST np.zeros((pad_dim,int(features)) (54, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 58, 16, 4]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 5
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (58, 4)
TEST np.zeros((pad_dim,int(features)) (6, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (16, 4)
TEST np.zeros((pad_dim,int(features)) (48, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (4, 4)
TEST np.zeros((pad_dim,int(features)) (60, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 46, 16, 4]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 5
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (46, 4)
TEST np.zeros((pad_dim,int(features)) (18, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (16, 4)
TEST np.zeros((pad_dim,int(features)) (48, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (4, 4)
TEST np.zeros((pad_dim,int(features)) (60, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 40, 6]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 4
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (40, 4)
TEST np.zeros((pad_dim,int(features)) (24, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (6, 4)
TEST np.zeros((pad_dim,int(features)) (58, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 36, 4]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 4
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (36, 4)
TEST np.zeros((pad_dim,int(features)) (28, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (4, 4)
TEST np.zeros((pad_dim,int(features)) (60, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 54, 16, 2]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 5
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (54, 4)
TEST np.zeros((pad_dim,int(features)) (10, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (16, 4)
TEST np.zeros((pad_dim,int(features)) (48, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (2, 4)
TEST np.zeros((pad_dim,int(features)) (62, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 40, 8, 4]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 5
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (40, 4)
TEST np.zeros((pad_dim,int(features)) (24, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (8, 4)
TEST np.zeros((pad_dim,int(features)) (56, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (4, 4)
TEST np.zeros((pad_dim,int(features)) (60, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 36, 16]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 4
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (36, 4)
TEST np.zeros((pad_dim,int(features)) (28, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (16, 4)
TEST np.zeros((pad_dim,int(features)) (48, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 36, 6]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 4
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (36, 4)
TEST np.zeros((pad_dim,int(features)) (28, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (6, 4)
TEST np.zeros((pad_dim,int(features)) (58, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 42, 14, 4]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 5
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (42, 4)
TEST np.zeros((pad_dim,int(features)) (22, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (14, 4)
TEST np.zeros((pad_dim,int(features)) (50, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (4, 4)
TEST np.zeros((pad_dim,int(features)) (60, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 44, 6, 2]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 5
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (44, 4)
TEST np.zeros((pad_dim,int(features)) (20, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (6, 4)
TEST np.zeros((pad_dim,int(features)) (58, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (2, 4)
TEST np.zeros((pad_dim,int(features)) (62, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 40, 22, 2]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 5
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (40, 4)
TEST np.zeros((pad_dim,int(features)) (24, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (22, 4)
TEST np.zeros((pad_dim,int(features)) (42, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (2, 4)
TEST np.zeros((pad_dim,int(features)) (62, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 50, 14, 2]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 5
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (50, 4)
TEST np.zeros((pad_dim,int(features)) (14, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (14, 4)
TEST np.zeros((pad_dim,int(features)) (50, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (2, 4)
TEST np.zeros((pad_dim,int(features)) (62, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 34, 8]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 4
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (34, 4)
TEST np.zeros((pad_dim,int(features)) (30, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (8, 4)
TEST np.zeros((pad_dim,int(features)) (56, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 42, 12]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 4
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (42, 4)
TEST np.zeros((pad_dim,int(features)) (22, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (12, 4)
TEST np.zeros((pad_dim,int(features)) (52, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 44, 10, 2]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 5
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (44, 4)
TEST np.zeros((pad_dim,int(features)) (20, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (10, 4)
TEST np.zeros((pad_dim,int(features)) (54, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (2, 4)
TEST np.zeros((pad_dim,int(features)) (62, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 42, 8, 4]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 5
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (42, 4)
TEST np.zeros((pad_dim,int(features)) (22, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (8, 4)
TEST np.zeros((pad_dim,int(features)) (56, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (4, 4)
TEST np.zeros((pad_dim,int(features)) (60, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 42, 12, 2]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 5
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (42, 4)
TEST np.zeros((pad_dim,int(features)) (22, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (12, 4)
TEST np.zeros((pad_dim,int(features)) (52, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (2, 4)
TEST np.zeros((pad_dim,int(features)) (62, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 40, 16, 2]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 5
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (40, 4)
TEST np.zeros((pad_dim,int(features)) (24, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (16, 4)
TEST np.zeros((pad_dim,int(features)) (48, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (2, 4)
TEST np.zeros((pad_dim,int(features)) (62, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 38, 12]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 4
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (38, 4)
TEST np.zeros((pad_dim,int(features)) (26, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (12, 4)
TEST np.zeros((pad_dim,int(features)) (52, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 48, 14, 2]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 5
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (48, 4)
TEST np.zeros((pad_dim,int(features)) (16, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (14, 4)
TEST np.zeros((pad_dim,int(features)) (50, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (2, 4)
TEST np.zeros((pad_dim,int(features)) (62, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 48, 12, 2]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 5
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (48, 4)
TEST np.zeros((pad_dim,int(features)) (16, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (12, 4)
TEST np.zeros((pad_dim,int(features)) (52, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (2, 4)
TEST np.zeros((pad_dim,int(features)) (62, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 48, 4, 2]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 5
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (48, 4)
TEST np.zeros((pad_dim,int(features)) (16, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (4, 4)
TEST np.zeros((pad_dim,int(features)) (60, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (2, 4)
TEST np.zeros((pad_dim,int(features)) (62, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 44, 12]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 4
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (44, 4)
TEST np.zeros((pad_dim,int(features)) (20, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (12, 4)
TEST np.zeros((pad_dim,int(features)) (52, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 40, 16, 2]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 5
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (40, 4)
TEST np.zeros((pad_dim,int(features)) (24, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (16, 4)
TEST np.zeros((pad_dim,int(features)) (48, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (2, 4)
TEST np.zeros((pad_dim,int(features)) (62, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 50, 14, 6, 2]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 6
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (50, 4)
TEST np.zeros((pad_dim,int(features)) (14, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (14, 4)
TEST np.zeros((pad_dim,int(features)) (50, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (6, 4)
TEST np.zeros((pad_dim,int(features)) (58, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (2, 4)
TEST np.zeros((pad_dim,int(features)) (62, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 42, 8]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 4
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (42, 4)
TEST np.zeros((pad_dim,int(features)) (22, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (8, 4)
TEST np.zeros((pad_dim,int(features)) (56, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 44, 10]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 4
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (44, 4)
TEST np.zeros((pad_dim,int(features)) (20, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (10, 4)
TEST np.zeros((pad_dim,int(features)) (54, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 52, 14]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 4
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (52, 4)
TEST np.zeros((pad_dim,int(features)) (12, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (14, 4)
TEST np.zeros((pad_dim,int(features)) (50, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 42, 4, 2]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 5
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (42, 4)
TEST np.zeros((pad_dim,int(features)) (22, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (4, 4)
TEST np.zeros((pad_dim,int(features)) (60, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (2, 4)
TEST np.zeros((pad_dim,int(features)) (62, 4)
train.py:219: RuntimeWarning: divide by zero encountered in true_divide
  inv_fpr = interp(base_tpr, tpr, 1. / fpr)[125]
- Eval metrics : accuracy: 0.5000 ; loss: 0.7016
--------------------------------------------------------------------------------
subjets per level= [32, 64, 44, 6, 2]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 5
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
--------------------------------------------------------------------------------
TEST np.zeros((pad_dim,int(features)) (0, 4)
subjets per level= [32, 64, 42, 12]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 4
////////////////////////////////////////////////////////////////////////////////////////////////////
--------------------------------------------------------------------------------
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (44, 4)
TEST np.zeros((pad_dim,int(features)) (20, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (6, 4)
TEST np.zeros((pad_dim,int(features)) (58, 4)
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
////////////////////////////////////////////////////////////////////////////////////////////////////
TEST contents[i].shape= (2, 4)
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
TEST np.zeros((pad_dim,int(features)) (62, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (42, 4)
TEST np.zeros((pad_dim,int(features)) (22, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (12, 4)
TEST np.zeros((pad_dim,int(features)) (52, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 48, 14, 2]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 5
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (48, 4)
TEST np.zeros((pad_dim,int(features)) (16, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (14, 4)
TEST np.zeros((pad_dim,int(features)) (50, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (2, 4)
TEST np.zeros((pad_dim,int(features)) (62, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 44, 6, 2]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 5
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (44, 4)
TEST np.zeros((pad_dim,int(features)) (20, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (6, 4)
TEST np.zeros((pad_dim,int(features)) (58, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (2, 4)
TEST np.zeros((pad_dim,int(features)) (62, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 46, 16, 4, 4]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 6
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (46, 4)
TEST np.zeros((pad_dim,int(features)) (18, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (16, 4)
TEST np.zeros((pad_dim,int(features)) (48, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (4, 4)
TEST np.zeros((pad_dim,int(features)) (60, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (4, 4)
TEST np.zeros((pad_dim,int(features)) (60, 4)
subjets per level= [32, 64, 44, 10]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 4
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (44, 4)
TEST np.zeros((pad_dim,int(features)) (20, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (10, 4)
TEST np.zeros((pad_dim,int(features)) (54, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 36, 10, 2, 2]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 6
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (36, 4)
TEST np.zeros((pad_dim,int(features)) (28, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (10, 4)
TEST np.zeros((pad_dim,int(features)) (54, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (2, 4)
TEST np.zeros((pad_dim,int(features)) (62, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (2, 4)
TEST np.zeros((pad_dim,int(features)) (62, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 48, 8]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 4
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (48, 4)
TEST np.zeros((pad_dim,int(features)) (16, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (8, 4)
TEST np.zeros((pad_dim,int(features)) (56, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 60, 18]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 4
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (60, 4)
TEST np.zeros((pad_dim,int(features)) (4, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (18, 4)
TEST np.zeros((pad_dim,int(features)) (46, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 50, 12, 2]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 5
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (50, 4)
TEST np.zeros((pad_dim,int(features)) (14, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (12, 4)
TEST np.zeros((pad_dim,int(features)) (52, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (2, 4)
TEST np.zeros((pad_dim,int(features)) (62, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 44, 8]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 4
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (44, 4)
TEST np.zeros((pad_dim,int(features)) (20, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (8, 4)
TEST np.zeros((pad_dim,int(features)) (56, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 50, 10]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 4
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (50, 4)
TEST np.zeros((pad_dim,int(features)) (14, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (10, 4)
TEST np.zeros((pad_dim,int(features)) (54, 4)
- Found new best bg rejection = 3.4210526315789473
Epoch 2/30
  0%|                                                                                          | 0/37 [00:00<?, ?it/s]
Checkpoint Directory exists!
--------------------------------------------------------------------------------
subjets per level= [32, 64, 36, 10]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 4
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (36, 4)
TEST np.zeros((pad_dim,int(features)) (28, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (10, 4)
TEST np.zeros((pad_dim,int(features)) (54, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 46, 14, 2]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 5
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
--------------------------------------------------------------------------------
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
subjets per level= [32, 64, 46, 6, 2]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
TEST np.zeros((pad_dim,int(features)) (32, 4)
Number of levels= 5
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
////////////////////////////////////////////////////////////////////////////////////////////////////
TEST contents[i].shape= (46, 4)
max_n_level and len(levels[i])= 64 64
TEST np.zeros((pad_dim,int(features)) (18, 4)
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST contents[i].shape= (14, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
TEST np.zeros((pad_dim,int(features)) (50, 4)
//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (2, 4)
max_n_level and len(levels[i])= 64 64
TEST np.zeros((pad_dim,int(features)) (62, 4)
TEST contents[i].shape= (46, 4)
TEST np.zeros((pad_dim,int(features)) (18, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (6, 4)
TEST np.zeros((pad_dim,int(features)) (58, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (2, 4)
TEST np.zeros((pad_dim,int(features)) (62, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 40, 4, 4]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 5
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
subjets per level= [32, 64, 44, 6]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 4
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (44, 4)
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (20, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (6, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
TEST np.zeros((pad_dim,int(features)) (58, 4)
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
subjets per level= [32, 64, 38, 18, 6, 2]
TEST contents[i].shape= (40, 4)
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 6
TEST np.zeros((pad_dim,int(features)) (24, 4)
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (4, 4)
TEST np.zeros((pad_dim,int(features)) (60, 4)
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (4, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
TEST np.zeros((pad_dim,int(features)) (60, 4)
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (38, 4)
TEST np.zeros((pad_dim,int(features)) (26, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (18, 4)
TEST np.zeros((pad_dim,int(features)) (46, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (6, 4)
TEST np.zeros((pad_dim,int(features)) (58, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (2, 4)
TEST np.zeros((pad_dim,int(features)) (62, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 40, 12, 2]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 5
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (40, 4)
TEST np.zeros((pad_dim,int(features)) (24, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (12, 4)
TEST np.zeros((pad_dim,int(features)) (52, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (2, 4)
TEST np.zeros((pad_dim,int(features)) (62, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 36, 10]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 4
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (36, 4)
TEST np.zeros((pad_dim,int(features)) (28, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (10, 4)
TEST np.zeros((pad_dim,int(features)) (54, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 58, 16, 4]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 5
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (58, 4)
TEST np.zeros((pad_dim,int(features)) (6, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (16, 4)
TEST np.zeros((pad_dim,int(features)) (48, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (4, 4)
TEST np.zeros((pad_dim,int(features)) (60, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 46, 16, 4]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 5
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (46, 4)
TEST np.zeros((pad_dim,int(features)) (18, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (16, 4)
TEST np.zeros((pad_dim,int(features)) (48, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (4, 4)
TEST np.zeros((pad_dim,int(features)) (60, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 40, 6]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 4
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (40, 4)
TEST np.zeros((pad_dim,int(features)) (24, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (6, 4)
TEST np.zeros((pad_dim,int(features)) (58, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 36, 4]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 4
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (36, 4)
TEST np.zeros((pad_dim,int(features)) (28, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (4, 4)
TEST np.zeros((pad_dim,int(features)) (60, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 54, 16, 2]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 5
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (54, 4)
TEST np.zeros((pad_dim,int(features)) (10, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (16, 4)
TEST np.zeros((pad_dim,int(features)) (48, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (2, 4)
TEST np.zeros((pad_dim,int(features)) (62, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 40, 8, 4]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 5
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (40, 4)
TEST np.zeros((pad_dim,int(features)) (24, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (8, 4)
TEST np.zeros((pad_dim,int(features)) (56, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (4, 4)
TEST np.zeros((pad_dim,int(features)) (60, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 36, 16]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 4
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (36, 4)
TEST np.zeros((pad_dim,int(features)) (28, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (16, 4)
TEST np.zeros((pad_dim,int(features)) (48, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 36, 6]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 4
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (36, 4)
TEST np.zeros((pad_dim,int(features)) (28, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (6, 4)
TEST np.zeros((pad_dim,int(features)) (58, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 42, 14, 4]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 5
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (42, 4)
TEST np.zeros((pad_dim,int(features)) (22, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (14, 4)
TEST np.zeros((pad_dim,int(features)) (50, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (4, 4)
TEST np.zeros((pad_dim,int(features)) (60, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 44, 6, 2]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 5
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (44, 4)
TEST np.zeros((pad_dim,int(features)) (20, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (6, 4)
TEST np.zeros((pad_dim,int(features)) (58, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (2, 4)
TEST np.zeros((pad_dim,int(features)) (62, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 40, 22, 2]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 5
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (40, 4)
TEST np.zeros((pad_dim,int(features)) (24, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (22, 4)
TEST np.zeros((pad_dim,int(features)) (42, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (2, 4)
TEST np.zeros((pad_dim,int(features)) (62, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 50, 14, 2]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 5
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (50, 4)
TEST np.zeros((pad_dim,int(features)) (14, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (14, 4)
TEST np.zeros((pad_dim,int(features)) (50, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (2, 4)
TEST np.zeros((pad_dim,int(features)) (62, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 34, 8]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 4
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (34, 4)
TEST np.zeros((pad_dim,int(features)) (30, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (8, 4)
100%|█████████████████████████████████████████████████████████████████████| 37/37 [00:23<00:00,  1.57it/s, loss=0.695]
- Train metrics: accuracy: 0.5428 ; loss: 0.6892
--------------------------------------------------------------------------------
subjets per level= [32, 64, 42, 12]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 4
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (42, 4)
TEST np.zeros((pad_dim,int(features)) (22, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (12, 4)
TEST np.zeros((pad_dim,int(features)) (52, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 44, 10, 2]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 5
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (44, 4)
TEST np.zeros((pad_dim,int(features)) (20, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (10, 4)
TEST np.zeros((pad_dim,int(features)) (54, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (2, 4)
TEST np.zeros((pad_dim,int(features)) (62, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 42, 8, 4]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 5
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (42, 4)
TEST np.zeros((pad_dim,int(features)) (22, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (8, 4)
TEST np.zeros((pad_dim,int(features)) (56, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (4, 4)
TEST np.zeros((pad_dim,int(features)) (60, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 42, 12, 2]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 5
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (42, 4)
TEST np.zeros((pad_dim,int(features)) (22, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (12, 4)
TEST np.zeros((pad_dim,int(features)) (52, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (2, 4)
TEST np.zeros((pad_dim,int(features)) (62, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 40, 16, 2]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 5
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (40, 4)
TEST np.zeros((pad_dim,int(features)) (24, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (16, 4)
TEST np.zeros((pad_dim,int(features)) (48, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (2, 4)
TEST np.zeros((pad_dim,int(features)) (62, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 38, 12]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 4
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (38, 4)
TEST np.zeros((pad_dim,int(features)) (26, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (12, 4)
TEST np.zeros((pad_dim,int(features)) (52, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 48, 14, 2]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 5
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (48, 4)
TEST np.zeros((pad_dim,int(features)) (16, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (14, 4)
TEST np.zeros((pad_dim,int(features)) (50, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (2, 4)
TEST np.zeros((pad_dim,int(features)) (62, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 48, 12, 2]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 5
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (48, 4)
TEST np.zeros((pad_dim,int(features)) (16, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (12, 4)
TEST np.zeros((pad_dim,int(features)) (52, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (2, 4)
TEST np.zeros((pad_dim,int(features)) (62, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 48, 4, 2]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 5
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (48, 4)
TEST np.zeros((pad_dim,int(features)) (16, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (4, 4)
TEST np.zeros((pad_dim,int(features)) (60, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (2, 4)
TEST np.zeros((pad_dim,int(features)) (62, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 44, 12]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 4
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (44, 4)
TEST np.zeros((pad_dim,int(features)) (20, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (12, 4)
TEST np.zeros((pad_dim,int(features)) (52, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 40, 16, 2]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 5
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (40, 4)
TEST np.zeros((pad_dim,int(features)) (24, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (16, 4)
TEST np.zeros((pad_dim,int(features)) (48, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (2, 4)
TEST np.zeros((pad_dim,int(features)) (62, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 50, 14, 6, 2]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 6
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (50, 4)
TEST np.zeros((pad_dim,int(features)) (14, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (14, 4)
TEST np.zeros((pad_dim,int(features)) (50, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (6, 4)
TEST np.zeros((pad_dim,int(features)) (58, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (2, 4)
TEST np.zeros((pad_dim,int(features)) (62, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 42, 8]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 4
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (42, 4)
TEST np.zeros((pad_dim,int(features)) (22, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (8, 4)
TEST np.zeros((pad_dim,int(features)) (56, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 44, 10]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 4
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (44, 4)
TEST np.zeros((pad_dim,int(features)) (20, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (10, 4)
TEST np.zeros((pad_dim,int(features)) (54, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 52, 14]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 4
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (52, 4)
TEST np.zeros((pad_dim,int(features)) (12, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (14, 4)
TEST np.zeros((pad_dim,int(features)) (50, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 42, 4, 2]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 5
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (42, 4)
TEST np.zeros((pad_dim,int(features)) (22, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (4, 4)
TEST np.zeros((pad_dim,int(features)) (60, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (2, 4)
TEST np.zeros((pad_dim,int(features)) (62, 4)
train.py:219: RuntimeWarning: divide by zero encountered in true_divide
  inv_fpr = interp(base_tpr, tpr, 1. / fpr)[125]
- Eval metrics : accuracy: 0.4974 ; loss: 0.6953
--------------------------------------------------------------------------------
subjets per level= [32, 64, 48, 14, 2]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 5
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
--------------------------------------------------------------------------------
subjets per level= [32, 64, 44, 6, 2]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 5
--------------------------------------------------------------------------------
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (48, 4)
TEST np.zeros((pad_dim,int(features)) (16, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
TEST np.zeros((pad_dim,int(features)) (32, 4)
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (14, 4)
TEST np.zeros((pad_dim,int(features)) (50, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST np.zeros((pad_dim,int(features)) (0, 4)
TEST contents[i].shape= (2, 4)
TEST np.zeros((pad_dim,int(features)) (62, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (44, 4)
TEST np.zeros((pad_dim,int(features)) (20, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (6, 4)
TEST np.zeros((pad_dim,int(features)) (58, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
--------------------------------------------------------------------------------
max_n_level and len(levels[i])= 64 64
subjets per level= [32, 64, 42, 12]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 4
TEST contents[i].shape= (2, 4)
--------------------------------------------------------------------------------
TEST np.zeros((pad_dim,int(features)) (62, 4)
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (42, 4)
TEST np.zeros((pad_dim,int(features)) (22, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (12, 4)
TEST np.zeros((pad_dim,int(features)) (52, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 44, 10]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 4
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (44, 4)
TEST np.zeros((pad_dim,int(features)) (20, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (10, 4)
TEST np.zeros((pad_dim,int(features)) (54, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 44, 6, 2]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 5
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
subjets per level= [32, 64, 46, 16, 4, 4]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 6
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
TEST np.zeros((pad_dim,int(features)) (32, 4)
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (46, 4)
TEST np.zeros((pad_dim,int(features)) (18, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (16, 4)
TEST np.zeros((pad_dim,int(features)) (48, 4)
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (44, 4)
TEST np.zeros((pad_dim,int(features)) (20, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (4, 4)
TEST np.zeros((pad_dim,int(features)) (60, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (4, 4)
TEST np.zeros((pad_dim,int(features)) (60, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (6, 4)
TEST np.zeros((pad_dim,int(features)) (58, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (2, 4)
TEST np.zeros((pad_dim,int(features)) (62, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 36, 10, 2, 2]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 6
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (36, 4)
TEST np.zeros((pad_dim,int(features)) (28, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (10, 4)
TEST np.zeros((pad_dim,int(features)) (54, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (2, 4)
TEST np.zeros((pad_dim,int(features)) (62, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (2, 4)
TEST np.zeros((pad_dim,int(features)) (62, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 48, 8]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 4
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (48, 4)
TEST np.zeros((pad_dim,int(features)) (16, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (8, 4)
TEST np.zeros((pad_dim,int(features)) (56, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 60, 18]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 4
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (60, 4)
TEST np.zeros((pad_dim,int(features)) (4, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (18, 4)
TEST np.zeros((pad_dim,int(features)) (46, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 50, 12, 2]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 5
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (50, 4)
TEST np.zeros((pad_dim,int(features)) (14, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (12, 4)
TEST np.zeros((pad_dim,int(features)) (52, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (2, 4)
TEST np.zeros((pad_dim,int(features)) (62, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 44, 8]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 4
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (44, 4)
TEST np.zeros((pad_dim,int(features)) (20, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (8, 4)
TEST np.zeros((pad_dim,int(features)) (56, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 50, 10]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 4
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (50, 4)
TEST np.zeros((pad_dim,int(features)) (14, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (10, 4)
TEST np.zeros((pad_dim,int(features)) (54, 4)
Checkpoint Directory exists!
Epoch 3/30

 49%|█████████████████████████████████▌                                   | 18/37 [00:26<00:15,  1.22it/s, loss=0.695]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
subjets per level= [32, 64, 46, 6, 2]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
subjets per level= [32, 64, 46, 14, 2]
Number of levels= 5
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 5
--------------------------------------------------------------------------------
max_n_level= 64
max_n_level= 64
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (46, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
TEST np.zeros((pad_dim,int(features)) (18, 4)
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (6, 4)
TEST np.zeros((pad_dim,int(features)) (58, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
////////////////////////////////////////////////////////////////////////////////////////////////////
TEST contents[i].shape= (2, 4)
max_n_level and len(levels[i])= 64 64
TEST np.zeros((pad_dim,int(features)) (62, 4)
TEST contents[i].shape= (46, 4)
TEST np.zeros((pad_dim,int(features)) (18, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (14, 4)
TEST np.zeros((pad_dim,int(features)) (50, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (2, 4)
TEST np.zeros((pad_dim,int(features)) (62, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 36, 10]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 4
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (36, 4)
TEST np.zeros((pad_dim,int(features)) (28, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (10, 4)
TEST np.zeros((pad_dim,int(features)) (54, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 38, 18, 6, 2]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 6
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (38, 4)
TEST np.zeros((pad_dim,int(features)) (26, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (18, 4)
TEST np.zeros((pad_dim,int(features)) (46, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (6, 4)
TEST np.zeros((pad_dim,int(features)) (58, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (2, 4)
TEST np.zeros((pad_dim,int(features)) (62, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 44, 6]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 4
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
--------------------------------------------------------------------------------
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (44, 4)
TEST np.zeros((pad_dim,int(features)) (20, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (6, 4)
TEST np.zeros((pad_dim,int(features)) (58, 4)
subjets per level= [32, 64, 40, 4, 4]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 5
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (40, 4)
TEST np.zeros((pad_dim,int(features)) (24, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (4, 4)
TEST np.zeros((pad_dim,int(features)) (60, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (4, 4)
TEST np.zeros((pad_dim,int(features)) (60, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 40, 12, 2]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 5
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (40, 4)
TEST np.zeros((pad_dim,int(features)) (24, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (12, 4)
TEST np.zeros((pad_dim,int(features)) (52, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (2, 4)
TEST np.zeros((pad_dim,int(features)) (62, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 36, 10]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 4
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (36, 4)
TEST np.zeros((pad_dim,int(features)) (28, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (10, 4)
TEST np.zeros((pad_dim,int(features)) (54, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 58, 16, 4]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 5
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (58, 4)
TEST np.zeros((pad_dim,int(features)) (6, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (16, 4)
TEST np.zeros((pad_dim,int(features)) (48, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (4, 4)
TEST np.zeros((pad_dim,int(features)) (60, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 46, 16, 4]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 5
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (46, 4)
TEST np.zeros((pad_dim,int(features)) (18, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (16, 4)
TEST np.zeros((pad_dim,int(features)) (48, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (4, 4)
TEST np.zeros((pad_dim,int(features)) (60, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 40, 6]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 4
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (40, 4)
TEST np.zeros((pad_dim,int(features)) (24, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (6, 4)
TEST np.zeros((pad_dim,int(features)) (58, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 36, 4]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 4
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (36, 4)
TEST np.zeros((pad_dim,int(features)) (28, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (4, 4)
TEST np.zeros((pad_dim,int(features)) (60, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 54, 16, 2]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 5
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (54, 4)
TEST np.zeros((pad_dim,int(features)) (10, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (16, 4)
TEST np.zeros((pad_dim,int(features)) (48, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (2, 4)
TEST np.zeros((pad_dim,int(features)) (62, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 40, 8, 4]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 5
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (40, 4)
TEST np.zeros((pad_dim,int(features)) (24, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (8, 4)
TEST np.zeros((pad_dim,int(features)) (56, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (4, 4)
TEST np.zeros((pad_dim,int(features)) (60, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 36, 16]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 4
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (36, 4)
TEST np.zeros((pad_dim,int(features)) (28, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (16, 4)
TEST np.zeros((pad_dim,int(features)) (48, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 36, 6]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 4
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (36, 4)
TEST np.zeros((pad_dim,int(features)) (28, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (6, 4)
TEST np.zeros((pad_dim,int(features)) (58, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 42, 14, 4]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 5
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (42, 4)
TEST np.zeros((pad_dim,int(features)) (22, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (14, 4)
TEST np.zeros((pad_dim,int(features)) (50, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (4, 4)
TEST np.zeros((pad_dim,int(features)) (60, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 44, 6, 2]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 5
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (44, 4)
TEST np.zeros((pad_dim,int(features)) (20, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (6, 4)
TEST np.zeros((pad_dim,int(features)) (58, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (2, 4)
TEST np.zeros((pad_dim,int(features)) (62, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 40, 22, 2]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 5
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (40, 4)
TEST np.zeros((pad_dim,int(features)) (24, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (22, 4)
TEST np.zeros((pad_dim,int(features)) (42, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (2, 4)
TEST np.zeros((pad_dim,int(features)) (62, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 50, 14, 2]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 5
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (50, 4)
TEST np.zeros((pad_dim,int(features)) (14, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (14, 4)
TEST np.zeros((pad_dim,int(features)) (50, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (2, 4)
TEST np.zeros((pad_dim,int(features)) (62, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 34, 8]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 4
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (34, 4)
TEST np.zeros((pad_dim,int(features)) (30, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (8, 4)
TEST np.zeros((pad_dim,int(features)) (56, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 42, 12]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 4
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (42, 4)
TEST np.zeros((pad_dim,int(features)) (22, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (12, 4)
TEST np.zeros((pad_dim,int(features)) (52, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 44, 10, 2]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 5
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (44, 4)
TEST np.zeros((pad_dim,int(features)) (20, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (10, 4)
TEST np.zeros((pad_dim,int(features)) (54, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (2, 4)
TEST np.zeros((pad_dim,int(features)) (62, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 42, 8, 4]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 5
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (42, 4)
TEST np.zeros((pad_dim,int(features)) (22, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (8, 4)
TEST np.zeros((pad_dim,int(features)) (56, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (4, 4)
TEST np.zeros((pad_dim,int(features)) (60, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 42, 12, 2]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 5
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (42, 4)
TEST np.zeros((pad_dim,int(features)) (22, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (12, 4)
TEST np.zeros((pad_dim,int(features)) (52, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (2, 4)
TEST np.zeros((pad_dim,int(features)) (62, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 40, 16, 2]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 5
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (40, 4)
TEST np.zeros((pad_dim,int(features)) (24, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (16, 4)
TEST np.zeros((pad_dim,int(features)) (48, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (2, 4)
TEST np.zeros((pad_dim,int(features)) (62, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 38, 12]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 4
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (38, 4)
TEST np.zeros((pad_dim,int(features)) (26, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (12, 4)
TEST np.zeros((pad_dim,int(features)) (52, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 48, 14, 2]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 5
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (48, 4)
TEST np.zeros((pad_dim,int(features)) (16, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (14, 4)
TEST np.zeros((pad_dim,int(features)) (50, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (2, 4)
TEST np.zeros((pad_dim,int(features)) (62, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 48, 12, 2]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 5
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (48, 4)
TEST np.zeros((pad_dim,int(features)) (16, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (12, 4)
TEST np.zeros((pad_dim,int(features)) (52, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (2, 4)
TEST np.zeros((pad_dim,int(features)) (62, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 48, 4, 2]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 5
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (48, 4)
TEST np.zeros((pad_dim,int(features)) (16, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (4, 4)
TEST np.zeros((pad_dim,int(features)) (60, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (2, 4)
TEST np.zeros((pad_dim,int(features)) (62, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 44, 12]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 4
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (44, 4)
TEST np.zeros((pad_dim,int(features)) (20, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (12, 4)
TEST np.zeros((pad_dim,int(features)) (52, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 40, 16, 2]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 5
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (40, 4)
TEST np.zeros((pad_dim,int(features)) (24, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (16, 4)
TEST np.zeros((pad_dim,int(features)) (48, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (2, 4)
TEST np.zeros((pad_dim,int(features)) (62, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 50, 14, 6, 2]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 6
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (50, 4)
TEST np.zeros((pad_dim,int(features)) (14, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (14, 4)
TEST np.zeros((pad_dim,int(features)) (50, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (6, 4)
TEST np.zeros((pad_dim,int(features)) (58, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (2, 4)
TEST np.zeros((pad_dim,int(features)) (62, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 42, 8]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 4
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (42, 4)
TEST np.zeros((pad_dim,int(features)) (22, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (8, 4)
TEST np.zeros((pad_dim,int(features)) (56, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 44, 10]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 4
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (44, 4)
TEST np.zeros((pad_dim,int(features)) (20, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (10, 4)
TEST np.zeros((pad_dim,int(features)) (54, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 52, 14]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 4
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (52, 4)
TEST np.zeros((pad_dim,int(features)) (12, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (14, 4)
TEST np.zeros((pad_dim,int(features)) (50, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 42, 4, 2]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 5
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (42, 4)
TEST np.zeros((pad_dim,int(features)) (22, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (4, 4)
TEST np.zeros((pad_dim,int(features)) (60, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (2, 4)
100%|█████████████████████████████████████████████████████████████████████| 37/37 [00:26<00:00,  1.39it/s, loss=0.694]
- Train metrics: accuracy: 0.5345 ; loss: 0.6906
--------------------------------------------------------------------------------
subjets per level= [32, 64, 48, 14, 2]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 5
--------------------------------------------------------------------------------
train.py:219: RuntimeWarning: divide by zero encountered in true_divide
  inv_fpr = interp(base_tpr, tpr, 1. / fpr)[125]
- Eval metrics : accuracy: 0.5052 ; loss: 0.6986
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
///////////////////////////////////////////////////////////////////////////////////////////////--------------------------------------------------------------------------------
subjets per level= [32, 64, 44, 6, 2]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 5
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
/////
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (48, 4)
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (16, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (14, 4)
TEST np.zeros((pad_dim,int(features)) (50, 4)
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (2, 4)
TEST np.zeros((pad_dim,int(features)) (62, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (44, 4)
--------------------------------------------------------------------------------
TEST np.zeros((pad_dim,int(features)) (20, 4)
subjets per level= [32, 64, 42, 12]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 4
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
max_n_level= 64
--------------------------------------------------------------------------------
TEST contents[i].shape= (6, 4)
TEST np.zeros((pad_dim,int(features)) (58, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
////////////////////////////////////////////////////////////////////////////////////////////////////
TEST contents[i].shape= (32, 4)
max_n_level and len(levels[i])= 64 64
TEST np.zeros((pad_dim,int(features)) (32, 4)
TEST contents[i].shape= (2, 4)
TEST np.zeros((pad_dim,int(features)) (62, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (42, 4)
TEST np.zeros((pad_dim,int(features)) (22, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (12, 4)
TEST np.zeros((pad_dim,int(features)) (52, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 44, 10]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 4
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
subjets per level= [32, 64, 46, 16, 4, 4]
////////////////////////////////////////////////////////////////////////////////////////////////////
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
max_n_level and len(levels[i])= 64 64
Number of levels= 6
--------------------------------------------------------------------------------
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
max_n_level= 64
--------------------------------------------------------------------------------
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (44, 4)
TEST np.zeros((pad_dim,int(features)) (20, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (10, 4)
TEST np.zeros((pad_dim,int(features)) (54, 4)
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 44, 6, 2]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
Number of levels= 5
TEST np.zeros((pad_dim,int(features)) (0, 4)
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (46, 4)
TEST np.zeros((pad_dim,int(features)) (18, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level= 64
--------------------------------------------------------------------------------
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (16, 4)
TEST np.zeros((pad_dim,int(features)) (48, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST contents[i].shape= (4, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
TEST np.zeros((pad_dim,int(features)) (60, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST contents[i].shape= (4, 4)
TEST np.zeros((pad_dim,int(features)) (60, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (44, 4)
TEST np.zeros((pad_dim,int(features)) (20, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (6, 4)
TEST np.zeros((pad_dim,int(features)) (58, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (2, 4)
TEST np.zeros((pad_dim,int(features)) (62, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 36, 10, 2, 2]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 6
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (36, 4)
TEST np.zeros((pad_dim,int(features)) (28, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (10, 4)
TEST np.zeros((pad_dim,int(features)) (54, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (2, 4)
TEST np.zeros((pad_dim,int(features)) (62, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (2, 4)
TEST np.zeros((pad_dim,int(features)) (62, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 48, 8]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 4
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (48, 4)
TEST np.zeros((pad_dim,int(features)) (16, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (8, 4)
TEST np.zeros((pad_dim,int(features)) (56, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 60, 18]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 4
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (60, 4)
TEST np.zeros((pad_dim,int(features)) (4, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (18, 4)
TEST np.zeros((pad_dim,int(features)) (46, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 50, 12, 2]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 5
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (50, 4)
TEST np.zeros((pad_dim,int(features)) (14, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (12, 4)
TEST np.zeros((pad_dim,int(features)) (52, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (2, 4)
TEST np.zeros((pad_dim,int(features)) (62, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 44, 8]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 4
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (44, 4)
TEST np.zeros((pad_dim,int(features)) (20, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (8, 4)
TEST np.zeros((pad_dim,int(features)) (56, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 50, 10]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 4
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (50, 4)
TEST np.zeros((pad_dim,int(features)) (14, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (10, 4)
TEST np.zeros((pad_dim,int(features)) (54, 4)
Checkpoint Directory exists!
- Found new best bg rejection = 3.9000000000000004
Epoch 4/30
  0%|                                                                                          | 0/37 [00:00<?, ?it/s]
--------------------------------------------------------------------------------
subjets per level= [32, 64, 46, 14, 2]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 5
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (46, 4)
TEST np.zeros((pad_dim,int(features)) (18, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (14, 4)
TEST np.zeros((pad_dim,int(features)) (50, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (2, 4)
TEST np.zeros((pad_dim,int(features)) (62, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 46, 6, 2]
-----------------------------------------------------------------------------------------------------
subjets per level= [32, 64, 36, 10]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 4
--------------------------------------------------------------------------------
-----------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 5
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST np.zeros((pad_dim,int(features)) (32, 4)
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
TEST np.zeros((pad_dim,int(features)) (0, 4)
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (46, 4)
TEST np.zeros((pad_dim,int(features)) (18, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
////////////////////////////////////////////////////////////////////////////////////////////////////
TEST contents[i].shape= (36, 4)
max_n_level and len(levels[i])= 64 64
TEST np.zeros((pad_dim,int(features)) (28, 4)
TEST contents[i].shape= (6, 4)
TEST np.zeros((pad_dim,int(features)) (58, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
////////////////////////////////////////////////////////////////////////////////////////////////////
TEST contents[i].shape= (10, 4)
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (2, 4)
TEST np.zeros((pad_dim,int(features)) (62, 4)
TEST np.zeros((pad_dim,int(features)) (54, 4)
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
subjets per level= [32, 64, 44, 6]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 4
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
subjets per level= [32, 64, 38, 18, 6, 2]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 6
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (44, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
subjets per level= [32, 64, 40, 4, 4]
TEST np.zeros((pad_dim,int(features)) (20, 4)
TEST contents[i].shape= (64, 4)
--------------------------------------------------------------------------------
TEST np.zeros((pad_dim,int(features)) (0, 4)
--------------------------------------------------------------------------------
Number of levels= 5
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (6, 4)
max_n_level= 64
--------------------------------------------------------------------------------
TEST contents[i].shape= (38, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
TEST np.zeros((pad_dim,int(features)) (58, 4)
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (26, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (18, 4)
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (46, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (6, 4)
TEST np.zeros((pad_dim,int(features)) (58, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (40, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (2, 4)
TEST np.zeros((pad_dim,int(features)) (24, 4)
TEST np.zeros((pad_dim,int(features)) (62, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (4, 4)
TEST np.zeros((pad_dim,int(features)) (60, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (4, 4)
TEST np.zeros((pad_dim,int(features)) (60, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 40, 12, 2]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 5
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (40, 4)
TEST np.zeros((pad_dim,int(features)) (24, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (12, 4)
TEST np.zeros((pad_dim,int(features)) (52, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (2, 4)
TEST np.zeros((pad_dim,int(features)) (62, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 36, 10]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 4
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (36, 4)
TEST np.zeros((pad_dim,int(features)) (28, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (10, 4)
TEST np.zeros((pad_dim,int(features)) (54, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 58, 16, 4]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 5
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (58, 4)
TEST np.zeros((pad_dim,int(features)) (6, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (16, 4)
TEST np.zeros((pad_dim,int(features)) (48, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (4, 4)
TEST np.zeros((pad_dim,int(features)) (60, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 46, 16, 4]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 5
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (46, 4)
TEST np.zeros((pad_dim,int(features)) (18, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (16, 4)
TEST np.zeros((pad_dim,int(features)) (48, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (4, 4)
TEST np.zeros((pad_dim,int(features)) (60, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 40, 6]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 4
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (40, 4)
TEST np.zeros((pad_dim,int(features)) (24, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (6, 4)
TEST np.zeros((pad_dim,int(features)) (58, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 36, 4]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 4
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (36, 4)
TEST np.zeros((pad_dim,int(features)) (28, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (4, 4)
TEST np.zeros((pad_dim,int(features)) (60, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 54, 16, 2]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 5
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (54, 4)
TEST np.zeros((pad_dim,int(features)) (10, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (16, 4)
TEST np.zeros((pad_dim,int(features)) (48, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (2, 4)
TEST np.zeros((pad_dim,int(features)) (62, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 40, 8, 4]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 5
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (40, 4)
TEST np.zeros((pad_dim,int(features)) (24, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (8, 4)
TEST np.zeros((pad_dim,int(features)) (56, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (4, 4)
TEST np.zeros((pad_dim,int(features)) (60, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 36, 16]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 4
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (36, 4)
TEST np.zeros((pad_dim,int(features)) (28, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (16, 4)
TEST np.zeros((pad_dim,int(features)) (48, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 36, 6]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 4
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (36, 4)
TEST np.zeros((pad_dim,int(features)) (28, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (6, 4)
TEST np.zeros((pad_dim,int(features)) (58, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 42, 14, 4]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 5
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (42, 4)
TEST np.zeros((pad_dim,int(features)) (22, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (14, 4)
TEST np.zeros((pad_dim,int(features)) (50, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (4, 4)
TEST np.zeros((pad_dim,int(features)) (60, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 44, 6, 2]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 5
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (44, 4)
TEST np.zeros((pad_dim,int(features)) (20, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (6, 4)
TEST np.zeros((pad_dim,int(features)) (58, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (2, 4)
TEST np.zeros((pad_dim,int(features)) (62, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 40, 22, 2]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 5
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (40, 4)
TEST np.zeros((pad_dim,int(features)) (24, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (22, 4)
TEST np.zeros((pad_dim,int(features)) (42, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (2, 4)
TEST np.zeros((pad_dim,int(features)) (62, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 50, 14, 2]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 5
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (50, 4)
TEST np.zeros((pad_dim,int(features)) (14, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (14, 4)
TEST np.zeros((pad_dim,int(features)) (50, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (2, 4)
TEST np.zeros((pad_dim,int(features)) (62, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 34, 8]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 4
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (34, 4)
TEST np.zeros((pad_dim,int(features)) (30, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (8, 4)
TEST np.zeros((pad_dim,int(features)) (56, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 42, 12]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 4
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (42, 4)
TEST np.zeros((pad_dim,int(features)) (22, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (12, 4)
TEST np.zeros((pad_dim,int(features)) (52, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 44, 10, 2]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 5
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (44, 4)
TEST np.zeros((pad_dim,int(features)) (20, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (10, 4)
TEST np.zeros((pad_dim,int(features)) (54, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (2, 4)
TEST np.zeros((pad_dim,int(features)) (62, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 42, 8, 4]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 5
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (42, 4)
TEST np.zeros((pad_dim,int(features)) (22, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (8, 4)
TEST np.zeros((pad_dim,int(features)) (56, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (4, 4)
TEST np.zeros((pad_dim,int(features)) (60, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 42, 12, 2]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 5
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (42, 4)
TEST np.zeros((pad_dim,int(features)) (22, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (12, 4)
TEST np.zeros((pad_dim,int(features)) (52, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (2, 4)
TEST np.zeros((pad_dim,int(features)) (62, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 40, 16, 2]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 5
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (40, 4)
TEST np.zeros((pad_dim,int(features)) (24, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (16, 4)
TEST np.zeros((pad_dim,int(features)) (48, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (2, 4)
TEST np.zeros((pad_dim,int(features)) (62, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 38, 12]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 4
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (38, 4)
TEST np.zeros((pad_dim,int(features)) (26, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (12, 4)
TEST np.zeros((pad_dim,int(features)) (52, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 48, 14, 2]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 5
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (48, 4)
TEST np.zeros((pad_dim,int(features)) (16, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (14, 4)
TEST np.zeros((pad_dim,int(features)) (50, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (2, 4)
TEST np.zeros((pad_dim,int(features)) (62, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 48, 12, 2]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 5
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (48, 4)
TEST np.zeros((pad_dim,int(features)) (16, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (12, 4)
TEST np.zeros((pad_dim,int(features)) (52, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (2, 4)
TEST np.zeros((pad_dim,int(features)) (62, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 48, 4, 2]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 5
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (48, 4)
TEST np.zeros((pad_dim,int(features)) (16, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (4, 4)
TEST np.zeros((pad_dim,int(features)) (60, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (2, 4)
TEST np.zeros((pad_dim,int(features)) (62, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 44, 12]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 4
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (44, 4)
TEST np.zeros((pad_dim,int(features)) (20, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (12, 4)
TEST np.zeros((pad_dim,int(features)) (52, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 40, 16, 2]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 5
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (40, 4)
TEST np.zeros((pad_dim,int(features)) (24, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (16, 4)
TEST np.zeros((pad_dim,int(features)) (48, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (2, 4)
TEST np.zeros((pad_dim,int(features)) (62, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 50, 14, 6, 2]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 6
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (50, 4)
TEST np.zeros((pad_dim,int(features)) (14, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (14, 4)
TEST np.zeros((pad_dim,int(features)) (50, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (6, 4)
TEST np.zeros((pad_dim,int(features)) (58, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (2, 4)
TEST np.zeros((pad_dim,int(features)) (62, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 42, 8]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 4
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (42, 4)
TEST np.zeros((pad_dim,int(features)) (22, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (8, 4)
TEST np.zeros((pad_dim,int(features)) (56, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 44, 10]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 4
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (44, 4)
TEST np.zeros((pad_dim,int(features)) (20, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (10, 4)
TEST np.zeros((pad_dim,int(features)) (54, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 52, 14]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 4
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (52, 4)
TEST np.zeros((pad_dim,int(features)) (12, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (14, 4)
TEST np.zeros((pad_dim,int(features)) (50, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 42, 4, 2]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 5
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (42, 4)
TEST np.zeros((pad_dim,int(features)) (22, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (4, 4)
TEST np.zeros((pad_dim,int(features)) (60, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (2, 4)
100%|█████████████████████████████████████████████████████████████████████| 37/37 [00:18<00:00,  1.99it/s, loss=0.691]
- Train metrics: accuracy: 0.5740 ; loss: 0.6856
--------------------------------------------------------------------------------
subjets per level= [32, 64, 48, 14, 2]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 5
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (48, 4)
TEST np.zeros((pad_dim,int(features)) (16, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (14, 4)
--------------------------------------------------------------------------------
TEST np.zeros((pad_dim,int(features)) (50, 4)
subjets per level= [32, 64, 44, 6, 2]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 5
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (2, 4)
--------------------------------------------------------------------------------
TEST np.zeros((pad_dim,int(features)) (62, 4)
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (44, 4)
TEST np.zeros((pad_dim,int(features)) (20, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (6, 4)
TEST np.zeros((pad_dim,int(features)) (58, 4)
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
subjets per level= [32, 64, 42, 12]
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (2, 4)
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 4
TEST np.zeros((pad_dim,int(features)) (62, 4)
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (42, 4)
TEST np.zeros((pad_dim,int(features)) (22, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (12, 4)
TEST np.zeros((pad_dim,int(features)) (52, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 44, 10]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 4
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (44, 4)
TEST np.zeros((pad_dim,int(features)) (20, 4)
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
subjets per level= [32, 64, 44, 6, 2]
max_n_level and len(levels[i])= 64 64
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
TEST contents[i].shape= (10, 4)
Number of levels= 5
--------------------------------------------------------------------------------
TEST np.zeros((pad_dim,int(features)) (54, 4)
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 46, 16, 4, 4]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 6
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (44, 4)
TEST np.zeros((pad_dim,int(features)) (20, 4)
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (46, 4)
TEST np.zeros((pad_dim,int(features)) (18, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (16, 4)
TEST np.zeros((pad_dim,int(features)) (48, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (4, 4)
TEST np.zeros((pad_dim,int(features)) (60, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (4, 4)
TEST np.zeros((pad_dim,int(features)) (60, 4)
////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (6, 4)
TEST np.zeros((pad_dim,int(features)) (58, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (2, 4)
TEST np.zeros((pad_dim,int(features)) (62, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 36, 10, 2, 2]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 6
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (36, 4)
TEST np.zeros((pad_dim,int(features)) (28, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (10, 4)
TEST np.zeros((pad_dim,int(features)) (54, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (2, 4)
TEST np.zeros((pad_dim,int(features)) (62, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (2, 4)
TEST np.zeros((pad_dim,int(features)) (62, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 48, 8]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 4
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (48, 4)
TEST np.zeros((pad_dim,int(features)) (16, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (8, 4)
TEST np.zeros((pad_dim,int(features)) (56, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 60, 18]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 4
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (60, 4)
TEST np.zeros((pad_dim,int(features)) (4, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (18, 4)
TEST np.zeros((pad_dim,int(features)) (46, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 50, 12, 2]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 5
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (50, 4)
TEST np.zeros((pad_dim,int(features)) (14, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (12, 4)
TEST np.zeros((pad_dim,int(features)) (52, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (2, 4)
TEST np.zeros((pad_dim,int(features)) (62, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 44, 8]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 4
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (44, 4)
TEST np.zeros((pad_dim,int(features)) (20, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (8, 4)
TEST np.zeros((pad_dim,int(features)) (56, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 50, 10]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 4
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (50, 4)
TEST np.zeros((pad_dim,int(features)) (14, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (10, 4)
TEST np.zeros((pad_dim,int(features)) (54, 4)
Checkpoint Directory exists!
train.py:219: RuntimeWarning: divide by zero encountered in true_divide
  inv_fpr = interp(base_tpr, tpr, 1. / fpr)[125]
- Eval metrics : accuracy: 0.5078 ; loss: 0.6953
Epoch 5/30
  0%|                                                                                          | 0/37 [00:00<?, ?it/s]
--------------------------------------------------------------------------------
subjets per level= [32, 64, 46, 6, 2]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 5
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
subjets per level= [32, 64, 36, 10]
--------------------------------------------------------------------------------
TEST contents[i].shape= (64, 4)
--------------------------------------------------------------------------------
Number of levels= 4
TEST np.zeros((pad_dim,int(features)) (0, 4)
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level= 64
--------------------------------------------------------------------------------
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (46, 4)
TEST np.zeros((pad_dim,int(features)) (18, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (6, 4)
TEST np.zeros((pad_dim,int(features)) (58, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (2, 4)
TEST np.zeros((pad_dim,int(features)) (62, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (36, 4)
TEST np.zeros((pad_dim,int(features)) (28, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (10, 4)
TEST np.zeros((pad_dim,int(features)) (54, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 46, 14, 2]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 5
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (46, 4)
TEST np.zeros((pad_dim,int(features)) (18, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (14, 4)
TEST np.zeros((pad_dim,int(features)) (50, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (2, 4)
TEST np.zeros((pad_dim,int(features)) (62, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 38, 18, 6, 2]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 6
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////--------------------------------------------------------------------------------
subjets per level= [32, 64, 40, 4, 4]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 5
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (40, 4)
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (38, 4)
TEST np.zeros((pad_dim,int(features)) (24, 4)
TEST np.zeros((pad_dim,int(features)) (26, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (4, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
TEST np.zeros((pad_dim,int(features)) (60, 4)
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (18, 4)
TEST np.zeros((pad_dim,int(features)) (46, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
////////////////////////////////////////////////////////////////////////////////////////////////////
TEST contents[i].shape= (4, 4)
max_n_level and len(levels[i])= 64 64
--------------------------------------------------------------------------------
subjets per level= [32, 64, 44, 6]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 4
--------------------------------------------------------------------------------
TEST np.zeros((pad_dim,int(features)) (60, 4)
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (44, 4)
TEST np.zeros((pad_dim,int(features)) (20, 4)
TEST contents[i].shape= (6, 4)
TEST np.zeros((pad_dim,int(features)) (58, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (6, 4)
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (2, 4)
TEST np.zeros((pad_dim,int(features)) (58, 4)
TEST np.zeros((pad_dim,int(features)) (62, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 40, 12, 2]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 5
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (40, 4)
TEST np.zeros((pad_dim,int(features)) (24, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (12, 4)
TEST np.zeros((pad_dim,int(features)) (52, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (2, 4)
TEST np.zeros((pad_dim,int(features)) (62, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 36, 10]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 4
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////

 59%|█████████████████████████████████████████                            | 22/37 [00:20<00:08,  1.85it/s, loss=0.691]
TEST np.zeros((pad_dim,int(features)) (28, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (10, 4)
TEST np.zeros((pad_dim,int(features)) (54, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 58, 16, 4]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 5
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (58, 4)
TEST np.zeros((pad_dim,int(features)) (6, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (16, 4)
TEST np.zeros((pad_dim,int(features)) (48, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (4, 4)
TEST np.zeros((pad_dim,int(features)) (60, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 46, 16, 4]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 5
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (46, 4)
TEST np.zeros((pad_dim,int(features)) (18, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (16, 4)
TEST np.zeros((pad_dim,int(features)) (48, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (4, 4)
TEST np.zeros((pad_dim,int(features)) (60, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 40, 6]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 4
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (40, 4)
TEST np.zeros((pad_dim,int(features)) (24, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (6, 4)
TEST np.zeros((pad_dim,int(features)) (58, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 36, 4]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 4
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (36, 4)
TEST np.zeros((pad_dim,int(features)) (28, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (4, 4)
TEST np.zeros((pad_dim,int(features)) (60, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 54, 16, 2]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 5
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (54, 4)
TEST np.zeros((pad_dim,int(features)) (10, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (16, 4)
TEST np.zeros((pad_dim,int(features)) (48, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (2, 4)
TEST np.zeros((pad_dim,int(features)) (62, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 40, 8, 4]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 5
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (40, 4)
TEST np.zeros((pad_dim,int(features)) (24, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (8, 4)
TEST np.zeros((pad_dim,int(features)) (56, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (4, 4)
TEST np.zeros((pad_dim,int(features)) (60, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 36, 16]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 4
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (36, 4)
TEST np.zeros((pad_dim,int(features)) (28, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (16, 4)
TEST np.zeros((pad_dim,int(features)) (48, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 36, 6]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 4
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (36, 4)
TEST np.zeros((pad_dim,int(features)) (28, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (6, 4)
TEST np.zeros((pad_dim,int(features)) (58, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 42, 14, 4]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 5
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (42, 4)
TEST np.zeros((pad_dim,int(features)) (22, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (14, 4)
TEST np.zeros((pad_dim,int(features)) (50, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (4, 4)
TEST np.zeros((pad_dim,int(features)) (60, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 44, 6, 2]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 5
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (44, 4)
TEST np.zeros((pad_dim,int(features)) (20, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (6, 4)
TEST np.zeros((pad_dim,int(features)) (58, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (2, 4)
TEST np.zeros((pad_dim,int(features)) (62, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 40, 22, 2]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 5
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (40, 4)
TEST np.zeros((pad_dim,int(features)) (24, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (22, 4)
TEST np.zeros((pad_dim,int(features)) (42, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (2, 4)
TEST np.zeros((pad_dim,int(features)) (62, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 50, 14, 2]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 5
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (50, 4)
TEST np.zeros((pad_dim,int(features)) (14, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (14, 4)
TEST np.zeros((pad_dim,int(features)) (50, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (2, 4)
TEST np.zeros((pad_dim,int(features)) (62, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 34, 8]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 4
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (34, 4)
TEST np.zeros((pad_dim,int(features)) (30, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (8, 4)
TEST np.zeros((pad_dim,int(features)) (56, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 42, 12]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 4
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (42, 4)
TEST np.zeros((pad_dim,int(features)) (22, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (12, 4)
TEST np.zeros((pad_dim,int(features)) (52, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 44, 10, 2]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 5
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (44, 4)
TEST np.zeros((pad_dim,int(features)) (20, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (10, 4)
TEST np.zeros((pad_dim,int(features)) (54, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (2, 4)
TEST np.zeros((pad_dim,int(features)) (62, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 42, 8, 4]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 5
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (42, 4)
TEST np.zeros((pad_dim,int(features)) (22, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (8, 4)
TEST np.zeros((pad_dim,int(features)) (56, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (4, 4)
TEST np.zeros((pad_dim,int(features)) (60, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 42, 12, 2]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 5
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (42, 4)
TEST np.zeros((pad_dim,int(features)) (22, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (12, 4)
TEST np.zeros((pad_dim,int(features)) (52, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (2, 4)
TEST np.zeros((pad_dim,int(features)) (62, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 40, 16, 2]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 5
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (40, 4)
TEST np.zeros((pad_dim,int(features)) (24, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (16, 4)
TEST np.zeros((pad_dim,int(features)) (48, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (2, 4)
TEST np.zeros((pad_dim,int(features)) (62, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 38, 12]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 4
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (38, 4)
TEST np.zeros((pad_dim,int(features)) (26, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (12, 4)
TEST np.zeros((pad_dim,int(features)) (52, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 48, 14, 2]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 5
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (48, 4)
TEST np.zeros((pad_dim,int(features)) (16, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (14, 4)
TEST np.zeros((pad_dim,int(features)) (50, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (2, 4)
TEST np.zeros((pad_dim,int(features)) (62, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 48, 12, 2]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 5
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (48, 4)
TEST np.zeros((pad_dim,int(features)) (16, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (12, 4)
TEST np.zeros((pad_dim,int(features)) (52, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (2, 4)
TEST np.zeros((pad_dim,int(features)) (62, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 48, 4, 2]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 5
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (48, 4)
TEST np.zeros((pad_dim,int(features)) (16, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (4, 4)
TEST np.zeros((pad_dim,int(features)) (60, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (2, 4)
TEST np.zeros((pad_dim,int(features)) (62, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 44, 12]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 4
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (44, 4)
TEST np.zeros((pad_dim,int(features)) (20, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (12, 4)
TEST np.zeros((pad_dim,int(features)) (52, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 40, 16, 2]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 5
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (40, 4)
TEST np.zeros((pad_dim,int(features)) (24, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (16, 4)
TEST np.zeros((pad_dim,int(features)) (48, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (2, 4)
TEST np.zeros((pad_dim,int(features)) (62, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 50, 14, 6, 2]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 6
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (50, 4)
TEST np.zeros((pad_dim,int(features)) (14, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (14, 4)
TEST np.zeros((pad_dim,int(features)) (50, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (6, 4)
TEST np.zeros((pad_dim,int(features)) (58, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (2, 4)
TEST np.zeros((pad_dim,int(features)) (62, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 42, 8]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 4
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (42, 4)
TEST np.zeros((pad_dim,int(features)) (22, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (8, 4)
TEST np.zeros((pad_dim,int(features)) (56, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 44, 10]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 4
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (44, 4)
TEST np.zeros((pad_dim,int(features)) (20, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (10, 4)
TEST np.zeros((pad_dim,int(features)) (54, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 52, 14]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 4
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (52, 4)
TEST np.zeros((pad_dim,int(features)) (12, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (14, 4)
TEST np.zeros((pad_dim,int(features)) (50, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 42, 4, 2]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 5
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (42, 4)
TEST np.zeros((pad_dim,int(features)) (22, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (4, 4)
TEST np.zeros((pad_dim,int(features)) (60, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (2, 4)
100%|█████████████████████████████████████████████████████████████████████| 37/37 [00:20<00:00,  1.78it/s, loss=0.690]
- Train metrics: accuracy: 0.5822 ; loss: 0.6860
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
subjets per level= [32, 64, 48, 14, 2]
subjets per level= [32, 64, 44, 6, 2]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 5
Number of levels= 5
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
max_n_level= 64
max_n_level= 64
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
////////////////////////////////////////////////////////////////////////////////////////////////////
TEST contents[i].shape= (64, 4)
max_n_level and len(levels[i])= 64 64
TEST np.zeros((pad_dim,int(features)) (0, 4)
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (44, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
TEST np.zeros((pad_dim,int(features)) (20, 4)
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (48, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
TEST np.zeros((pad_dim,int(features)) (16, 4)
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (6, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
TEST np.zeros((pad_dim,int(features)) (58, 4)
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (14, 4)
TEST np.zeros((pad_dim,int(features)) (50, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (2, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
TEST np.zeros((pad_dim,int(features)) (62, 4)
max_n_level and len(levels[i])= 64 64
--------------------------------------------------------------------------------
TEST contents[i].shape= (2, 4)
subjets per level= [32, 64, 42, 12]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
TEST np.zeros((pad_dim,int(features)) (62, 4)
Number of levels= 4
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (42, 4)
TEST np.zeros((pad_dim,int(features)) (22, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (12, 4)
TEST np.zeros((pad_dim,int(features)) (52, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 44, 6, 2]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 5
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (44, 4)
TEST np.zeros((pad_dim,int(features)) (20, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 46, 16, 4, 4]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 6
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
subjets per level= [32, 64, 44, 10]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
Number of levels= 4
--------------------------------------------------------------------------------
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (6, 4)
max_n_level= 64
TEST np.zeros((pad_dim,int(features)) (58, 4)
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (2, 4)
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (62, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (46, 4)
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (18, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (16, 4)
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (48, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (4, 4)
train.py:219: RuntimeWarning: divide by zero encountered in true_divide
  inv_fpr = interp(base_tpr, tpr, 1. / fpr)[125]
- Eval metrics : accuracy: 0.5208 ; loss: 0.6961
TEST contents[i].shape= (44, 4)
TEST np.zeros((pad_dim,int(features)) (20, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
////////////////////////////////////////////////////////////////////////////////////////////////////
TEST contents[i].shape= (4, 4)
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (10, 4)
TEST np.zeros((pad_dim,int(features)) (60, 4)
TEST np.zeros((pad_dim,int(features)) (54, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 36, 10, 2, 2]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 6
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (36, 4)
TEST np.zeros((pad_dim,int(features)) (28, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (10, 4)
TEST np.zeros((pad_dim,int(features)) (54, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (2, 4)
TEST np.zeros((pad_dim,int(features)) (62, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (2, 4)
TEST np.zeros((pad_dim,int(features)) (62, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 48, 8]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 4
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (48, 4)
TEST np.zeros((pad_dim,int(features)) (16, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (8, 4)
TEST np.zeros((pad_dim,int(features)) (56, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 60, 18]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 4
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (60, 4)
TEST np.zeros((pad_dim,int(features)) (4, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (18, 4)
TEST np.zeros((pad_dim,int(features)) (46, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 50, 12, 2]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 5
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (50, 4)
TEST np.zeros((pad_dim,int(features)) (14, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (12, 4)
TEST np.zeros((pad_dim,int(features)) (52, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (2, 4)
TEST np.zeros((pad_dim,int(features)) (62, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 44, 8]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 4
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (44, 4)
TEST np.zeros((pad_dim,int(features)) (20, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (8, 4)
TEST np.zeros((pad_dim,int(features)) (56, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 50, 10]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 4
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (50, 4)
TEST np.zeros((pad_dim,int(features)) (14, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (10, 4)
TEST np.zeros((pad_dim,int(features)) (54, 4)
Checkpoint Directory exists!
Epoch 6/30
100%|█████████████████████████████████████████████████████████████████████| 37/37 [00:19<00:00,  1.93it/s, loss=0.689]
- Train metrics: accuracy: 0.5822 ; loss: 0.6847
--------------------------------------------------------------------------------
subjets per level= [32, 64, 36, 10]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 4
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
//////////////////////////////////////////////////////////////////////////////////////////////////--------------------------------------------------------------------------------
subjets per level= [32, 64, 46, 14, 2]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 5
--------------------------------------------------------------------------------
//
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (36, 4)
TEST np.zeros((pad_dim,int(features)) (28, 4)
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (10, 4)
TEST contents[i].shape= (32, 4)
--------------------------------------------------------------------------------
TEST np.zeros((pad_dim,int(features)) (54, 4)
subjets per level= [32, 64, 46, 6, 2]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
TEST np.zeros((pad_dim,int(features)) (32, 4)
Number of levels= 5
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level= 64
--------------------------------------------------------------------------------
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (46, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
TEST np.zeros((pad_dim,int(features)) (18, 4)
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (46, 4)
max_n_level and len(levels[i])= 64 64
TEST np.zeros((pad_dim,int(features)) (18, 4)
TEST contents[i].shape= (14, 4)
TEST np.zeros((pad_dim,int(features)) (50, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (2, 4)
TEST np.zeros((pad_dim,int(features)) (62, 4)
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (6, 4)
TEST np.zeros((pad_dim,int(features)) (58, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (2, 4)
TEST np.zeros((pad_dim,int(features)) (62, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 44, 6]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 4
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
--------------------------------------------------------------------------------
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (44, 4)
TEST np.zeros((pad_dim,int(features)) (20, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (6, 4)
TEST np.zeros((pad_dim,int(features)) (58, 4)
subjets per level= [32, 64, 38, 18, 6, 2]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 6
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
subjets per level= [32, 64, 40, 4, 4]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 5
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
////////////////////////////////////////////////////////////////////////////////////////////////////
TEST contents[i].shape= (64, 4)
max_n_level and len(levels[i])= 64 64
TEST np.zeros((pad_dim,int(features)) (0, 4)
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (38, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (40, 4)
TEST np.zeros((pad_dim,int(features)) (26, 4)
TEST np.zeros((pad_dim,int(features)) (24, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (4, 4)
TEST contents[i].shape= (18, 4)
TEST np.zeros((pad_dim,int(features)) (60, 4)
TEST np.zeros((pad_dim,int(features)) (46, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
////////////////////////////////////////////////////////////////////////////////////////////////////
TEST contents[i].shape= (4, 4)
max_n_level and len(levels[i])= 64 64
TEST np.zeros((pad_dim,int(features)) (60, 4)
TEST contents[i].shape= (6, 4)
TEST np.zeros((pad_dim,int(features)) (58, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (2, 4)
TEST np.zeros((pad_dim,int(features)) (62, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 40, 12, 2]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 5
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (40, 4)
TEST np.zeros((pad_dim,int(features)) (24, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (12, 4)
TEST np.zeros((pad_dim,int(features)) (52, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (2, 4)
TEST np.zeros((pad_dim,int(features)) (62, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 36, 10]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 4
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (36, 4)
TEST np.zeros((pad_dim,int(features)) (28, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (10, 4)
TEST np.zeros((pad_dim,int(features)) (54, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 58, 16, 4]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 5
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (58, 4)
TEST np.zeros((pad_dim,int(features)) (6, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (16, 4)
TEST np.zeros((pad_dim,int(features)) (48, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (4, 4)
TEST np.zeros((pad_dim,int(features)) (60, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 46, 16, 4]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 5
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (46, 4)
TEST np.zeros((pad_dim,int(features)) (18, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (16, 4)
TEST np.zeros((pad_dim,int(features)) (48, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (4, 4)
TEST np.zeros((pad_dim,int(features)) (60, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 40, 6]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 4
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (40, 4)
TEST np.zeros((pad_dim,int(features)) (24, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (6, 4)
TEST np.zeros((pad_dim,int(features)) (58, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 36, 4]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 4
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (36, 4)
TEST np.zeros((pad_dim,int(features)) (28, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (4, 4)
TEST np.zeros((pad_dim,int(features)) (60, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 54, 16, 2]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 5
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (54, 4)
TEST np.zeros((pad_dim,int(features)) (10, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (16, 4)
TEST np.zeros((pad_dim,int(features)) (48, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (2, 4)
TEST np.zeros((pad_dim,int(features)) (62, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 40, 8, 4]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 5
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (40, 4)
TEST np.zeros((pad_dim,int(features)) (24, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (8, 4)
TEST np.zeros((pad_dim,int(features)) (56, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (4, 4)
TEST np.zeros((pad_dim,int(features)) (60, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 36, 16]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 4
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (36, 4)
TEST np.zeros((pad_dim,int(features)) (28, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (16, 4)
TEST np.zeros((pad_dim,int(features)) (48, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 36, 6]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 4
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (36, 4)
TEST np.zeros((pad_dim,int(features)) (28, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (6, 4)
TEST np.zeros((pad_dim,int(features)) (58, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 42, 14, 4]
train.py:219: RuntimeWarning: divide by zero encountered in true_divide
  inv_fpr = interp(base_tpr, tpr, 1. / fpr)[125]
- Eval metrics : accuracy: 0.5130 ; loss: 0.6969
Epoch 7/30
  0%|                                                                                          | 0/37 [00:00<?, ?it/s]
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (4, 4)
TEST np.zeros((pad_dim,int(features)) (60, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 44, 6, 2]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 5
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (44, 4)
TEST np.zeros((pad_dim,int(features)) (20, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (6, 4)
TEST np.zeros((pad_dim,int(features)) (58, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (2, 4)
TEST np.zeros((pad_dim,int(features)) (62, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 40, 22, 2]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 5
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (40, 4)
TEST np.zeros((pad_dim,int(features)) (24, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (22, 4)
TEST np.zeros((pad_dim,int(features)) (42, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (2, 4)
TEST np.zeros((pad_dim,int(features)) (62, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 50, 14, 2]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 5
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (50, 4)
TEST np.zeros((pad_dim,int(features)) (14, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (14, 4)
TEST np.zeros((pad_dim,int(features)) (50, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (2, 4)
TEST np.zeros((pad_dim,int(features)) (62, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 34, 8]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 4
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (34, 4)
TEST np.zeros((pad_dim,int(features)) (30, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (8, 4)
TEST np.zeros((pad_dim,int(features)) (56, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 42, 12]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 4
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (42, 4)
TEST np.zeros((pad_dim,int(features)) (22, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (12, 4)
TEST np.zeros((pad_dim,int(features)) (52, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 44, 10, 2]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 5
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (44, 4)
TEST np.zeros((pad_dim,int(features)) (20, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (10, 4)
TEST np.zeros((pad_dim,int(features)) (54, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (2, 4)
TEST np.zeros((pad_dim,int(features)) (62, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 42, 8, 4]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 5
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (42, 4)
TEST np.zeros((pad_dim,int(features)) (22, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (8, 4)
TEST np.zeros((pad_dim,int(features)) (56, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (4, 4)
TEST np.zeros((pad_dim,int(features)) (60, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 42, 12, 2]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 5
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (42, 4)
TEST np.zeros((pad_dim,int(features)) (22, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (12, 4)
TEST np.zeros((pad_dim,int(features)) (52, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (2, 4)
TEST np.zeros((pad_dim,int(features)) (62, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 40, 16, 2]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 5
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (40, 4)
TEST np.zeros((pad_dim,int(features)) (24, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (16, 4)
TEST np.zeros((pad_dim,int(features)) (48, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (2, 4)
TEST np.zeros((pad_dim,int(features)) (62, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 38, 12]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 4
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (38, 4)
TEST np.zeros((pad_dim,int(features)) (26, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (12, 4)
TEST np.zeros((pad_dim,int(features)) (52, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 48, 14, 2]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 5
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (48, 4)
TEST np.zeros((pad_dim,int(features)) (16, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (14, 4)
TEST np.zeros((pad_dim,int(features)) (50, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (2, 4)
TEST np.zeros((pad_dim,int(features)) (62, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 48, 12, 2]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 5
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (48, 4)
TEST np.zeros((pad_dim,int(features)) (16, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (12, 4)
TEST np.zeros((pad_dim,int(features)) (52, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (2, 4)
TEST np.zeros((pad_dim,int(features)) (62, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 48, 4, 2]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 5
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (48, 4)
TEST np.zeros((pad_dim,int(features)) (16, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (4, 4)
TEST np.zeros((pad_dim,int(features)) (60, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (2, 4)
TEST np.zeros((pad_dim,int(features)) (62, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 44, 12]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 4
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (44, 4)
TEST np.zeros((pad_dim,int(features)) (20, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (12, 4)
TEST np.zeros((pad_dim,int(features)) (52, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 40, 16, 2]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 5
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (40, 4)
TEST np.zeros((pad_dim,int(features)) (24, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (16, 4)
TEST np.zeros((pad_dim,int(features)) (48, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (2, 4)
TEST np.zeros((pad_dim,int(features)) (62, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 50, 14, 6, 2]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 6
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (50, 4)
TEST np.zeros((pad_dim,int(features)) (14, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (14, 4)
TEST np.zeros((pad_dim,int(features)) (50, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (6, 4)
TEST np.zeros((pad_dim,int(features)) (58, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (2, 4)
TEST np.zeros((pad_dim,int(features)) (62, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 42, 8]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 4
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (42, 4)
TEST np.zeros((pad_dim,int(features)) (22, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (8, 4)
TEST np.zeros((pad_dim,int(features)) (56, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 44, 10]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 4
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (44, 4)
TEST np.zeros((pad_dim,int(features)) (20, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (10, 4)
TEST np.zeros((pad_dim,int(features)) (54, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 52, 14]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 4
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (52, 4)
TEST np.zeros((pad_dim,int(features)) (12, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (14, 4)
TEST np.zeros((pad_dim,int(features)) (50, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 42, 4, 2]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 5
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (42, 4)
TEST np.zeros((pad_dim,int(features)) (22, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (4, 4)
TEST np.zeros((pad_dim,int(features)) (60, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (2, 4)
TEST np.zeros((pad_dim,int(features)) (62, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 48, 14, 2]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 5
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
subjets per level= [32, 64, 44, 6, 2]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 5
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
max_n_level= 64
TEST contents[i].shape= (64, 4)
--------------------------------------------------------------------------------
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (48, 4)
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
TEST np.zeros((pad_dim,int(features)) (16, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST contents[i].shape= (14, 4)
--------------------------------------------------------------------------------
TEST np.zeros((pad_dim,int(features)) (0, 4)
subjets per level= [32, 64, 42, 12]
TEST np.zeros((pad_dim,int(features)) (50, 4)
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 4
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
////////////////////////////////////////////////////////////////////////////////////////////////////
TEST contents[i].shape= (44, 4)
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (2, 4)
TEST np.zeros((pad_dim,int(features)) (20, 4)
TEST np.zeros((pad_dim,int(features)) (62, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level= 64
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (6, 4)
--------------------------------------------------------------------------------
TEST np.zeros((pad_dim,int(features)) (58, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
////////////////////////////////////////////////////////////////////////////////////////////////////
TEST contents[i].shape= (2, 4)
TEST np.zeros((pad_dim,int(features)) (62, 4)
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (42, 4)
TEST np.zeros((pad_dim,int(features)) (22, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (12, 4)
TEST np.zeros((pad_dim,int(features)) (52, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 46, 16, 4, 4]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 6
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (46, 4)
--------------------------------------------------------------------------------
TEST np.zeros((pad_dim,int(features)) (18, 4)
subjets per level= [32, 64, 44, 10]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 4
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
--------------------------------------------------------------------------------
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (16, 4)
subjets per level= [32, 64, 44, 6, 2]
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
TEST np.zeros((pad_dim,int(features)) (48, 4)
Number of levels= 5
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (4, 4)
TEST np.zeros((pad_dim,int(features)) (60, 4)
max_n_level= 64
--------------------------------------------------------------------------------
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (4, 4)
max_n_level and len(levels[i])= 64 64
TEST np.zeros((pad_dim,int(features)) (60, 4)
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
TEST np.zeros((pad_dim,int(features)) (0, 4)
max_n_level and len(levels[i])= 64 64
////////////////////////////////////////////////////////////////////////////////////////////////////
TEST contents[i].shape= (64, 4)
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (44, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
TEST np.zeros((pad_dim,int(features)) (20, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (44, 4)
TEST contents[i].shape= (6, 4)
TEST np.zeros((pad_dim,int(features)) (58, 4)
TEST np.zeros((pad_dim,int(features)) (20, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (2, 4)
TEST contents[i].shape= (10, 4)
TEST np.zeros((pad_dim,int(features)) (62, 4)
TEST np.zeros((pad_dim,int(features)) (54, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 36, 10, 2, 2]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 6
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (36, 4)
TEST np.zeros((pad_dim,int(features)) (28, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (10, 4)
TEST np.zeros((pad_dim,int(features)) (54, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (2, 4)
TEST np.zeros((pad_dim,int(features)) (62, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (2, 4)
TEST np.zeros((pad_dim,int(features)) (62, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 48, 8]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 4
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (48, 4)
TEST np.zeros((pad_dim,int(features)) (16, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (8, 4)
TEST np.zeros((pad_dim,int(features)) (56, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 60, 18]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 4
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (60, 4)
TEST np.zeros((pad_dim,int(features)) (4, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (18, 4)
TEST np.zeros((pad_dim,int(features)) (46, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 50, 12, 2]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 5
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (50, 4)
TEST np.zeros((pad_dim,int(features)) (14, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (12, 4)
TEST np.zeros((pad_dim,int(features)) (52, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (2, 4)
TEST np.zeros((pad_dim,int(features)) (62, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 44, 8]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 4
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (44, 4)
TEST np.zeros((pad_dim,int(features)) (20, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (8, 4)
TEST np.zeros((pad_dim,int(features)) (56, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 50, 10]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 4
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (50, 4)
TEST np.zeros((pad_dim,int(features)) (14, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (10, 4)
TEST np.zeros((pad_dim,int(features)) (54, 4)
100%|█████████████████████████████████████████████████████████████████████| 37/37 [00:15<00:00,  2.34it/s, loss=0.687]
- Train metrics: accuracy: 0.5855 ; loss: 0.6835
--------------------------------------------------------------------------------
subjets per level= [32, 64, 36, 10]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 4
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (36, 4)
TEST np.zeros((pad_dim,int(features)) (28, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (10, 4)
TEST np.zeros((pad_dim,int(features)) (54, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 46, 14, 2]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 5
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (46, 4)
TEST np.zeros((pad_dim,int(features)) (18, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
--------------------------------------------------------------------------------
max_n_level and len(levels[i])= 64 64
subjets per level= [32, 64, 46, 6, 2]
TEST contents[i].shape= (14, 4)
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
TEST np.zeros((pad_dim,int(features)) (50, 4)
Number of levels= 5
---------------------------////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (2, 4)
TEST np.zeros((pad_dim,int(features)) (62, 4)
-----------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (46, 4)
TEST np.zeros((pad_dim,int(features)) (18, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (6, 4)
TEST np.zeros((pad_dim,int(features)) (58, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (2, 4)
TEST np.zeros((pad_dim,int(features)) (62, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 38, 18, 6, 2]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 6
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
max_n_level= 64
subjets per level= [32, 64, 44, 6]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 4
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
max_n_level= 64
////////////////////////////////////////////////////////////////////////////////////////////////////
--------------------------------------------------------------------------------
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
TEST np.zeros((pad_dim,int(features)) (0, 4)
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST np.zeros((pad_dim,int(features)) (32, 4)
TEST contents[i].shape= (38, 4)
TEST np.zeros((pad_dim,int(features)) (26, 4)
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
subjets per level= [32, 64, 40, 4, 4]
////////////////////////////////////////////////////////////////////////////////////////////////////
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
TEST contents[i].shape= (64, 4)
Number of levels= 5
--------------------------------------------------------------------------------
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (18, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
TEST np.zeros((pad_dim,int(features)) (46, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level= 64
--------------------------------------------------------------------------------
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (6, 4)
TEST np.zeros((pad_dim,int(features)) (58, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (44, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
TEST np.zeros((pad_dim,int(features)) (20, 4)
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (2, 4)
TEST np.zeros((pad_dim,int(features)) (62, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (6, 4)
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (58, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (40, 4)
TEST np.zeros((pad_dim,int(features)) (24, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (4, 4)
TEST np.zeros((pad_dim,int(features)) (60, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (4, 4)
TEST np.zeros((pad_dim,int(features)) (60, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 40, 12, 2]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 5
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (40, 4)
TEST np.zeros((pad_dim,int(features)) (24, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (12, 4)
TEST np.zeros((pad_dim,int(features)) (52, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (2, 4)
TEST np.zeros((pad_dim,int(features)) (62, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 36, 10]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 4
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (36, 4)
TEST np.zeros((pad_dim,int(features)) (28, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (10, 4)
TEST np.zeros((pad_dim,int(features)) (54, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 58, 16, 4]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 5
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (58, 4)
TEST np.zeros((pad_dim,int(features)) (6, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (16, 4)
TEST np.zeros((pad_dim,int(features)) (48, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (4, 4)
TEST np.zeros((pad_dim,int(features)) (60, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 46, 16, 4]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 5
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (46, 4)
TEST np.zeros((pad_dim,int(features)) (18, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (16, 4)
TEST np.zeros((pad_dim,int(features)) (48, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (4, 4)
TEST np.zeros((pad_dim,int(features)) (60, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 40, 6]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 4
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (40, 4)
TEST np.zeros((pad_dim,int(features)) (24, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (6, 4)
TEST np.zeros((pad_dim,int(features)) (58, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 36, 4]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 4
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (36, 4)
TEST np.zeros((pad_dim,int(features)) (28, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (4, 4)
TEST np.zeros((pad_dim,int(features)) (60, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 54, 16, 2]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 5
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (54, 4)
TEST np.zeros((pad_dim,int(features)) (10, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (16, 4)
TEST np.zeros((pad_dim,int(features)) (48, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (2, 4)
TEST np.zeros((pad_dim,int(features)) (62, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 40, 8, 4]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 5
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (40, 4)
TEST np.zeros((pad_dim,int(features)) (24, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (8, 4)
TEST np.zeros((pad_dim,int(features)) (56, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (4, 4)
TEST np.zeros((pad_dim,int(features)) (60, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 36, 16]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 4
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (36, 4)
TEST np.zeros((pad_dim,int(features)) (28, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (16, 4)
TEST np.zeros((pad_dim,int(features)) (48, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 36, 6]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 4
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (36, 4)
TEST np.zeros((pad_dim,int(features)) (28, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (6, 4)
TEST np.zeros((pad_dim,int(features)) (58, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 42, 14, 4]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 5
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (42, 4)
TEST np.zeros((pad_dim,int(features)) (22, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (14, 4)
TEST np.zeros((pad_dim,int(features)) (50, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (4, 4)
TEST np.zeros((pad_dim,int(features)) (60, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 44, 6, 2]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 5
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (44, 4)
TEST np.zeros((pad_dim,int(features)) (20, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (6, 4)
TEST np.zeros((pad_dim,int(features)) (58, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (2, 4)
TEST np.zeros((pad_dim,int(features)) (62, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 40, 22, 2]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 5
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (40, 4)
TEST np.zeros((pad_dim,int(features)) (24, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (22, 4)
TEST np.zeros((pad_dim,int(features)) (42, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (2, 4)
TEST np.zeros((pad_dim,int(features)) (62, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 50, 14, 2]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 5
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (50, 4)
TEST np.zeros((pad_dim,int(features)) (14, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (14, 4)
TEST np.zeros((pad_dim,int(features)) (50, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (2, 4)
TEST np.zeros((pad_dim,int(features)) (62, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 34, 8]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 4
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (34, 4)
TEST np.zeros((pad_dim,int(features)) (30, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (8, 4)
TEST np.zeros((pad_dim,int(features)) (56, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 42, 12]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 4
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (42, 4)
TEST np.zeros((pad_dim,int(features)) (22, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (12, 4)
TEST np.zeros((pad_dim,int(features)) (52, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 44, 10, 2]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 5
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (44, 4)
TEST np.zeros((pad_dim,int(features)) (20, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (10, 4)
TEST np.zeros((pad_dim,int(features)) (54, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (2, 4)
TEST np.zeros((pad_dim,int(features)) (62, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 42, 8, 4]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 5
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (42, 4)
TEST np.zeros((pad_dim,int(features)) (22, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (8, 4)
TEST np.zeros((pad_dim,int(features)) (56, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (4, 4)
TEST np.zeros((pad_dim,int(features)) (60, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 42, 12, 2]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 5
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (42, 4)
TEST np.zeros((pad_dim,int(features)) (22, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (12, 4)
TEST np.zeros((pad_dim,int(features)) (52, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (2, 4)
TEST np.zeros((pad_dim,int(features)) (62, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 40, 16, 2]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 5
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (40, 4)
TEST np.zeros((pad_dim,int(features)) (24, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (16, 4)
TEST np.zeros((pad_dim,int(features)) (48, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (2, 4)
TEST np.zeros((pad_dim,int(features)) (62, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 38, 12]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 4
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (38, 4)
TEST np.zeros((pad_dim,int(features)) (26, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (12, 4)
TEST np.zeros((pad_dim,int(features)) (52, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 48, 14, 2]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 5
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (48, 4)
TEST np.zeros((pad_dim,int(features)) (16, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (14, 4)
TEST np.zeros((pad_dim,int(features)) (50, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (2, 4)
TEST np.zeros((pad_dim,int(features)) (62, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 48, 12, 2]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 5
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (48, 4)
TEST np.zeros((pad_dim,int(features)) (16, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (12, 4)
TEST np.zeros((pad_dim,int(features)) (52, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (2, 4)
TEST np.zeros((pad_dim,int(features)) (62, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 48, 4, 2]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 5
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (48, 4)
TEST np.zeros((pad_dim,int(features)) (16, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (4, 4)
TEST np.zeros((pad_dim,int(features)) (60, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (2, 4)
TEST np.zeros((pad_dim,int(features)) (62, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 44, 12]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 4
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (44, 4)
TEST np.zeros((pad_dim,int(features)) (20, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (12, 4)
TEST np.zeros((pad_dim,int(features)) (52, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 40, 16, 2]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 5
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (40, 4)
TEST np.zeros((pad_dim,int(features)) (24, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (16, 4)
TEST np.zeros((pad_dim,int(features)) (48, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (2, 4)
TEST np.zeros((pad_dim,int(features)) (62, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 50, 14, 6, 2]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 6
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (50, 4)
TEST np.zeros((pad_dim,int(features)) (14, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (14, 4)
TEST np.zeros((pad_dim,int(features)) (50, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (6, 4)
TEST np.zeros((pad_dim,int(features)) (58, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (2, 4)
TEST np.zeros((pad_dim,int(features)) (62, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 42, 8]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 4
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (42, 4)
TEST np.zeros((pad_dim,int(features)) (22, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (8, 4)
TEST np.zeros((pad_dim,int(features)) (56, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 44, 10]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 4
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (44, 4)
TEST np.zeros((pad_dim,int(features)) (20, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (10, 4)
TEST np.zeros((pad_dim,int(features)) (54, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 52, 14]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 4
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (52, 4)
TEST np.zeros((pad_dim,int(features)) (12, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (14, 4)
TEST np.zeros((pad_dim,int(features)) (50, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 42, 4, 2]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 5
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (42, 4)
TEST np.zeros((pad_dim,int(features)) (22, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (4, 4)
TEST np.zeros((pad_dim,int(features)) (60, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (2, 4)
TEST np.zeros((pad_dim,int(features)) (62, 4)
train.py:219: RuntimeWarning: divide by zero encountered in true_divide
  inv_fpr = interp(base_tpr, tpr, 1. / fpr)[125]
- Eval metrics : accuracy: 0.5260 ; loss: 0.6963
--------------------------------------------------------------------------------
subjets per level= [32, 64, 48, 14, 2]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 5
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (48, 4)
TEST np.zeros((pad_dim,int(features)) (16, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (14, 4)
TEST np.zeros((pad_dim,int(features)) (50, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (2, 4)
TEST np.zeros((pad_dim,int(features)) (62, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 44, 6, 2]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 5
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
subjets per level= [32, 64, 42, 12]
--------------------------------------------------------------------------------
max_n_level and len(levels[i])= 64 64
--------------------------------------------------------------------------------
Number of levels= 4
TEST contents[i].shape= (32, 4)
--------------------------------------------------------------------------------
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (44, 4)
TEST np.zeros((pad_dim,int(features)) (20, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (6, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
TEST np.zeros((pad_dim,int(features)) (58, 4)
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (42, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (2, 4)
TEST np.zeros((pad_dim,int(features)) (62, 4)
TEST np.zeros((pad_dim,int(features)) (22, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (12, 4)
TEST np.zeros((pad_dim,int(features)) (52, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 44, 10]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 4
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (44, 4)
TEST np.zeros((pad_dim,int(features)) (20, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (10, 4)
TEST np.zeros((pad_dim,int(features)) (54, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 44, 6, 2]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 5
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
max_n_level= 64
subjets per level= [32, 64, 46, 16, 4, 4]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 6
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (44, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
TEST np.zeros((pad_dim,int(features)) (20, 4)
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (6, 4)
TEST np.zeros((pad_dim,int(features)) (58, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (46, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
TEST np.zeros((pad_dim,int(features)) (18, 4)
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (2, 4)
TEST np.zeros((pad_dim,int(features)) (62, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (16, 4)
TEST np.zeros((pad_dim,int(features)) (48, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (4, 4)
TEST np.zeros((pad_dim,int(features)) (60, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (4, 4)
TEST np.zeros((pad_dim,int(features)) (60, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 36, 10, 2, 2]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 6
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (36, 4)
TEST np.zeros((pad_dim,int(features)) (28, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (10, 4)
TEST np.zeros((pad_dim,int(features)) (54, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (2, 4)
TEST np.zeros((pad_dim,int(features)) (62, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (2, 4)
TEST np.zeros((pad_dim,int(features)) (62, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 50, 12, 2]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 5
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (50, 4)
TEST np.zeros((pad_dim,int(features)) (14, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (12, 4)
TEST np.zeros((pad_dim,int(features)) (52, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (2, 4)
TEST np.zeros((pad_dim,int(features)) (62, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 44, 8]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 4
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (44, 4)
TEST np.zeros((pad_dim,int(features)) (20, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (8, 4)
TEST np.zeros((pad_dim,int(features)) (56, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 48, 8]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 4
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (48, 4)
TEST np.zeros((pad_dim,int(features)) (16, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (8, 4)
TEST np.zeros((pad_dim,int(features)) (56, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 60, 18]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 4
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (60, 4)
TEST np.zeros((pad_dim,int(features)) (4, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (18, 4)
TEST np.zeros((pad_dim,int(features)) (46, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 50, 10]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 4
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (50, 4)
TEST np.zeros((pad_dim,int(features)) (14, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (10, 4)
TEST np.zeros((pad_dim,int(features)) (54, 4)
Checkpoint Directory exists!
Epoch 8/30
100%|█████████████████████████████████████████████████████████████████████| 37/37 [00:15<00:00,  2.39it/s, loss=0.686]
- Train metrics: accuracy: 0.5921 ; loss: 0.6817
--------------------------------------------------------------------------------
subjets per level= [32, 64, 36, 10]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 4
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
--------------------------------------------------------------------------------
max_n_level and len(levels[i])= 64 64
subjets per level= [32, 64, 46, 14, 2]
TEST contents[i].shape= (36, 4)
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 5
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
TEST np.zeros((pad_dim,int(features)) (28, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (10, 4)
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (54, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (46, 4)
TEST np.zeros((pad_dim,int(features)) (18, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (14, 4)
TEST np.zeros((pad_dim,int(features)) (50, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (2, 4)
TEST np.zeros((pad_dim,int(features)) (62, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 46, 6, 2]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 5
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (46, 4)
TEST np.zeros((pad_dim,int(features)) (18, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (6, 4)
TEST np.zeros((pad_dim,int(features)) (58, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (2, 4)
TEST np.zeros((pad_dim,int(features)) (62, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 40, 4, 4]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 5
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (40, 4)
TEST np.zeros((pad_dim,int(features)) (24, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (4, 4)
TEST np.zeros((pad_dim,int(features)) (60, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (4, 4)
TEST np.zeros((pad_dim,int(features)) (60, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 38, 18, 6, 2]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 6
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
subjets per level= [32, 64, 44, 6]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 4
--------------------------------------------------------------------------------
max_n_level= 64
max_n_level= 64
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
TEST np.zeros((pad_dim,int(features)) (32, 4)
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
TEST np.zeros((pad_dim,int(features)) (32, 4)
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
////////////////////////////////////////////////////////////////////////////////////////////////////
TEST contents[i].shape= (38, 4)
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (44, 4)
TEST np.zeros((pad_dim,int(features)) (26, 4)
TEST np.zeros((pad_dim,int(features)) (20, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (18, 4)
TEST np.zeros((pad_dim,int(features)) (46, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (6, 4)
TEST np.zeros((pad_dim,int(features)) (58, 4)
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (6, 4)
TEST np.zeros((pad_dim,int(features)) (58, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (2, 4)
TEST np.zeros((pad_dim,int(features)) (62, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 40, 12, 2]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 5
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (40, 4)
TEST np.zeros((pad_dim,int(features)) (24, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (12, 4)
TEST np.zeros((pad_dim,int(features)) (52, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (2, 4)
TEST np.zeros((pad_dim,int(features)) (62, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 36, 10]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 4
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (36, 4)
TEST np.zeros((pad_dim,int(features)) (28, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (10, 4)
TEST np.zeros((pad_dim,int(features)) (54, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 58, 16, 4]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 5
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (58, 4)
TEST np.zeros((pad_dim,int(features)) (6, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (16, 4)
TEST np.zeros((pad_dim,int(features)) (48, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (4, 4)
TEST np.zeros((pad_dim,int(features)) (60, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 46, 16, 4]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 5
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (46, 4)
TEST np.zeros((pad_dim,int(features)) (18, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (16, 4)
TEST np.zeros((pad_dim,int(features)) (48, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (4, 4)
TEST np.zeros((pad_dim,int(features)) (60, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 40, 6]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 4
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (40, 4)
TEST np.zeros((pad_dim,int(features)) (24, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (6, 4)
TEST np.zeros((pad_dim,int(features)) (58, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 36, 4]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 4
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (36, 4)
TEST np.zeros((pad_dim,int(features)) (28, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (4, 4)
TEST np.zeros((pad_dim,int(features)) (60, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 54, 16, 2]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 5
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (54, 4)
TEST np.zeros((pad_dim,int(features)) (10, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (16, 4)
TEST np.zeros((pad_dim,int(features)) (48, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (2, 4)
TEST np.zeros((pad_dim,int(features)) (62, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 40, 8, 4]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 5
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (40, 4)
TEST np.zeros((pad_dim,int(features)) (24, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (8, 4)
TEST np.zeros((pad_dim,int(features)) (56, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (4, 4)
TEST np.zeros((pad_dim,int(features)) (60, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 36, 16]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 4
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (36, 4)
TEST np.zeros((pad_dim,int(features)) (28, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (16, 4)
TEST np.zeros((pad_dim,int(features)) (48, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 36, 6]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 4
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (36, 4)
TEST np.zeros((pad_dim,int(features)) (28, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (6, 4)
TEST np.zeros((pad_dim,int(features)) (58, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 42, 14, 4]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 5
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (42, 4)
TEST np.zeros((pad_dim,int(features)) (22, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (14, 4)
TEST np.zeros((pad_dim,int(features)) (50, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (4, 4)
TEST np.zeros((pad_dim,int(features)) (60, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 44, 6, 2]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 5
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (44, 4)
TEST np.zeros((pad_dim,int(features)) (20, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (6, 4)
TEST np.zeros((pad_dim,int(features)) (58, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (2, 4)
TEST np.zeros((pad_dim,int(features)) (62, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 40, 22, 2]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 5
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (40, 4)
TEST np.zeros((pad_dim,int(features)) (24, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (22, 4)
TEST np.zeros((pad_dim,int(features)) (42, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (2, 4)
TEST np.zeros((pad_dim,int(features)) (62, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 50, 14, 2]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 5
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (50, 4)
TEST np.zeros((pad_dim,int(features)) (14, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (14, 4)
TEST np.zeros((pad_dim,int(features)) (50, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (2, 4)
TEST np.zeros((pad_dim,int(features)) (62, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 34, 8]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 4
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (34, 4)
TEST np.zeros((pad_dim,int(features)) (30, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (8, 4)
TEST np.zeros((pad_dim,int(features)) (56, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 42, 12]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 4
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (42, 4)
TEST np.zeros((pad_dim,int(features)) (22, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (12, 4)
TEST np.zeros((pad_dim,int(features)) (52, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 44, 10, 2]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 5
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (44, 4)
TEST np.zeros((pad_dim,int(features)) (20, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (10, 4)
TEST np.zeros((pad_dim,int(features)) (54, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (2, 4)
TEST np.zeros((pad_dim,int(features)) (62, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 42, 8, 4]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 5
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (42, 4)
TEST np.zeros((pad_dim,int(features)) (22, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (8, 4)
TEST np.zeros((pad_dim,int(features)) (56, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (4, 4)
TEST np.zeros((pad_dim,int(features)) (60, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 42, 12, 2]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 5
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (42, 4)
TEST np.zeros((pad_dim,int(features)) (22, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (12, 4)
TEST np.zeros((pad_dim,int(features)) (52, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (2, 4)
TEST np.zeros((pad_dim,int(features)) (62, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 40, 16, 2]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 5
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (40, 4)
TEST np.zeros((pad_dim,int(features)) (24, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (16, 4)
TEST np.zeros((pad_dim,int(features)) (48, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (2, 4)
TEST np.zeros((pad_dim,int(features)) (62, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 38, 12]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 4
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (38, 4)
TEST np.zeros((pad_dim,int(features)) (26, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (12, 4)
TEST np.zeros((pad_dim,int(features)) (52, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 48, 14, 2]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 5
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (48, 4)
TEST np.zeros((pad_dim,int(features)) (16, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (14, 4)
TEST np.zeros((pad_dim,int(features)) (50, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (2, 4)
TEST np.zeros((pad_dim,int(features)) (62, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 48, 12, 2]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 5
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (48, 4)
TEST np.zeros((pad_dim,int(features)) (16, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (12, 4)
TEST np.zeros((pad_dim,int(features)) (52, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (2, 4)
TEST np.zeros((pad_dim,int(features)) (62, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 48, 4, 2]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 5
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (48, 4)
TEST np.zeros((pad_dim,int(features)) (16, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (4, 4)
TEST np.zeros((pad_dim,int(features)) (60, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (2, 4)
TEST np.zeros((pad_dim,int(features)) (62, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 44, 12]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 4
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (44, 4)
TEST np.zeros((pad_dim,int(features)) (20, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (12, 4)
TEST np.zeros((pad_dim,int(features)) (52, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 40, 16, 2]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 5
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (40, 4)
TEST np.zeros((pad_dim,int(features)) (24, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (16, 4)
TEST np.zeros((pad_dim,int(features)) (48, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (2, 4)
TEST np.zeros((pad_dim,int(features)) (62, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 50, 14, 6, 2]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 6
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (50, 4)
TEST np.zeros((pad_dim,int(features)) (14, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (14, 4)
TEST np.zeros((pad_dim,int(features)) (50, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (6, 4)
TEST np.zeros((pad_dim,int(features)) (58, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (2, 4)
TEST np.zeros((pad_dim,int(features)) (62, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 42, 8]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 4
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (42, 4)
TEST np.zeros((pad_dim,int(features)) (22, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (8, 4)
TEST np.zeros((pad_dim,int(features)) (56, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 44, 10]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 4
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (44, 4)
TEST np.zeros((pad_dim,int(features)) (20, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (10, 4)
TEST np.zeros((pad_dim,int(features)) (54, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 52, 14]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 4
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (52, 4)
TEST np.zeros((pad_dim,int(features)) (12, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (14, 4)
TEST np.zeros((pad_dim,int(features)) (50, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 42, 4, 2]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 5
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (42, 4)
TEST np.zeros((pad_dim,int(features)) (22, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (4, 4)
TEST np.zeros((pad_dim,int(features)) (60, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (2, 4)
TEST np.zeros((pad_dim,int(features)) (62, 4)
train.py:219: RuntimeWarning: divide by zero encountered in true_divide
  inv_fpr = interp(base_tpr, tpr, 1. / fpr)[125]
- Eval metrics : accuracy: 0.5182 ; loss: 0.6965
--------------------------------------------------------------------------------
subjets per level= [32, 64, 48, 14, 2]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 5
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
subjets per level= [32, 64, 44, 6, 2]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 5
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
max_n_level= 64
////////////////////////////////////////////////////////////////////////////////////////////////////
--------------------------------------------------------------------------------
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level amax_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
nd len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST np.zeros((pad_dim,int(features)) (0, 4)
TEST contents[i].shape= (44, 4)
TEST np.zeros((pad_dim,int(features)) (20, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (6, 4)
TEST np.zeros((pad_dim,int(features)) (58, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (2, 4)
TEST np.zeros((pad_dim,int(features)) (62, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (48, 4)
--------------------------------------------------------------------------------
TEST np.zeros((pad_dim,int(features)) (16, 4)
subjets per level= [32, 64, 42, 12]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 4
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (14, 4)
TEST np.zeros((pad_dim,int(features)) (50, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
max_n_level= 64
TEST contents[i].shape= (2, 4)
--------------------------------------------------------------------------------
TEST np.zeros((pad_dim,int(features)) (62, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (42, 4)
TEST np.zeros((pad_dim,int(features)) (22, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (12, 4)
TEST np.zeros((pad_dim,int(features)) (52, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 44, 10]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 4
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
--------------------------------------------------------------------------------
TEST np.zeros((pad_dim,int(features)) (0, 4)
subjets per level= [32, 64, 46, 16, 4, 4]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 6
////////////////////////////////////////////////////////////////////////////////////////////////////
--------------------------------------------------------------------------------
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (44, 4)
TEST np.zeros((pad_dim,int(features)) (20, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level= 64
--------------------------------------------------------------------------------
max_n_level and len(levels[i])= 64 64
--------------------------------------------------------------------------------
TEST contents[i].shape= (10, 4)
subjets per level= [32, 64, 44, 6, 2]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 5
TEST np.zeros((pad_dim,int(features)) (54, 4)
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level= 64
max_n_level and len(levels[i])= 64 64
--------------------------------------------------------------------------------
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
////////////////////////////////////////////////////////////////////////////////////////////////////
TEST contents[i].shape= (32, 4)
max_n_level and len(levels[i])= 64 64
TEST np.zeros((pad_dim,int(features)) (32, 4)
TEST contents[i].shape= (46, 4)
TEST np.zeros((pad_dim,int(features)) (18, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (16, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
TEST np.zeros((pad_dim,int(features)) (48, 4)
max_n_level and len(levels[i])= 64 64
////////////////////////////////////////////////////////////////////////////////////////////////////
TEST contents[i].shape= (44, 4)
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (4, 4)
TEST np.zeros((pad_dim,int(features)) (20, 4)
TEST np.zeros((pad_dim,int(features)) (60, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (6, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
TEST np.zeros((pad_dim,int(features)) (58, 4)
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (4, 4)
TEST np.zeros((pad_dim,int(features)) (60, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (2, 4)
TEST np.zeros((pad_dim,int(features)) (62, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 36, 10, 2, 2]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 6
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (36, 4)
TEST np.zeros((pad_dim,int(features)) (28, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (10, 4)
TEST np.zeros((pad_dim,int(features)) (54, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (2, 4)
TEST np.zeros((pad_dim,int(features)) (62, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (2, 4)
TEST np.zeros((pad_dim,int(features)) (62, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 48, 8]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 4
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (48, 4)
TEST np.zeros((pad_dim,int(features)) (16, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (8, 4)
TEST np.zeros((pad_dim,int(features)) (56, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 60, 18]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 4
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (60, 4)
TEST np.zeros((pad_dim,int(features)) (4, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (18, 4)
TEST np.zeros((pad_dim,int(features)) (46, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 50, 12, 2]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 5
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (50, 4)
TEST np.zeros((pad_dim,int(features)) (14, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (12, 4)
TEST np.zeros((pad_dim,int(features)) (52, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (2, 4)
TEST np.zeros((pad_dim,int(features)) (62, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 44, 8]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 4
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (44, 4)
TEST np.zeros((pad_dim,int(features)) (20, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (8, 4)
TEST np.zeros((pad_dim,int(features)) (56, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 50, 10]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 4
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (50, 4)
TEST np.zeros((pad_dim,int(features)) (14, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (10, 4)
TEST np.zeros((pad_dim,int(features)) (54, 4)
Checkpoint Directory exists!
Epoch 9/30
  0%|                                                                                          | 0/37 [00:00<?, ?it/s]
--------------------------------------------------------------------------------
subjets per level= [32, 64, 36, 10]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 4
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (36, 4)
TEST np.zeros((pad_dim,int(features)) (28, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (10, 4)
TEST np.zeros((pad_dim,int(features)) (54, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 46, 14, 2]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 5
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (46, 4)
TEST np.zeros((pad_dim,int(features)) (18, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (14, 4)
TEST np.zeros((pad_dim,int(features)) (50, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (2, 4)
TEST np.zeros((pad_dim,int(features)) (62, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 46, 6, 2]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 5
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (46, 4)
TEST np.zeros((pad_dim,int(features)) (18, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (6, 4)
TEST np.zeros((pad_dim,int(features)) (58, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (2, 4)
TEST np.zeros((pad_dim,int(features)) (62, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 38, 18, 6, 2]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 6
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
--------------------------------------------------------------------------------
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
subjets per level= [32, 64, 40, 4, 4]
--------------------------------------------------------------------------------
TEST np.zeros((pad_dim,int(features)) (0, 4)
--------------------------------------------------------------------------------
Number of levels= 5
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST contents[i].shape= (38, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
TEST np.zeros((pad_dim,int(features)) (26, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (40, 4)
TEST np.zeros((pad_dim,int(features)) (24, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (18, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
TEST np.zeros((pad_dim,int(features)) (46, 4)
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (4, 4)
TEST np.zeros((pad_dim,int(features)) (60, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (6, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
TEST np.zeros((pad_dim,int(features)) (58, 4)
max_n_level and len(levels[i])= 64 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
TEST contents[i].shape= (4, 4)
subjets per level= [32, 64, 44, 6]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 4
TEST np.zeros((pad_dim,int(features)) (60, 4)
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (2, 4)
TEST np.zeros((pad_dim,int(features)) (62, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (44, 4)
TEST np.zeros((pad_dim,int(features)) (20, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (6, 4)
TEST np.zeros((pad_dim,int(features)) (58, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 40, 12, 2]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 5
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (40, 4)
TEST np.zeros((pad_dim,int(features)) (24, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (12, 4)
TEST np.zeros((pad_dim,int(features)) (52, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (2, 4)
TEST np.zeros((pad_dim,int(features)) (62, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 36, 10]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 4
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (36, 4)
TEST np.zeros((pad_dim,int(features)) (28, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (10, 4)
TEST np.zeros((pad_dim,int(features)) (54, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 58, 16, 4]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 5
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (58, 4)
TEST np.zeros((pad_dim,int(features)) (6, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (16, 4)
TEST np.zeros((pad_dim,int(features)) (48, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (4, 4)
100%|█████████████████████████████████████████████████████████████████████| 37/37 [00:17<00:00,  2.17it/s, loss=0.684]
- Train metrics: accuracy: 0.5987 ; loss: 0.6809
--------------------------------------------------------------------------------
subjets per level= [32, 64, 46, 16, 4]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 5
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (46, 4)
TEST np.zeros((pad_dim,int(features)) (18, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (16, 4)
TEST np.zeros((pad_dim,int(features)) (48, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (4, 4)
TEST np.zeros((pad_dim,int(features)) (60, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 40, 6]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 4
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (40, 4)
TEST np.zeros((pad_dim,int(features)) (24, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (6, 4)
TEST np.zeros((pad_dim,int(features)) (58, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 36, 4]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 4
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (36, 4)
TEST np.zeros((pad_dim,int(features)) (28, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (4, 4)
TEST np.zeros((pad_dim,int(features)) (60, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 54, 16, 2]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 5
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (54, 4)
TEST np.zeros((pad_dim,int(features)) (10, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (16, 4)
TEST np.zeros((pad_dim,int(features)) (48, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (2, 4)
TEST np.zeros((pad_dim,int(features)) (62, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 40, 8, 4]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 5
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (40, 4)
TEST np.zeros((pad_dim,int(features)) (24, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (8, 4)
TEST np.zeros((pad_dim,int(features)) (56, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (4, 4)
TEST np.zeros((pad_dim,int(features)) (60, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 36, 16]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 4
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (36, 4)
TEST np.zeros((pad_dim,int(features)) (28, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (16, 4)
TEST np.zeros((pad_dim,int(features)) (48, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 36, 6]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 4
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (36, 4)
TEST np.zeros((pad_dim,int(features)) (28, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (6, 4)
TEST np.zeros((pad_dim,int(features)) (58, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 42, 14, 4]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 5
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (42, 4)
TEST np.zeros((pad_dim,int(features)) (22, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (14, 4)
TEST np.zeros((pad_dim,int(features)) (50, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (4, 4)
TEST np.zeros((pad_dim,int(features)) (60, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 44, 6, 2]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 5
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (44, 4)
TEST np.zeros((pad_dim,int(features)) (20, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (6, 4)
TEST np.zeros((pad_dim,int(features)) (58, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (2, 4)
TEST np.zeros((pad_dim,int(features)) (62, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 40, 22, 2]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 5
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (40, 4)
TEST np.zeros((pad_dim,int(features)) (24, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (22, 4)
TEST np.zeros((pad_dim,int(features)) (42, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (2, 4)
TEST np.zeros((pad_dim,int(features)) (62, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 50, 14, 2]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 5
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (50, 4)
TEST np.zeros((pad_dim,int(features)) (14, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (14, 4)
TEST np.zeros((pad_dim,int(features)) (50, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (2, 4)
TEST np.zeros((pad_dim,int(features)) (62, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 34, 8]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 4
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (34, 4)
TEST np.zeros((pad_dim,int(features)) (30, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (8, 4)
TEST np.zeros((pad_dim,int(features)) (56, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 42, 12]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 4
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (42, 4)
TEST np.zeros((pad_dim,int(features)) (22, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (12, 4)
TEST np.zeros((pad_dim,int(features)) (52, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 44, 10, 2]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 5
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (44, 4)
TEST np.zeros((pad_dim,int(features)) (20, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (10, 4)
TEST np.zeros((pad_dim,int(features)) (54, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (2, 4)
TEST np.zeros((pad_dim,int(features)) (62, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 42, 8, 4]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 5
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (42, 4)
TEST np.zeros((pad_dim,int(features)) (22, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (8, 4)
TEST np.zeros((pad_dim,int(features)) (56, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (4, 4)
TEST np.zeros((pad_dim,int(features)) (60, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 42, 12, 2]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 5
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (42, 4)
TEST np.zeros((pad_dim,int(features)) (22, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (12, 4)
TEST np.zeros((pad_dim,int(features)) (52, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (2, 4)
TEST np.zeros((pad_dim,int(features)) (62, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 40, 16, 2]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 5
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (40, 4)
TEST np.zeros((pad_dim,int(features)) (24, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (16, 4)
TEST np.zeros((pad_dim,int(features)) (48, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (2, 4)
TEST np.zeros((pad_dim,int(features)) (62, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 38, 12]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 4
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (38, 4)
TEST np.zeros((pad_dim,int(features)) (26, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (12, 4)
TEST np.zeros((pad_dim,int(features)) (52, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 48, 14, 2]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 5
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (48, 4)
TEST np.zeros((pad_dim,int(features)) (16, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (14, 4)
TEST np.zeros((pad_dim,int(features)) (50, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (2, 4)
TEST np.zeros((pad_dim,int(features)) (62, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 48, 12, 2]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 5
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (48, 4)
TEST np.zeros((pad_dim,int(features)) (16, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (12, 4)
TEST np.zeros((pad_dim,int(features)) (52, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (2, 4)
TEST np.zeros((pad_dim,int(features)) (62, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 48, 4, 2]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 5
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (48, 4)
TEST np.zeros((pad_dim,int(features)) (16, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (4, 4)
TEST np.zeros((pad_dim,int(features)) (60, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (2, 4)
TEST np.zeros((pad_dim,int(features)) (62, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 44, 12]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 4
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (44, 4)
TEST np.zeros((pad_dim,int(features)) (20, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (12, 4)
TEST np.zeros((pad_dim,int(features)) (52, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 40, 16, 2]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 5
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (40, 4)
TEST np.zeros((pad_dim,int(features)) (24, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (16, 4)
TEST np.zeros((pad_dim,int(features)) (48, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (2, 4)
TEST np.zeros((pad_dim,int(features)) (62, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 50, 14, 6, 2]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 6
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (50, 4)
TEST np.zeros((pad_dim,int(features)) (14, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (14, 4)
TEST np.zeros((pad_dim,int(features)) (50, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (6, 4)
TEST np.zeros((pad_dim,int(features)) (58, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (2, 4)
TEST np.zeros((pad_dim,int(features)) (62, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 42, 8]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 4
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (42, 4)
TEST np.zeros((pad_dim,int(features)) (22, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (8, 4)
TEST np.zeros((pad_dim,int(features)) (56, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 44, 10]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 4
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (44, 4)
TEST np.zeros((pad_dim,int(features)) (20, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (10, 4)
TEST np.zeros((pad_dim,int(features)) (54, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 52, 14]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 4
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (52, 4)
TEST np.zeros((pad_dim,int(features)) (12, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (14, 4)
TEST np.zeros((pad_dim,int(features)) (50, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 42, 4, 2]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 5
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (42, 4)
TEST np.zeros((pad_dim,int(features)) (22, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (4, 4)
TEST np.zeros((pad_dim,int(features)) (60, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (2, 4)
TEST np.zeros((pad_dim,int(features)) (62, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 48, 14, 2]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 5
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
--------------------------------------------------------------------------------
TEST contents[i].shape= (48, 4)
TEST np.zeros((pad_dim,int(features)) (16, 4)
subjets per level= [32, 64, 44, 6, 2]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 5
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (14, 4)
TEST np.zeros((pad_dimax_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
m,int(features)) (50, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (44, 4)
TEST np.zeros((pad_dim,int(features)) (20, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (2, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
TEST np.zeros((pad_dim,int(features)) (62, 4)
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (6, 4)
TEST np.zeros((pad_dim,int(features)) (58, 4)
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
subjets per level= [32, 64, 42, 12]
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (2, 4)
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
TEST np.zeros((pad_dim,int(features)) (62, 4)
Number of levels= 4
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (42, 4)
TEST np.zeros((pad_dim,int(features)) (22, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (12, 4)
TEST np.zeros((pad_dim,int(features)) (52, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 46, 16, 4, 4]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 6
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
subjets per level= [32, 64, 44, 10]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 4
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
--------------------------------------------------------------------------------
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (44, 4)
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
subjets per level= [32, 64, 44, 6, 2]
TEST np.zeros((pad_dim,int(features)) (20, 4)
max_n_level and len(levels[i])= 64 64
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
TEST contents[i].shape= (64, 4)
Number of levels= 5
-------------------TEST np.zeros((pad_dim,int(features)) (0, 4)
-------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (10, 4)
TEST np.zeros((pad_dim,int(features)) (54, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (46, 4)
max_n_level= 64
--------------------------------------------------------------------------------
TEST np.zeros((pad_dim,int(features)) (18, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST contents[i].shape= (16, 4)
TEST np.zeros((pad_dim,int(features)) (48, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (4, 4)
TEST np.zeros((pad_dim,int(features)) (60, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (4, 4)
TEST np.zeros((pad_dim,int(features)) (60, 4)
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (44, 4)
TEST np.zeros((pad_dim,int(features)) (20, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (6, 4)
TEST np.zeros((pad_dim,int(features)) (58, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (2, 4)
TEST np.zeros((pad_dim,int(features)) (62, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 36, 10, 2, 2]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 6
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (36, 4)
TEST np.zeros((pad_dim,int(features)) (28, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (10, 4)
TEST np.zeros((pad_dim,int(features)) (54, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (2, 4)
TEST np.zeros((pad_dim,int(features)) (62, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (2, 4)
TEST np.zeros((pad_dim,int(features)) (62, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 48, 8]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 4
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (48, 4)
TEST np.zeros((pad_dim,int(features)) (16, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (8, 4)
TEST np.zeros((pad_dim,int(features)) (56, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 60, 18]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 4
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (60, 4)
TEST np.zeros((pad_dim,int(features)) (4, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (18, 4)
TEST np.zeros((pad_dim,int(features)) (46, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 50, 12, 2]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 5
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (50, 4)
TEST np.zeros((pad_dim,int(features)) (14, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (12, 4)
TEST np.zeros((pad_dim,int(features)) (52, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (2, 4)
TEST np.zeros((pad_dim,int(features)) (62, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 44, 8]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 4
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (44, 4)
TEST np.zeros((pad_dim,int(features)) (20, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (8, 4)
TEST np.zeros((pad_dim,int(features)) (56, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 50, 10]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 4
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (50, 4)
TEST np.zeros((pad_dim,int(features)) (14, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (10, 4)
TEST np.zeros((pad_dim,int(features)) (54, 4)
train.py:219: RuntimeWarning: divide by zero encountered in true_divide
  inv_fpr = interp(base_tpr, tpr, 1. / fpr)[125]
- Eval metrics : accuracy: 0.5130 ; loss: 0.6959
Checkpoint Directory exists!
Epoch 10/30
100%|█████████████████████████████████████████████████████████████████████| 37/37 [00:16<00:00,  2.30it/s, loss=0.683]
- Train metrics: accuracy: 0.6036 ; loss: 0.6791
--------------------------------------------------------------------------------
subjets per level= [32, 64, 36, 10]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 4
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (36, 4)
TEST np.zeros((pad_dim,int(features)) (28, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (10, 4)
TEST np.zeros((pad_dim,int(features)) (54, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 46, 14, 2]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 5
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
subjets per level= [32, 64, 46, 6, 2]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 5
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
max_n_level= 64
////////////////////////////////////////////////////////////////////////////////////////////////////
--------------------------------------------------------------------------------
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
////////////////////////////////////////////////////////////////////////////////////////////////////
TEST contents[i].shape= (32, 4)
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (46, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
TEST np.zeros((pad_dim,int(features)) (18, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST contents[i].shape= (14, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
TEST np.zeros((pad_dim,int(features)) (50, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (46, 4)
TEST contents[i].shape= (2, 4)
TEST np.zeros((pad_dim,int(features)) (62, 4)
TEST np.zeros((pad_dim,int(features)) (18, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (6, 4)
TEST np.zeros((pad_dim,int(features)) (58, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (2, 4)
TEST np.zeros((pad_dim,int(features)) (62, 4)
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
subjets per level= [32, 64, 40, 4, 4]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 5
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
subjets per level= [32, 64, 44, 6]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 4
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST contents[i].shape= (40, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
TEST np.zeros((pad_dim,int(features)) (24, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (4, 4)
--------------------------------------------------------------------------------
TEST np.zeros((pad_dim,int(features)) (60, 4)
subjets per level= [32, 64, 38, 18, 6, 2]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
Number of levels= 6
--------------------------------------------------------------------------------
max_n_level and len(levels[i])= 64 64
////////////////////////////////////////////////////////////////////////////////////////////////////
TEST contents[i].shape= (44, 4)
max_n_level and len(levels[i])= 64 64
TEST np.zeros((pad_dim,int(features)) (20, 4)
TEST contents[i].shape= (4, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level= 64
--------------------------------------------------------------------------------
max_n_level and len(levels[i])= 64 64
TEST np.zeros((pad_dim,int(features)) (60, 4)
TEST contents[i].shape= (6, 4)
TEST np.zeros((pad_dim,int(features)) (58, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (38, 4)
TEST np.zeros((pad_dim,int(features)) (26, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (18, 4)
TEST np.zeros((pad_dim,int(features)) (46, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (6, 4)
TEST np.zeros((pad_dim,int(features)) (58, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (2, 4)
TEST np.zeros((pad_dim,int(features)) (62, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 40, 12, 2]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 5
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (40, 4)
TEST np.zeros((pad_dim,int(features)) (24, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (12, 4)
TEST np.zeros((pad_dim,int(features)) (52, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (2, 4)
TEST np.zeros((pad_dim,int(features)) (62, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 36, 10]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 4
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (36, 4)
TEST np.zeros((pad_dim,int(features)) (28, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (10, 4)
TEST np.zeros((pad_dim,int(features)) (54, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 58, 16, 4]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 5
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (58, 4)
TEST np.zeros((pad_dim,int(features)) (6, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (16, 4)
TEST np.zeros((pad_dim,int(features)) (48, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (4, 4)
TEST np.zeros((pad_dim,int(features)) (60, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 46, 16, 4]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 5
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (46, 4)
TEST np.zeros((pad_dim,int(features)) (18, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (16, 4)
TEST np.zeros((pad_dim,int(features)) (48, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (4, 4)
TEST np.zeros((pad_dim,int(features)) (60, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 40, 6]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 4
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (40, 4)
TEST np.zeros((pad_dim,int(features)) (24, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (6, 4)
TEST np.zeros((pad_dim,int(features)) (58, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 36, 4]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 4
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (36, 4)
TEST np.zeros((pad_dim,int(features)) (28, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (4, 4)
TEST np.zeros((pad_dim,int(features)) (60, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 54, 16, 2]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 5
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (54, 4)
TEST np.zeros((pad_dim,int(features)) (10, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (16, 4)
TEST np.zeros((pad_dim,int(features)) (48, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (2, 4)
TEST np.zeros((pad_dim,int(features)) (62, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 40, 8, 4]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 5
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (40, 4)
TEST np.zeros((pad_dim,int(features)) (24, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (8, 4)
TEST np.zeros((pad_dim,int(features)) (56, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (4, 4)
TEST np.zeros((pad_dim,int(features)) (60, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 36, 16]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 4
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (36, 4)
TEST np.zeros((pad_dim,int(features)) (28, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (16, 4)
TEST np.zeros((pad_dim,int(features)) (48, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 36, 6]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 4
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (36, 4)
TEST np.zeros((pad_dim,int(features)) (28, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (6, 4)
TEST np.zeros((pad_dim,int(features)) (58, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 42, 14, 4]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 5
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (42, 4)
TEST np.zeros((pad_dim,int(features)) (22, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (14, 4)
TEST np.zeros((pad_dim,int(features)) (50, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (4, 4)
TEST np.zeros((pad_dim,int(features)) (60, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 44, 6, 2]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 5
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (44, 4)
TEST np.zeros((pad_dim,int(features)) (20, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (6, 4)
TEST np.zeros((pad_dim,int(features)) (58, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (2, 4)
TEST np.zeros((pad_dim,int(features)) (62, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 40, 22, 2]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 5
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (40, 4)
TEST np.zeros((pad_dim,int(features)) (24, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (22, 4)
TEST np.zeros((pad_dim,int(features)) (42, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (2, 4)
TEST np.zeros((pad_dim,int(features)) (62, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 50, 14, 2]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 5
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (50, 4)
TEST np.zeros((pad_dim,int(features)) (14, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (14, 4)
TEST np.zeros((pad_dim,int(features)) (50, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (2, 4)
TEST np.zeros((pad_dim,int(features)) (62, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 34, 8]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 4
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (34, 4)
TEST np.zeros((pad_dim,int(features)) (30, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (8, 4)
TEST np.zeros((pad_dim,int(features)) (56, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 42, 12]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 4
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (42, 4)
TEST np.zeros((pad_dim,int(features)) (22, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (12, 4)
TEST np.zeros((pad_dim,int(features)) (52, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 44, 10, 2]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 5
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (44, 4)
TEST np.zeros((pad_dim,int(features)) (20, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (10, 4)
TEST np.zeros((pad_dim,int(features)) (54, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (2, 4)
TEST np.zeros((pad_dim,int(features)) (62, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 42, 8, 4]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 5
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (42, 4)
TEST np.zeros((pad_dim,int(features)) (22, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (8, 4)
TEST np.zeros((pad_dim,int(features)) (56, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (4, 4)
TEST np.zeros((pad_dim,int(features)) (60, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 42, 12, 2]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 5
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (42, 4)
TEST np.zeros((pad_dim,int(features)) (22, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (12, 4)
TEST np.zeros((pad_dim,int(features)) (52, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (2, 4)
TEST np.zeros((pad_dim,int(features)) (62, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 40, 16, 2]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 5
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (40, 4)
TEST np.zeros((pad_dim,int(features)) (24, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (16, 4)
TEST np.zeros((pad_dim,int(features)) (48, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (2, 4)
TEST np.zeros((pad_dim,int(features)) (62, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 38, 12]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 4
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (38, 4)
TEST np.zeros((pad_dim,int(features)) (26, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (12, 4)
TEST np.zeros((pad_dim,int(features)) (52, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 48, 14, 2]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 5
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (48, 4)
TEST np.zeros((pad_dim,int(features)) (16, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (14, 4)
TEST np.zeros((pad_dim,int(features)) (50, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (2, 4)
TEST np.zeros((pad_dim,int(features)) (62, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 48, 12, 2]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 5
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (48, 4)
TEST np.zeros((pad_dim,int(features)) (16, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (12, 4)
TEST np.zeros((pad_dim,int(features)) (52, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (2, 4)
TEST np.zeros((pad_dim,int(features)) (62, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 48, 4, 2]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 5
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (48, 4)
TEST np.zeros((pad_dim,int(features)) (16, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (4, 4)
TEST np.zeros((pad_dim,int(features)) (60, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (2, 4)
TEST np.zeros((pad_dim,int(features)) (62, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 44, 12]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 4
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (44, 4)
TEST np.zeros((pad_dim,int(features)) (20, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (12, 4)
TEST np.zeros((pad_dim,int(features)) (52, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 40, 16, 2]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 5
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (40, 4)
TEST np.zeros((pad_dim,int(features)) (24, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (16, 4)
TEST np.zeros((pad_dim,int(features)) (48, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (2, 4)
TEST np.zeros((pad_dim,int(features)) (62, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 50, 14, 6, 2]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 6
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (50, 4)
TEST np.zeros((pad_dim,int(features)) (14, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (14, 4)
TEST np.zeros((pad_dim,int(features)) (50, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (6, 4)
TEST np.zeros((pad_dim,int(features)) (58, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (2, 4)
TEST np.zeros((pad_dim,int(features)) (62, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 42, 8]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 4
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (42, 4)
TEST np.zeros((pad_dim,int(features)) (22, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (8, 4)
TEST np.zeros((pad_dim,int(features)) (56, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 44, 10]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 4
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (44, 4)
TEST np.zeros((pad_dim,int(features)) (20, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (10, 4)
TEST np.zeros((pad_dim,int(features)) (54, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 52, 14]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 4
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (52, 4)
TEST np.zeros((pad_dim,int(features)) (12, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (14, 4)
TEST np.zeros((pad_dim,int(features)) (50, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 42, 4, 2]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 5
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (42, 4)
TEST np.zeros((pad_dim,int(features)) (22, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (4, 4)
TEST np.zeros((pad_dim,int(features)) (60, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (2, 4)
TEST np.zeros((pad_dim,int(features)) (62, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 48, 14, 2]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 5
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (48, 4)
TEST np.zeros((pad_dim,int(features)) (16, 4)
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
subjets per level= [32, 64, 44, 6, 2]
--------------------------------------------------------------------------------
TEST contents[i].shape= (14, 4)
--------------------------------------------------------------------------------
Number of levels= 5
TEST np.zeros((pad_dim,int(features)) (50, 4)
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (2, 4)
TEST np.zeros((pad_di--------------------------------------------------------------------------------
subjets per level= [32, 64, 42, 12]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 4
--------------------------------------------------------------------------------
m,int(features)) (62, 4)
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level= 64
max_n_level and len(levels[i])= 64 64
--------------------------------------------------------------------------------
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
TEST np.zeros((pad_dim,int(features)) (32, 4)
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (42, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
TEST np.zeros((pad_dim,int(features)) (22, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST contents[i].shape= (12, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
TEST np.zeros((pad_dim,int(features)) (52, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (44, 4)
TEST np.zeros((pad_dim,int(features)) (20, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (6, 4)
TEST np.zeros((pad_dim,int(features)) (58, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (2, 4)
TEST np.zeros((pad_dim,int(features)) (62, 4)
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
subjets per level= [32, 64, 44, 10]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 4
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
subjets per level= [32, 64, 44, 6, 2]
max_n_level and len(levels[i])= 64 64
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
TEST contents[i].shape= (32, 4)
Number of levels= 5
-----------------------------------------------------------TEST np.zeros((pad_dim,int(features)) (32, 4)
---------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
max_n_level= 64
////////////////////////////////////////////////////////////////////////////////////////////////////
--------------------------------------------------------------------------------
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (44, 4)
TEST np.zeros((pad_dim,int(features)) (20, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST np.zeros((pad_dim,int(features)) (32, 4)
TEST contents[i].shape= (10, 4)
TEST np.zeros((pad_dim,int(features)) (54, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
--------------------------------------------------------------------------------
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
subjets per level= [32, 64, 46, 16, 4, 4]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 6
////////////////////////////////////////////////////////////////////////////////////////////////////
--------------------------------------------------------------------------------
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (44, 4)
TEST np.zeros((pad_dim,int(features)) (20, 4)
max_n_level= 64
////////////////////////////////////////////////////////////////////////////////////////////////////
--------------------------------------------------------------------------------
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (6, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
TEST np.zeros((pad_dim,int(features)) (58, 4)
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (2, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
TEST np.zeros((pad_dim,int(features)) (62, 4)
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (46, 4)
TEST np.zeros((pad_dim,int(features)) (18, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (16, 4)
TEST np.zeros((pad_dim,int(features)) (48, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (4, 4)
TEST np.zeros((pad_dim,int(features)) (60, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (4, 4)
TEST np.zeros((pad_dim,int(features)) (60, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 36, 10, 2, 2]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 6
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (36, 4)
TEST np.zeros((pad_dim,int(features)) (28, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (10, 4)
TEST np.zeros((pad_dim,int(features)) (54, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (2, 4)
TEST np.zeros((pad_dim,int(features)) (62, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (2, 4)
TEST np.zeros((pad_dim,int(features)) (62, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 48, 8]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 4
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (48, 4)
TEST np.zeros((pad_dim,int(features)) (16, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (8, 4)
TEST np.zeros((pad_dim,int(features)) (56, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 60, 18]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 4
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (60, 4)
TEST np.zeros((pad_dim,int(features)) (4, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (18, 4)
TEST np.zeros((pad_dim,int(features)) (46, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 50, 12, 2]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 5
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (50, 4)
TEST np.zeros((pad_dim,int(features)) (14, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (12, 4)
TEST np.zeros((pad_dim,int(features)) (52, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (2, 4)
TEST np.zeros((pad_dim,int(features)) (62, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 44, 8]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 4
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (44, 4)
TEST np.zeros((pad_dim,int(features)) (20, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (8, 4)
TEST np.zeros((pad_dim,int(features)) (56, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 50, 10]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 4
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (50, 4)
TEST np.zeros((pad_dim,int(features)) (14, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (10, 4)
TEST np.zeros((pad_dim,int(features)) (54, 4)
train.py:219: RuntimeWarning: divide by zero encountered in true_divide
  inv_fpr = interp(base_tpr, tpr, 1. / fpr)[125]
- Eval metrics : accuracy: 0.5130 ; loss: 0.6959
Epoch 11/30
  0%|                                                                                          | 0/37 [00:00<?, ?it/s]
Checkpoint Directory exists!
--------------------------------------------------------------------------------
subjets per level= [32, 64, 36, 10]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 4
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (36, 4)
TEST np.zeros((pad_dim,int(features)) (28, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 46, 14, 2]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
Number of levels= 5
--------------------------------------------------------------------------------
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (10, 4)
TEST np.zeros((pad_dmax_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
im,int(features)) (54, 4)
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (46, 4)
TEST np.zeros((pad_dim,int(features)) (18, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (14, 4)
TEST np.zeros((pad_dim,int(features)) (50, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (2, 4)
TEST np.zeros((pad_dim,int(features)) (62, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 46, 6, 2]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 5
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (46, 4)
TEST np.zeros((pad_dim,int(features)) (18, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (6, 4)
TEST np.zeros((pad_dim,int(features)) (58, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (2, 4)
TEST np.zeros((pad_dim,int(features)) (62, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 44, 6]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 4
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
--------------------------------------------------------------------------------
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
subjets per level--------------------------------------------------------------------------------
subjets per level= [32, 64, 40, 4, 4]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 5
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
= [32, 64, 38, 18, 6, 2]
////////////////////////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
--------------------------------------------------------------------------------
Number of levels= 6
max_n_level and len(levels[i])= 64 64
--------------------------------------------------------------------------------
TEST contents[i].shape= (40, 4)
max_n_level and len(levels[i])= 64 64
TEST np.zeros((pad_dim,int(features)) (24, 4)
TEST contents[i].shape= (44, 4)
max_n_level= 64
TEST np.zeros((pad_dim,int(features)) (20, 4)
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
////////////////////////////////////////////////////////////////////////////////////////////////////
TEST contents[i].shape= (4, 4)
///////////////////////////////////////////TEST np.zeros((pad_dim,int(features)) (60, 4)
/////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (4, 4)
max_n_level and len(levels[i])= 64 64
TEST np.zeros((pad_dim,int(features)) (60, 4)
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (38, 4)
TEST np.zeros((pad_dim,int(features)) (26, 4)
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (6, 4)
TEST np.zeros((pad_dim,int(features)) (58, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (18, 4)
TEST np.zeros((pad_dim,int(features)) (46, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (6, 4)
TEST np.zeros((pad_dim,int(features)) (58, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (2, 4)
TEST np.zeros((pad_dim,int(features)) (62, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 40, 12, 2]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 5
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (40, 4)
TEST np.zeros((pad_dim,int(features)) (24, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (12, 4)
TEST np.zeros((pad_dim,int(features)) (52, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (2, 4)
TEST np.zeros((pad_dim,int(features)) (62, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 36, 10]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 4
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (36, 4)
TEST np.zeros((pad_dim,int(features)) (28, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (10, 4)
TEST np.zeros((pad_dim,int(features)) (54, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 58, 16, 4]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 5
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (58, 4)
TEST np.zeros((pad_dim,int(features)) (6, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (16, 4)
TEST np.zeros((pad_dim,int(features)) (48, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (4, 4)
TEST np.zeros((pad_dim,int(features)) (60, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 46, 16, 4]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 5
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (46, 4)
TEST np.zeros((pad_dim,int(features)) (18, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (16, 4)
TEST np.zeros((pad_dim,int(features)) (48, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (4, 4)
TEST np.zeros((pad_dim,int(features)) (60, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 40, 6]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 4
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (40, 4)
TEST np.zeros((pad_dim,int(features)) (24, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (6, 4)
TEST np.zeros((pad_dim,int(features)) (58, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 36, 4]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 4
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (36, 4)
TEST np.zeros((pad_dim,int(features)) (28, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (4, 4)
TEST np.zeros((pad_dim,int(features)) (60, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 54, 16, 2]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 5
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (54, 4)
TEST np.zeros((pad_dim,int(features)) (10, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (16, 4)
TEST np.zeros((pad_dim,int(features)) (48, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (2, 4)
TEST np.zeros((pad_dim,int(features)) (62, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 40, 8, 4]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 5
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (40, 4)
TEST np.zeros((pad_dim,int(features)) (24, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (8, 4)
TEST np.zeros((pad_dim,int(features)) (56, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (4, 4)
TEST np.zeros((pad_dim,int(features)) (60, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 36, 16]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 4
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (36, 4)
TEST np.zeros((pad_dim,int(features)) (28, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (16, 4)
TEST np.zeros((pad_dim,int(features)) (48, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 36, 6]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 4
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (36, 4)
TEST np.zeros((pad_dim,int(features)) (28, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (6, 4)
TEST np.zeros((pad_dim,int(features)) (58, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 42, 14, 4]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 5
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (42, 4)
TEST np.zeros((pad_dim,int(features)) (22, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (14, 4)
TEST np.zeros((pad_dim,int(features)) (50, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (4, 4)
TEST np.zeros((pad_dim,int(features)) (60, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 44, 6, 2]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 5
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (44, 4)
TEST np.zeros((pad_dim,int(features)) (20, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (6, 4)
TEST np.zeros((pad_dim,int(features)) (58, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (2, 4)
TEST np.zeros((pad_dim,int(features)) (62, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 40, 22, 2]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 5
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (40, 4)
TEST np.zeros((pad_dim,int(features)) (24, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (22, 4)
TEST np.zeros((pad_dim,int(features)) (42, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (2, 4)
TEST np.zeros((pad_dim,int(features)) (62, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 50, 14, 2]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 5
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (50, 4)
TEST np.zeros((pad_dim,int(features)) (14, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (14, 4)
TEST np.zeros((pad_dim,int(features)) (50, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (2, 4)
TEST np.zeros((pad_dim,int(features)) (62, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 34, 8]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 4
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (34, 4)
TEST np.zeros((pad_dim,int(features)) (30, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (8, 4)
TEST np.zeros((pad_dim,int(features)) (56, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 42, 12]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 4
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (42, 4)
TEST np.zeros((pad_dim,int(features)) (22, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (12, 4)
TEST np.zeros((pad_dim,int(features)) (52, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 44, 10, 2]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 5
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (44, 4)
TEST np.zeros((pad_dim,int(features)) (20, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (10, 4)
TEST np.zeros((pad_dim,int(features)) (54, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (2, 4)
TEST np.zeros((pad_dim,int(features)) (62, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 42, 8, 4]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 5
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (42, 4)
TEST np.zeros((pad_dim,int(features)) (22, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (8, 4)
TEST np.zeros((pad_dim,int(features)) (56, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (4, 4)
TEST np.zeros((pad_dim,int(features)) (60, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 42, 12, 2]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 5
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (42, 4)
TEST np.zeros((pad_dim,int(features)) (22, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (12, 4)
TEST np.zeros((pad_dim,int(features)) (52, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (2, 4)
TEST np.zeros((pad_dim,int(features)) (62, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 40, 16, 2]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 5
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (40, 4)
TEST np.zeros((pad_dim,int(features)) (24, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (16, 4)
TEST np.zeros((pad_dim,int(features)) (48, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (2, 4)
TEST np.zeros((pad_dim,int(features)) (62, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 38, 12]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 4
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (38, 4)
TEST np.zeros((pad_dim,int(features)) (26, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (12, 4)
TEST np.zeros((pad_dim,int(features)) (52, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 48, 14, 2]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 5
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (48, 4)
TEST np.zeros((pad_dim,int(features)) (16, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (14, 4)
TEST np.zeros((pad_dim,int(features)) (50, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (2, 4)
TEST np.zeros((pad_dim,int(features)) (62, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 48, 12, 2]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 5
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (48, 4)
TEST np.zeros((pad_dim,int(features)) (16, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (12, 4)
TEST np.zeros((pad_dim,int(features)) (52, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (2, 4)
TEST np.zeros((pad_dim,int(features)) (62, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 48, 4, 2]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 5
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (48, 4)
TEST np.zeros((pad_dim,int(features)) (16, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (4, 4)
TEST np.zeros((pad_dim,int(features)) (60, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (2, 4)
TEST np.zeros((pad_dim,int(features)) (62, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 44, 12]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 4
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (44, 4)
TEST np.zeros((pad_dim,int(features)) (20, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (12, 4)
TEST np.zeros((pad_dim,int(features)) (52, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 40, 16, 2]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 5
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (40, 4)
TEST np.zeros((pad_dim,int(features)) (24, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (16, 4)
TEST np.zeros((pad_dim,int(features)) (48, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (2, 4)
TEST np.zeros((pad_dim,int(features)) (62, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 50, 14, 6, 2]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 6
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (50, 4)
TEST np.zeros((pad_dim,int(features)) (14, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (14, 4)
TEST np.zeros((pad_dim,int(features)) (50, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (6, 4)
TEST np.zeros((pad_dim,int(features)) (58, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (2, 4)
TEST np.zeros((pad_dim,int(features)) (62, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 42, 8]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 4
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (42, 4)
TEST np.zeros((pad_dim,int(features)) (22, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (8, 4)
100%|█████████████████████████████████████████████████████████████████████| 37/37 [00:17<00:00,  2.13it/s, loss=0.682]
- Train metrics: accuracy: 0.5954 ; loss: 0.6777
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (2, 4)
TEST np.zeros((pad_dim,int(features)) (62, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 48, 14, 2]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 5
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (48, 4)
TEST np.zeros((pad_dim,int(features)) (16, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (14, 4)
TEST np.zeros((pad_dim,int(features)) (50, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (2, 4)
TEST np.zeros((pad_dim,int(features)) (62, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 44, 6, 2]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 5
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
subjets per level= [32, 64, 42, 12]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 4
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (42, 4)
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (44, 4)
TEST np.zeros((pad_dim,int(features)) (20, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
TEST np.zeros((pad_dim,int(features)) (22, 4)
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (6, 4)
TEST np.zeros((pad_dim,int(features)) (58, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (2, 4)
TEST np.zeros((pad_dim,int(features)) (62, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (12, 4)
TEST np.zeros((pad_dim,int(features)) (52, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 44, 10]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 4
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (44, 4)
TEST n--------------------------------------------------------------------------------
subjets per level= [32, 64, 44, 6, 2]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 5
--------------------------------------------------------------------------------
p.zeros((pad_dim,int(features)) (20, 4)
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (10, 4)
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (54, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (44, 4)
TEST np.zeros((pad_dim,int(features)) (20, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
--------------------------------------------------------------------------------
max_n_level and len(levels[i])= 64 64
subjets per level= [32, 64, 46, 16, 4, 4]
TEST contents[i].shape= (6, 4)
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 6
TEST np.zeros((pad_dim,int(features)) (58, 4)
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (2, 4)
TEST np.zeros((pad_dim,int(features)) (62, 4)
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (46, 4)
TEST np.zeros((pad_dim,int(features)) (18, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (16, 4)
TEST np.zeros((pad_dim,int(features)) (48, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (4, 4)
TEST np.zeros((pad_dim,int(features)) (60, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (4, 4)
TEST np.zeros((pad_dim,int(features)) (60, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 36, 10, 2, 2]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 6
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (36, 4)
TEST np.zeros((pad_dim,int(features)) (28, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (10, 4)
TEST np.zeros((pad_dim,int(features)) (54, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (2, 4)
TEST np.zeros((pad_dim,int(features)) (62, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (2, 4)
TEST np.zeros((pad_dim,int(features)) (62, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 48, 8]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 4
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (48, 4)
TEST np.zeros((pad_dim,int(features)) (16, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (8, 4)
TEST np.zeros((pad_dim,int(features)) (56, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 60, 18]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 4
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (60, 4)
TEST np.zeros((pad_dim,int(features)) (4, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (18, 4)
TEST np.zeros((pad_dim,int(features)) (46, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 50, 12, 2]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 5
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (50, 4)
TEST np.zeros((pad_dim,int(features)) (14, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (12, 4)
TEST np.zeros((pad_dim,int(features)) (52, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (2, 4)
TEST np.zeros((pad_dim,int(features)) (62, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 44, 8]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 4
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (44, 4)
TEST np.zeros((pad_dim,int(features)) (20, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (8, 4)
TEST np.zeros((pad_dim,int(features)) (56, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 50, 10]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 4
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (50, 4)
TEST np.zeros((pad_dim,int(features)) (14, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (10, 4)
TEST np.zeros((pad_dim,int(features)) (54, 4)
train.py:219: RuntimeWarning: divide by zero encountered in true_divide
  inv_fpr = interp(base_tpr, tpr, 1. / fpr)[125]
- Eval metrics : accuracy: 0.5208 ; loss: 0.6954
Checkpoint Directory exists!
Epoch 12/30
100%|█████████████████████████████████████████████████████████████████████| 37/37 [00:19<00:00,  1.93it/s, loss=0.680]
- Train metrics: accuracy: 0.6036 ; loss: 0.6766
--------------------------------------------------------------------------------
subjets per level= [32, 64, 46, 14, 2]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 5
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (46, 4)
TEST np.zeros((pad_dim,int(features)) (18, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (14, 4)
TEST np.zeros((pad_dim,int(features)) (50, 4)
//////////////////////////////////////////--------------------------------------------------------------------------------
subjets per level= [32, 64, 46, 6, 2]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 5
--------------------------------------------------------------------------------
//////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (2, 4)
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
subjets per level= [32, 64, 36, 10]
TEST np.zeros((pad_dim,int(features)) (62, 4)
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 4
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level= 64
max_n_level and len(levels[i])= 64 64
--------------------------------------------------------------------------------
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
TEST np.zeros((pad_dim,int(features)) (0, 4)
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (46, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (36, 4)
TEST np.zeros((pad_dim,int(features)) (28, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (10, 4)
TEST np.zeros((pad_dim,int(features)) (18, 4)
TEST np.zeros((pad_dim,int(features)) (54, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (6, 4)
TEST np.zeros((pad_dim,int(features)) (58, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (2, 4)
TEST np.zeros((pad_dim,int(features)) (62, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 40, 4, 4]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 5
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (40, 4)
TEST np.zeros((pad_dim,int(features)) (24, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (4, 4)
TEST np.zeros((pad_dim,int(features)) (60, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (4, 4)
TEST np.zeros((pad_dim,int(features)) (60, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 44, 6]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 4
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
subjets per level= [32, 64, 38, 18, 6, 2]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 6
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
max_n_level and len(levels[i])= 64 64
TEST np.zeros((pad_dim,int(features)) (32, 4)
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (38, 4)
TEST np.zeros((pad_dim,int(features)) (26, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
////////////////////////////////////////////////////////////////////////////////////////////////////
TEST contents[i].shape= (44, 4)
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (18, 4)
TEST np.zeros((pad_dim,int(features)) (20, 4)
TEST np.zeros((pad_dim,int(features)) (46, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (6, 4)
TEST np.zeros((pad_dim,int(features)) (58, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (6, 4)
TEST np.zeros((pad_dim,int(features)) (58, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (2, 4)
TEST np.zeros((pad_dim,int(features)) (62, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 40, 12, 2]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 5
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (40, 4)
TEST np.zeros((pad_dim,int(features)) (24, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (12, 4)
TEST np.zeros((pad_dim,int(features)) (52, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (2, 4)
TEST np.zeros((pad_dim,int(features)) (62, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 36, 10]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 4
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (36, 4)
TEST np.zeros((pad_dim,int(features)) (28, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (10, 4)
TEST np.zeros((pad_dim,int(features)) (54, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 58, 16, 4]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 5
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (58, 4)
TEST np.zeros((pad_dim,int(features)) (6, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (16, 4)
TEST np.zeros((pad_dim,int(features)) (48, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (4, 4)
TEST np.zeros((pad_dim,int(features)) (60, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 46, 16, 4]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 5
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (46, 4)
TEST np.zeros((pad_dim,int(features)) (18, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (16, 4)
TEST np.zeros((pad_dim,int(features)) (48, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (4, 4)
TEST np.zeros((pad_dim,int(features)) (60, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 40, 6]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 4
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (40, 4)
TEST np.zeros((pad_dim,int(features)) (24, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (6, 4)
TEST np.zeros((pad_dim,int(features)) (58, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 36, 4]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 4
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (36, 4)
TEST np.zeros((pad_dim,int(features)) (28, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (4, 4)
TEST np.zeros((pad_dim,int(features)) (60, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 54, 16, 2]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 5
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (54, 4)
TEST np.zeros((pad_dim,int(features)) (10, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (16, 4)
TEST np.zeros((pad_dim,int(features)) (48, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (2, 4)
TEST np.zeros((pad_dim,int(features)) (62, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 40, 8, 4]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 5
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (40, 4)
TEST np.zeros((pad_dim,int(features)) (24, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (8, 4)
TEST np.zeros((pad_dim,int(features)) (56, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (4, 4)
TEST np.zeros((pad_dim,int(features)) (60, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 36, 16]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 4
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (36, 4)
TEST np.zeros((pad_dim,int(features)) (28, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (16, 4)
TEST np.zeros((pad_dim,int(features)) (48, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 36, 6]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 4
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (36, 4)
TEST np.zeros((pad_dim,int(features)) (28, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (6, 4)
TEST np.zeros((pad_dim,int(features)) (58, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 42, 14, 4]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 5
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (42, 4)
TEST np.zeros((pad_dim,int(features)) (22, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (14, 4)
TEST np.zeros((pad_dim,int(features)) (50, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (4, 4)
TEST np.zeros((pad_dim,int(features)) (60, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 44, 6, 2]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 5
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (44, 4)
TEST np.zeros((pad_dim,int(features)) (20, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (6, 4)
TEST np.zeros((pad_dim,int(features)) (58, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (2, 4)
TEST np.zeros((pad_dim,int(features)) (62, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 40, 22, 2]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 5
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (40, 4)
TEST np.zeros((pad_dim,int(features)) (24, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (22, 4)
TEST np.zeros((pad_dim,int(features)) (42, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (2, 4)
TEST np.zeros((pad_dim,int(features)) (62, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 50, 14, 2]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 5
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (50, 4)
TEST np.zeros((pad_dim,int(features)) (14, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (14, 4)
TEST np.zeros((pad_dim,int(features)) (50, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (2, 4)
TEST np.zeros((pad_dim,int(features)) (62, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 34, 8]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 4
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (34, 4)
TEST np.zeros((pad_dim,int(features)) (30, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (8, 4)
TEST np.zeros((pad_dim,int(features)) (56, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 42, 12]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 4
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (42, 4)
TEST np.zeros((pad_dim,int(features)) (22, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (12, 4)
TEST np.zeros((pad_dim,int(features)) (52, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 44, 10, 2]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 5
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (44, 4)
TEST np.zeros((pad_dim,int(features)) (20, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (10, 4)
TEST np.zeros((pad_dim,int(features)) (54, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (2, 4)
TEST np.zeros((pad_dim,int(features)) (62, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 42, 8, 4]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 5
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (42, 4)
TEST np.zeros((pad_dim,int(features)) (22, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (8, 4)
TEST np.zeros((pad_dim,int(features)) (56, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (4, 4)
TEST np.zeros((pad_dim,int(features)) (60, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 42, 12, 2]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 5
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (42, 4)
TEST np.zeros((pad_dim,int(features)) (22, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (12, 4)
TEST np.zeros((pad_dim,int(features)) (52, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (2, 4)
TEST np.zeros((pad_dim,int(features)) (62, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 40, 16, 2]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
train.py:219: RuntimeWarning: divide by zero encountered in true_divide
  inv_fpr = interp(base_tpr, tpr, 1. / fpr)[125]
- Eval metrics : accuracy: 0.5182 ; loss: 0.6952
TEST contents[i].shape= (16, 4)
TEST np.zeros((pad_dim,int(features)) (48, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (2, 4)
TEST np.zeros((pad_dim,int(features)) (62, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 38, 12]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 4
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (38, 4)
TEST np.zeros((pad_dim,int(features)) (26, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (12, 4)
TEST np.zeros((pad_dim,int(features)) (52, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 48, 14, 2]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 5
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (48, 4)
TEST np.zeros((pad_dim,int(features)) (16, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (14, 4)
TEST np.zeros((pad_dim,int(features)) (50, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (2, 4)
TEST np.zeros((pad_dim,int(features)) (62, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 48, 12, 2]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 5
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (48, 4)
TEST np.zeros((pad_dim,int(features)) (16, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (12, 4)
TEST np.zeros((pad_dim,int(features)) (52, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (2, 4)
TEST np.zeros((pad_dim,int(features)) (62, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 48, 4, 2]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 5
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (48, 4)
TEST np.zeros((pad_dim,int(features)) (16, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (4, 4)
TEST np.zeros((pad_dim,int(features)) (60, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (2, 4)
TEST np.zeros((pad_dim,int(features)) (62, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 44, 12]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 4
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (44, 4)
TEST np.zeros((pad_dim,int(features)) (20, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (12, 4)
TEST np.zeros((pad_dim,int(features)) (52, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 40, 16, 2]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 5
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (40, 4)
TEST np.zeros((pad_dim,int(features)) (24, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (16, 4)
TEST np.zeros((pad_dim,int(features)) (48, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (2, 4)
TEST np.zeros((pad_dim,int(features)) (62, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 50, 14, 6, 2]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 6
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (50, 4)
TEST np.zeros((pad_dim,int(features)) (14, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (14, 4)
TEST np.zeros((pad_dim,int(features)) (50, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (6, 4)
TEST np.zeros((pad_dim,int(features)) (58, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (2, 4)
TEST np.zeros((pad_dim,int(features)) (62, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 42, 8]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 4
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (42, 4)
TEST np.zeros((pad_dim,int(features)) (22, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (8, 4)
TEST np.zeros((pad_dim,int(features)) (56, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 44, 10]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 4
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (44, 4)
TEST np.zeros((pad_dim,int(features)) (20, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (10, 4)
TEST np.zeros((pad_dim,int(features)) (54, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 52, 14]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 4
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (52, 4)
TEST np.zeros((pad_dim,int(features)) (12, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (14, 4)
TEST np.zeros((pad_dim,int(features)) (50, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 42, 4, 2]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 5
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (42, 4)
TEST np.zeros((pad_dim,int(features)) (22, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (4, 4)
TEST np.zeros((pad_dim,int(features)) (60, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (2, 4)
TEST np.zeros((pad_dim,int(features)) (62, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 48, 14, 2]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 5
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
--------------------------------------------------------------------------------
TEST np.zeros((pad_dim,int(features)) (32, 4)
subjets per level= [32, 64, 44, 6, 2]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 5
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
////
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (44, 4)
TEST np.zeros((pad_dim,int(features)) (20, 4)
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (48, 4)
TEST np.zeros((pad_dim,int(features)) (16, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (14, 4)
max_n_level and len(levels[i])= 64 64
TEST np.zeros((pad_dim,int(features)) (50, 4)
TEST contents[i].shape= (6, 4)
TEST np.zeros((pad_dim,int(features)) (58, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (2, 4)
TEST np.zeros((pad_dim,int(features)) (62, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (2, 4)
TEST np.zeros((pad_dim,int(features)) (62, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 42, 12]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 4
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (42, 4)
TEST np.zeros((pad_dim,int(features)) (22, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (12, 4)
TEST np.zeros((pad_dim,int(features)) (52, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 44, 6, 2]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 5
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (44, 4)
TEST np.zeros((pad_dim,int(features)) (20, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (6, 4)
TEST np.zeros((pad_dim,int(features)) (58, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
--------------------------------------------------------------------------------
subjets per level= [32, 64, 44, 10]
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (2, 4)
TEST np.zeros((pad_dim,int(features)) (62, 4)
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 4
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
--------------------------------------------------------------------------------
TEST np.zeros((pad_dim,int(features)) (0, 4)
subjets per level= [32, 64, 46, 16, 4, 4]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
Number of levels= 6
--------------------------------------------------------------------------------
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (44, 4)
max_n_level= 64
--------------------------------------------------------------------------------
TEST np.zeros((pad_dim,int(features)) (20, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST contents[i].shape= (10, 4)
TEST np.zeros((pad_dim,int(features)) (54, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (46, 4)
TEST np.zeros((pad_dim,int(features)) (18, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (16, 4)
TEST np.zeros((pad_dim,int(features)) (48, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (4, 4)
TEST np.zeros((pad_dim,int(features)) (60, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (4, 4)
TEST np.zeros((pad_dim,int(features)) (60, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 36, 10, 2, 2]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 6
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (36, 4)
TEST np.zeros((pad_dim,int(features)) (28, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (10, 4)
TEST np.zeros((pad_dim,int(features)) (54, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (2, 4)
TEST np.zeros((pad_dim,int(features)) (62, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (2, 4)
TEST np.zeros((pad_dim,int(features)) (62, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 48, 8]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 4
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (48, 4)
TEST np.zeros((pad_dim,int(features)) (16, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (8, 4)
TEST np.zeros((pad_dim,int(features)) (56, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 60, 18]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 4
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (60, 4)
TEST np.zeros((pad_dim,int(features)) (4, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (18, 4)
TEST np.zeros((pad_dim,int(features)) (46, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 50, 12, 2]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 5
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (50, 4)
TEST np.zeros((pad_dim,int(features)) (14, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (12, 4)
TEST np.zeros((pad_dim,int(features)) (52, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (2, 4)
TEST np.zeros((pad_dim,int(features)) (62, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 44, 8]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 4
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (44, 4)
TEST np.zeros((pad_dim,int(features)) (20, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (8, 4)
TEST np.zeros((pad_dim,int(features)) (56, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 50, 10]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 4
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
Epoch 13/30
  0%|                                                                                          | 0/37 [00:00<?, ?it/s]
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (50, 4)
TEST np.zeros((pad_dim,int(features)) (14, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (10, 4)
TEST np.zeros((pad_dim,int(features)) (54, 4)
100%|█████████████████████████████████████████████████████████████████████| 37/37 [00:14<00:00,  2.50it/s, loss=0.680]
- Train metrics: accuracy: 0.6086 ; loss: 0.6759
--------------------------------------------------------------------------------
subjets per level= [32, 64, 36, 10]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 4
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (36, 4)
TEST np.zeros((pad_dim,int(features)) (28, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
--------------------------------------------------------------------------------
TEST contents[i].shape= (10, 4)
subjets per level= [32, 64, 46, 14, 2]
TEST np.zeros((pad_dim,int(features)) (54, 4)
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 5
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (46, 4)
TEST np.zeros((pad_dim,int(features)) (18, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (14, 4)
TEST np.zeros((pad_dim,int(features)) (50, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
--------------------------------------------------------------------------------
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (2, 4)
subjets per level= [32, 64, 46, 6, 2]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
TEST np.zeros((pad_dim,int(features)) (62, 4)
Number of levels= 5
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (46, 4)
TEST np.zeros((pad_dim,int(features)) (18, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (6, 4)
TEST np.zeros((pad_dim,int(features)) (58, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (2, 4)
TEST np.zeros((pad_dim,int(features)) (62, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 44, 6]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 4
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (44, 4)
TEST np.zeros((pad_dim,int(features)) (20, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (6, 4)
TEST np.zeros((pad_dim,int(features)) (58, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 38, 18, 6, 2]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 6
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
--------------------------------------------------------------------------------
max_n_level and len(levels[i])= 64 64
subjets per level= [32, 64, 40, 4, 4]
--------------------------------------------------------------------------------
TEST contents[i].shape= (38, 4)
--------------------------------------------------------------------------------
Number of levels= 5
--------------------------------------------------------------------------------
TEST np.zeros((pad_dim,int(features)) (26, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (18, 4)
max_n_level= 64
--------------------------------------------------------------------------------
TEST np.zeros((pad_dim,int(features)) (46, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (6, 4)
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (58, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (2, 4)
TEST np.zeros((pad_dim,int(features)) (62, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (40, 4)
TEST np.zeros((pad_dim,int(features)) (24, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (4, 4)
TEST np.zeros((pad_dim,int(features)) (60, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (4, 4)
TEST np.zeros((pad_dim,int(features)) (60, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 40, 12, 2]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 5
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (40, 4)
TEST np.zeros((pad_dim,int(features)) (24, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (12, 4)
TEST np.zeros((pad_dim,int(features)) (52, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (2, 4)
TEST np.zeros((pad_dim,int(features)) (62, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 36, 10]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 4
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (36, 4)
TEST np.zeros((pad_dim,int(features)) (28, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (10, 4)
TEST np.zeros((pad_dim,int(features)) (54, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 58, 16, 4]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 5
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (58, 4)
TEST np.zeros((pad_dim,int(features)) (6, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (16, 4)
TEST np.zeros((pad_dim,int(features)) (48, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (4, 4)
TEST np.zeros((pad_dim,int(features)) (60, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 46, 16, 4]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 5
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (46, 4)
TEST np.zeros((pad_dim,int(features)) (18, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (16, 4)
TEST np.zeros((pad_dim,int(features)) (48, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (4, 4)
TEST np.zeros((pad_dim,int(features)) (60, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 40, 6]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 4
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (40, 4)
TEST np.zeros((pad_dim,int(features)) (24, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (6, 4)
TEST np.zeros((pad_dim,int(features)) (58, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 36, 4]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 4
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (36, 4)
TEST np.zeros((pad_dim,int(features)) (28, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (4, 4)
TEST np.zeros((pad_dim,int(features)) (60, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 54, 16, 2]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 5
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (54, 4)
TEST np.zeros((pad_dim,int(features)) (10, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (16, 4)
TEST np.zeros((pad_dim,int(features)) (48, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (2, 4)
TEST np.zeros((pad_dim,int(features)) (62, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 40, 8, 4]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 5
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (40, 4)
TEST np.zeros((pad_dim,int(features)) (24, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (8, 4)
TEST np.zeros((pad_dim,int(features)) (56, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (4, 4)
TEST np.zeros((pad_dim,int(features)) (60, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 36, 16]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 4
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (36, 4)
TEST np.zeros((pad_dim,int(features)) (28, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (16, 4)
TEST np.zeros((pad_dim,int(features)) (48, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 36, 6]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 4
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (36, 4)
TEST np.zeros((pad_dim,int(features)) (28, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (6, 4)
TEST np.zeros((pad_dim,int(features)) (58, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 42, 14, 4]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 5
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (42, 4)
TEST np.zeros((pad_dim,int(features)) (22, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (14, 4)
TEST np.zeros((pad_dim,int(features)) (50, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (4, 4)
TEST np.zeros((pad_dim,int(features)) (60, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 44, 6, 2]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 5
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (44, 4)
TEST np.zeros((pad_dim,int(features)) (20, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (6, 4)
TEST np.zeros((pad_dim,int(features)) (58, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (2, 4)
TEST np.zeros((pad_dim,int(features)) (62, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 40, 22, 2]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 5
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (40, 4)
TEST np.zeros((pad_dim,int(features)) (24, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (22, 4)
TEST np.zeros((pad_dim,int(features)) (42, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (2, 4)
TEST np.zeros((pad_dim,int(features)) (62, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 50, 14, 2]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 5
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (50, 4)
TEST np.zeros((pad_dim,int(features)) (14, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (14, 4)
TEST np.zeros((pad_dim,int(features)) (50, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (2, 4)
TEST np.zeros((pad_dim,int(features)) (62, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 34, 8]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 4
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (34, 4)
TEST np.zeros((pad_dim,int(features)) (30, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (8, 4)
TEST np.zeros((pad_dim,int(features)) (56, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 42, 12]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 4
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (42, 4)
TEST np.zeros((pad_dim,int(features)) (22, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (12, 4)
TEST np.zeros((pad_dim,int(features)) (52, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 44, 10, 2]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 5
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (44, 4)
TEST np.zeros((pad_dim,int(features)) (20, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (10, 4)
TEST np.zeros((pad_dim,int(features)) (54, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (2, 4)
TEST np.zeros((pad_dim,int(features)) (62, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 42, 8, 4]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 5
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (42, 4)
TEST np.zeros((pad_dim,int(features)) (22, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (8, 4)
TEST np.zeros((pad_dim,int(features)) (56, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (4, 4)
TEST np.zeros((pad_dim,int(features)) (60, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 42, 12, 2]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 5
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (42, 4)
TEST np.zeros((pad_dim,int(features)) (22, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (12, 4)
TEST np.zeros((pad_dim,int(features)) (52, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (2, 4)
TEST np.zeros((pad_dim,int(features)) (62, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 40, 16, 2]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 5
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (40, 4)
TEST np.zeros((pad_dim,int(features)) (24, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (16, 4)
TEST np.zeros((pad_dim,int(features)) (48, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (2, 4)
TEST np.zeros((pad_dim,int(features)) (62, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 38, 12]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 4
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (38, 4)
TEST np.zeros((pad_dim,int(features)) (26, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (12, 4)
TEST np.zeros((pad_dim,int(features)) (52, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 48, 14, 2]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 5
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (48, 4)
TEST np.zeros((pad_dim,int(features)) (16, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (14, 4)
TEST np.zeros((pad_dim,int(features)) (50, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (2, 4)
TEST np.zeros((pad_dim,int(features)) (62, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 48, 12, 2]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 5
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (48, 4)
TEST np.zeros((pad_dim,int(features)) (16, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (12, 4)
TEST np.zeros((pad_dim,int(features)) (52, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (2, 4)
TEST np.zeros((pad_dim,int(features)) (62, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 48, 4, 2]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 5
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (48, 4)
TEST np.zeros((pad_dim,int(features)) (16, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (4, 4)
TEST np.zeros((pad_dim,int(features)) (60, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (2, 4)
TEST np.zeros((pad_dim,int(features)) (62, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 44, 12]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 4
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (44, 4)
TEST np.zeros((pad_dim,int(features)) (20, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (12, 4)
TEST np.zeros((pad_dim,int(features)) (52, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 40, 16, 2]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 5
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (40, 4)
TEST np.zeros((pad_dim,int(features)) (24, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (16, 4)
TEST np.zeros((pad_dim,int(features)) (48, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (2, 4)
TEST np.zeros((pad_dim,int(features)) (62, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 50, 14, 6, 2]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 6
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (50, 4)
TEST np.zeros((pad_dim,int(features)) (14, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (14, 4)
TEST np.zeros((pad_dim,int(features)) (50, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (6, 4)
TEST np.zeros((pad_dim,int(features)) (58, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (2, 4)
TEST np.zeros((pad_dim,int(features)) (62, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 42, 8]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 4
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (42, 4)
TEST np.zeros((pad_dim,int(features)) (22, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (8, 4)
TEST np.zeros((pad_dim,int(features)) (56, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 44, 10]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 4
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (44, 4)
TEST np.zeros((pad_dim,int(features)) (20, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (10, 4)
TEST np.zeros((pad_dim,int(features)) (54, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 52, 14]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 4
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (52, 4)
TEST np.zeros((pad_dim,int(features)) (12, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (14, 4)
TEST np.zeros((pad_dim,int(features)) (50, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 42, 4, 2]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 5
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (42, 4)
TEST np.zeros((pad_dim,int(features)) (22, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (4, 4)
TEST np.zeros((pad_dim,int(features)) (60, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (2, 4)
TEST np.zeros((pad_dim,int(features)) (62, 4)
train.py:219: RuntimeWarning: divide by zero encountered in true_divide
  inv_fpr = interp(base_tpr, tpr, 1. / fpr)[125]
- Eval metrics : accuracy: 0.5156 ; loss: 0.6952
--------------------------------------------------------------------------------
subjets per level= [32, 64, 48, 14, 2]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 5
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
subjets per level= [32, 64, 44, 6, 2]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 5
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
max_n_level= 64
TEST np.zeros((pad_dim,int(features)) (32, 4)
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
--------------------------------------------------------------------------------
TEST np.zeros((pad_dim,int(features)) (0, 4)
subjets per level= [32, 64, 42, 12]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
Number of levels= 4
--------------------------------------------------------------------------------
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
TEST np.zeros((pad_dim,int(features)) (0, 4)
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (48, 4)
////////////////////max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST contents[i].shape= (44, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
TEST np.zeros((pad_dim,int(features)) (20, 4)
TEST np.zeros((pad_dim,int(features)) (16, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
////////////////////////////////////////////////////////////////////////////////////////////////////
TEST contents[i].shape= (64, 4)
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (14, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
TEST np.zeros((pad_dim,int(features)) (50, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (6, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////////////////////////
TEST np.zeros((pad_dim,int(features)) (58, 4)
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (42, 4)
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (2, 4)
TEST np.zeros((pad_dim,int(features)) (22, 4)
TEST np.zeros((pad_dim,int(features)) (62, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (2, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
TEST np.zeros((pad_dim,int(features)) (62, 4)
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (12, 4)
TEST np.zeros((pad_dim,int(features)) (52, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 44, 6, 2]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 5
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (44, 4)
TEST np.zeros((pad_dim,int(features)) (20, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (6, 4)
TEST np.zeros((pad_dim,int(features)) (58, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (2, 4)
TEST np.zeros((pad_dim,int(features)) (62, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 46, 16, 4, 4]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 6
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
subjets per level= [32, 64, 44, 10]
////////////////////////////////////////////////////////////////////////////////////////////////////
--------------------------------------------------------------------------------
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
--------------------------------------------------------------------------------
TEST np.zeros((pad_dim,int(features)) (32, 4)
Number of levels= 4
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (46, 4)
TEST np.zeros((pad_dim,int(features)) (18, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (16, 4)
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (48, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (4, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
TEST np.zeros((pad_dim,int(features)) (60, 4)
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
TEST np.zeros((pad_dim,int(features)) (0, 4)
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (4, 4)
TEST np.zeros((pad_dim,int(features)) (60, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (44, 4)
TEST np.zeros((pad_dim,int(features)) (20, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (10, 4)
TEST np.zeros((pad_dim,int(features)) (54, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 36, 10, 2, 2]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 6
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (36, 4)
TEST np.zeros((pad_dim,int(features)) (28, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (10, 4)
TEST np.zeros((pad_dim,int(features)) (54, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (2, 4)
TEST np.zeros((pad_dim,int(features)) (62, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (2, 4)
TEST np.zeros((pad_dim,int(features)) (62, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 48, 8]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 4
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (48, 4)
TEST np.zeros((pad_dim,int(features)) (16, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (8, 4)
TEST np.zeros((pad_dim,int(features)) (56, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 60, 18]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 4
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (60, 4)
TEST np.zeros((pad_dim,int(features)) (4, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (18, 4)
TEST np.zeros((pad_dim,int(features)) (46, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 50, 12, 2]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 5
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (50, 4)
TEST np.zeros((pad_dim,int(features)) (14, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (12, 4)
TEST np.zeros((pad_dim,int(features)) (52, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (2, 4)
TEST np.zeros((pad_dim,int(features)) (62, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 44, 8]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 4
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (44, 4)
TEST np.zeros((pad_dim,int(features)) (20, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (8, 4)
TEST np.zeros((pad_dim,int(features)) (56, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 50, 10]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 4
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (50, 4)
TEST np.zeros((pad_dim,int(features)) (14, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (10, 4)
TEST np.zeros((pad_dim,int(features)) (54, 4)
Epoch 14/30
  0%|                                                                                          | 0/37 [00:00<?, ?it/s]
Checkpoint Directory exists!
--------------------------------------------------------------------------------
subjets per level= [32, 64, 36, 10]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 4
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (36, 4)
TEST np.zeros((pad_dim,int(features)) (28, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (10, 4)
TEST np.zeros((pad_dim,int(features)) (54, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 46, 14, 2]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 5
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (46, 4)
TEST np.zeros((pad_dim,int(features)) (18, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (14, 4)
TEST np.zeros((pad_dim,int(features)) (50, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (2, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 46, 6, 2]
TEST np.zeros((pad_dim,int(features)) (62, 4)
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 5
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (46, 4)
TEST np.zeros((pad_dim,int(features)) (18, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (6, 4)
TEST np.zeros((pad_dim,int(features)) (58, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (2, 4)
TEST np.zeros((pad_dim,int(features)) (62, 4)
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
subjets per level= [32, 64, 40, 4, 4]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 5
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (40, 4)
TEST np.zeros((pad_dim,int(features)) (24, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (4, 4)
TEST np.zeros((pad_dim,int(features)) (60, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (4, 4)
subjets per level= [32, 64, 38, 18, 6, 2]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
TEST np.zeros((pad_dim,int(features)) (60, 4)
Number of levels= 6
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
--------------------------------------------------------------------------------
subjets per level= [32, 64, 44, 6]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 4
--------------------------------------------------------------------------------
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (38, 4)
max_n_level= 64
TEST np.zeros((pad_dim,int(features)) (26, 4)
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
////////////////////////////////////////////////////////////////////////////////////////////////////
TEST contents[i].shape= (32, 4)
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (18, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
TEST np.zeros((pad_dim,int(features)) (46, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (6, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
TEST np.zeros((pad_dim,int(features)) (58, 4)
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (44, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
TEST np.zeros((pad_dim,int(features)) (20, 4)
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (2, 4)
TEST np.zeros((pad_dim,int(features)) (62, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (6, 4)
TEST np.zeros((pad_dim,int(features)) (58, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 40, 12, 2]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 5
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (40, 4)
TEST np.zeros((pad_dim,int(features)) (24, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (12, 4)
TEST np.zeros((pad_dim,int(features)) (52, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (2, 4)
TEST np.zeros((pad_dim,int(features)) (62, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 36, 10]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 4
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (36, 4)
TEST np.zeros((pad_dim,int(features)) (28, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (10, 4)
TEST np.zeros((pad_dim,int(features)) (54, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 58, 16, 4]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 5
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (58, 4)
TEST np.zeros((pad_dim,int(features)) (6, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (16, 4)
TEST np.zeros((pad_dim,int(features)) (48, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (4, 4)
TEST np.zeros((pad_dim,int(features)) (60, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 46, 16, 4]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 5
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (46, 4)
TEST np.zeros((pad_dim,int(features)) (18, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (16, 4)
TEST np.zeros((pad_dim,int(features)) (48, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (4, 4)
TEST np.zeros((pad_dim,int(features)) (60, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 40, 6]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 4
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (40, 4)
TEST np.zeros((pad_dim,int(features)) (24, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (6, 4)
TEST np.zeros((pad_dim,int(features)) (58, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 36, 4]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 4
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (36, 4)
TEST np.zeros((pad_dim,int(features)) (28, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (4, 4)
TEST np.zeros((pad_dim,int(features)) (60, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 54, 16, 2]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 5
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (54, 4)
TEST np.zeros((pad_dim,int(features)) (10, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (16, 4)
TEST np.zeros((pad_dim,int(features)) (48, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (2, 4)
TEST np.zeros((pad_dim,int(features)) (62, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 40, 8, 4]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 5
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (40, 4)
TEST np.zeros((pad_dim,int(features)) (24, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (8, 4)
TEST np.zeros((pad_dim,int(features)) (56, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (4, 4)
TEST np.zeros((pad_dim,int(features)) (60, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 36, 16]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 4
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (36, 4)
TEST np.zeros((pad_dim,int(features)) (28, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (16, 4)
TEST np.zeros((pad_dim,int(features)) (48, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 36, 6]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 4
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (36, 4)
TEST np.zeros((pad_dim,int(features)) (28, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (6, 4)
TEST np.zeros((pad_dim,int(features)) (58, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 42, 14, 4]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 5
--------------------------------------------------------------------------------
max_n_level= 64
100%|█████████████████████████████████████████████████████████████████████| 37/37 [00:16<00:00,  2.28it/s, loss=0.678]
- Train metrics: accuracy: 0.6118 ; loss: 0.6748
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (42, 4)
TEST np.zeros((pad_dim,int(features)) (22, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (14, 4)
TEST np.zeros((pad_dim,int(features)) (50, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (4, 4)
TEST np.zeros((pad_dim,int(features)) (60, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 44, 6, 2]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 5
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (44, 4)
TEST np.zeros((pad_dim,int(features)) (20, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (6, 4)
TEST np.zeros((pad_dim,int(features)) (58, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (2, 4)
TEST np.zeros((pad_dim,int(features)) (62, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 40, 22, 2]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 5
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (40, 4)
TEST np.zeros((pad_dim,int(features)) (24, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (22, 4)
TEST np.zeros((pad_dim,int(features)) (42, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (2, 4)
TEST np.zeros((pad_dim,int(features)) (62, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 50, 14, 2]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 5
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (50, 4)
TEST np.zeros((pad_dim,int(features)) (14, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (14, 4)
TEST np.zeros((pad_dim,int(features)) (50, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (2, 4)
TEST np.zeros((pad_dim,int(features)) (62, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 34, 8]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 4
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (34, 4)
TEST np.zeros((pad_dim,int(features)) (30, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (8, 4)
TEST np.zeros((pad_dim,int(features)) (56, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 42, 12]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 4
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (42, 4)
TEST np.zeros((pad_dim,int(features)) (22, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (12, 4)
TEST np.zeros((pad_dim,int(features)) (52, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 44, 10, 2]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 5
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (44, 4)
TEST np.zeros((pad_dim,int(features)) (20, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (10, 4)
TEST np.zeros((pad_dim,int(features)) (54, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (2, 4)
TEST np.zeros((pad_dim,int(features)) (62, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 42, 8, 4]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 5
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (42, 4)
TEST np.zeros((pad_dim,int(features)) (22, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (8, 4)
TEST np.zeros((pad_dim,int(features)) (56, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (4, 4)
TEST np.zeros((pad_dim,int(features)) (60, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 42, 12, 2]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 5
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (42, 4)
TEST np.zeros((pad_dim,int(features)) (22, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (12, 4)
TEST np.zeros((pad_dim,int(features)) (52, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (2, 4)
TEST np.zeros((pad_dim,int(features)) (62, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 40, 16, 2]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 5
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (40, 4)
TEST np.zeros((pad_dim,int(features)) (24, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (16, 4)
TEST np.zeros((pad_dim,int(features)) (48, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (2, 4)
TEST np.zeros((pad_dim,int(features)) (62, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 38, 12]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 4
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (38, 4)
TEST np.zeros((pad_dim,int(features)) (26, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (12, 4)
TEST np.zeros((pad_dim,int(features)) (52, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 48, 14, 2]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 5
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (48, 4)
TEST np.zeros((pad_dim,int(features)) (16, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (14, 4)
TEST np.zeros((pad_dim,int(features)) (50, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (2, 4)
TEST np.zeros((pad_dim,int(features)) (62, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 48, 12, 2]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 5
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (48, 4)
TEST np.zeros((pad_dim,int(features)) (16, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (12, 4)
TEST np.zeros((pad_dim,int(features)) (52, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (2, 4)
TEST np.zeros((pad_dim,int(features)) (62, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 48, 4, 2]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 5
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (48, 4)
TEST np.zeros((pad_dim,int(features)) (16, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (4, 4)
TEST np.zeros((pad_dim,int(features)) (60, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (2, 4)
TEST np.zeros((pad_dim,int(features)) (62, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 44, 12]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 4
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (44, 4)
TEST np.zeros((pad_dim,int(features)) (20, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (12, 4)
TEST np.zeros((pad_dim,int(features)) (52, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 40, 16, 2]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 5
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (40, 4)
TEST np.zeros((pad_dim,int(features)) (24, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (16, 4)
TEST np.zeros((pad_dim,int(features)) (48, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (2, 4)
TEST np.zeros((pad_dim,int(features)) (62, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 50, 14, 6, 2]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 6
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (50, 4)
TEST np.zeros((pad_dim,int(features)) (14, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (14, 4)
TEST np.zeros((pad_dim,int(features)) (50, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (6, 4)
TEST np.zeros((pad_dim,int(features)) (58, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (2, 4)
TEST np.zeros((pad_dim,int(features)) (62, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 42, 8]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 4
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (42, 4)
TEST np.zeros((pad_dim,int(features)) (22, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (8, 4)
TEST np.zeros((pad_dim,int(features)) (56, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 44, 10]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 4
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (44, 4)
TEST np.zeros((pad_dim,int(features)) (20, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (10, 4)
TEST np.zeros((pad_dim,int(features)) (54, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 52, 14]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 4
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (52, 4)
TEST np.zeros((pad_dim,int(features)) (12, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (14, 4)
TEST np.zeros((pad_dim,int(features)) (50, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 42, 4, 2]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 5
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (42, 4)
TEST np.zeros((pad_dim,int(features)) (22, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (4, 4)
TEST np.zeros((pad_dim,int(features)) (60, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (2, 4)
TEST np.zeros((pad_dim,int(features)) (62, 4)
train.py:219: RuntimeWarning: divide by zero encountered in true_divide
  inv_fpr = interp(base_tpr, tpr, 1. / fpr)[125]
- Eval metrics : accuracy: 0.5104 ; loss: 0.6957
--------------------------------------------------------------------------------
subjets per level= [32, 64, 48, 14, 2]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 5
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (48, 4)
TEST np.zeros((pad_dim,int(features)) (16, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (14, 4)
TEST np.zeros((pad_dim,int(features)) (50, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (2, 4)
--------------------------------------------------------------------------------
TEST np.zeros((pad_dim,int(features)) (62, 4)
subjets per level= [32, 64, 44, 6, 2]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 5
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (44, 4)
TEST np.zeros((pad_dim,int(features)) (20, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
--------------------------------------------------------------------------------
TEST contents[i].shape= (6, 4)
TEST np.zeros((pad_dim,int(features)) (58, 4)
subjets per level= [32, 64, 42, 12]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 4
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (2, 4)
TEST np.zeros((pad_dim,int(features)) (62, 4)
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (42, 4)
TEST np.zeros((pad_dim,int(features)) (22, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (12, 4)
TEST np.zeros((pad_dim,int(features)) (52, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 46, 16, 4, 4]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 6
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (46, 4)
TEST np.zeros((pad_dim,int(features)) (18, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (16, 4)
TEST np.zeros((pad_dim,int(features)) (48, 4)
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
subjets per level= [32, 64, 44, 10]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 4
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
subjets per level= [32, 64, 44, 6, 2]
--------------------------------------------------------------------------------
TEST contents[i].shape= (4, 4)
max_n_level= 64
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 5
--------------------------------------------------------------------------------
TEST np.zeros((pad_dim,int(features)) (60, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level= 64
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (4, 4)
TEST np.zeros((pad_dim,int(features)) (60, 4)
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
////////////////////////////////////////////////////////////////////////////////////////////////////
TEST contents[i].shape= (64, 4)
max_n_level and len(levels[i])= 64 64
TEST np.zeros((pad_dim,int(features)) (0, 4)
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST contents[i].shape= (44, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
TEST np.zeros((pad_dim,int(features)) (20, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (44, 4)
TEST contents[i].shape= (10, 4)
TEST np.zeros((pad_dim,int(features)) (54, 4)
TEST np.zeros((pad_dim,int(features)) (20, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (6, 4)
TEST np.zeros((pad_dim,int(features)) (58, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (2, 4)
TEST np.zeros((pad_dim,int(features)) (62, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 36, 10, 2, 2]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 6
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (36, 4)
TEST np.zeros((pad_dim,int(features)) (28, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (10, 4)
TEST np.zeros((pad_dim,int(features)) (54, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (2, 4)
TEST np.zeros((pad_dim,int(features)) (62, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (2, 4)
TEST np.zeros((pad_dim,int(features)) (62, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 48, 8]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 4
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (48, 4)
TEST np.zeros((pad_dim,int(features)) (16, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (8, 4)
TEST np.zeros((pad_dim,int(features)) (56, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 60, 18]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 4
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (60, 4)
TEST np.zeros((pad_dim,int(features)) (4, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (18, 4)
TEST np.zeros((pad_dim,int(features)) (46, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 50, 12, 2]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 5
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (50, 4)
TEST np.zeros((pad_dim,int(features)) (14, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (12, 4)
TEST np.zeros((pad_dim,int(features)) (52, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (2, 4)
TEST np.zeros((pad_dim,int(features)) (62, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 44, 8]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 4
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (44, 4)
TEST np.zeros((pad_dim,int(features)) (20, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (8, 4)
TEST np.zeros((pad_dim,int(features)) (56, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 50, 10]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 4
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (50, 4)
TEST np.zeros((pad_dim,int(features)) (14, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (10, 4)
TEST np.zeros((pad_dim,int(features)) (54, 4)
Checkpoint Directory exists!
Epoch 15/30
  0%|                                                                                          | 0/37 [00:00<?, ?it/s]
--------------------------------------------------------------------------------
subjets per level= [32, 64, 36, 10]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 4
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
subjets per level= [32, 64, 46, 14, 2]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 5
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
max_n_level= 64
TEST contents[i].shape= (64, 4)
------------------------------------------TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (36, 4)
TEST np.zeros((pad_dim,int(features)) (28, 4)
--------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
TEST contents[i].shape= (10, 4)
TEST np.zeros((pad_dim,int(features)) (54, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
--------------------------------------------------------------------------------
subjets per level= [32, 64, 46, 6, 2]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 5
--------------------------------------------------------------------------------
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (46, 4)
TEST np.zeros((pad_dim,int(features)) (18, 4)
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
////////////////////////////////////////////////////////////////////////////////////////////////////
TEST contents[i].shape= (64, 4)
max_n_level and len(levels[i])= 64 64
TEST np.zeros((pad_dim,int(features)) (0, 4)
TEST contents[i].shape= (14, 4)
TEST np.zeros((pad_dim,int(features)) (50, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (46, 4)
TEST np.zeros((pad_dim,int(features)) (18, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (2, 4)
TEST contents[i].shape= (6, 4)
TEST np.zeros((pad_dim,int(features)) (62, 4)
TEST np.zeros((pad_dim,int(features)) (58, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (2, 4)
TEST np.zeros((pad_dim,int(features)) (62, 4)
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
subjets per level= [32, 64, 40, 4, 4]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 5
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
subjets per level= [32, 64, 38, 18, 6, 2]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 6
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
///////////////////////////////////////////////////////////////max_n_level= 64
/////////////////////////////////////
max_n_level and len(levels[i])= 64 64
--------------------------------------------------------------------------------
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
subjets per level= [32, 64, 44, 6]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
Number of levels= 4
--------------------------------------------------------------------------------
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (40, 4)
max_n_level= 64
max_n_level and len(levels[i])= 64 64
--------------------------------------------------------------------------------
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (24, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (4, 4)
TEST contents[i].shape= (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
TEST np.zeros((pad_dim,int(features)) (32, 4)
TEST np.zeros((pad_dim,int(features)) (60, 4)
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
//////////TEST np.zeros((pad_dim,int(features)) (0, 4)
//////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (4, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
TEST np.zeros((pad_dim,int(features)) (60, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
////////////////////////////////////////////////////////////////////////////////////////////////////
TEST contents[i].shape= (38, 4)
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (44, 4)
TEST np.zeros((pad_dim,int(features)) (26, 4)
TEST np.zeros((pad_dim,int(features)) (20, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
////////////////////////////////////////////////////////////////////////////////////////////////////
TEST contents[i].shape= (18, 4)
max_n_level and len(levels[i])= 64 64
TEST np.zeros((pad_dim,int(features)) (46, 4)
TEST contents[i].shape= (6, 4)
TEST np.zeros((pad_dim,int(features)) (58, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (6, 4)
TEST np.zeros((pad_dim,int(features)) (58, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (2, 4)
TEST np.zeros((pad_dim,int(features)) (62, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 40, 12, 2]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 5
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (40, 4)
TEST np.zeros((pad_dim,int(features)) (24, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (12, 4)
TEST np.zeros((pad_dim,int(features)) (52, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (2, 4)
TEST np.zeros((pad_dim,int(features)) (62, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 36, 10]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 4
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (36, 4)
TEST np.zeros((pad_dim,int(features)) (28, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (10, 4)
TEST np.zeros((pad_dim,int(features)) (54, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 58, 16, 4]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 5
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (58, 4)
TEST np.zeros((pad_dim,int(features)) (6, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (16, 4)
TEST np.zeros((pad_dim,int(features)) (48, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (4, 4)
TEST np.zeros((pad_dim,int(features)) (60, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 46, 16, 4]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 5
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (46, 4)
TEST np.zeros((pad_dim,int(features)) (18, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (16, 4)
TEST np.zeros((pad_dim,int(features)) (48, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (4, 4)
TEST np.zeros((pad_dim,int(features)) (60, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 40, 6]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 4
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (40, 4)
TEST np.zeros((pad_dim,int(features)) (24, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (6, 4)
TEST np.zeros((pad_dim,int(features)) (58, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 36, 4]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 4
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (36, 4)
TEST np.zeros((pad_dim,int(features)) (28, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (4, 4)
TEST np.zeros((pad_dim,int(features)) (60, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 54, 16, 2]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 5
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (54, 4)
TEST np.zeros((pad_dim,int(features)) (10, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (16, 4)
TEST np.zeros((pad_dim,int(features)) (48, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (2, 4)
TEST np.zeros((pad_dim,int(features)) (62, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 40, 8, 4]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 5
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (40, 4)
TEST np.zeros((pad_dim,int(features)) (24, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (8, 4)
TEST np.zeros((pad_dim,int(features)) (56, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (4, 4)
TEST np.zeros((pad_dim,int(features)) (60, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 36, 16]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 4
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (36, 4)
TEST np.zeros((pad_dim,int(features)) (28, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (16, 4)
TEST np.zeros((pad_dim,int(features)) (48, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 36, 6]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 4
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (36, 4)
TEST np.zeros((pad_dim,int(features)) (28, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (6, 4)
TEST np.zeros((pad_dim,int(features)) (58, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 42, 14, 4]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 5
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (42, 4)
TEST np.zeros((pad_dim,int(features)) (22, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (14, 4)
TEST np.zeros((pad_dim,int(features)) (50, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (4, 4)
TEST np.zeros((pad_dim,int(features)) (60, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 44, 6, 2]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 5
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (44, 4)
TEST np.zeros((pad_dim,int(features)) (20, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (6, 4)
TEST np.zeros((pad_dim,int(features)) (58, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (2, 4)
TEST np.zeros((pad_dim,int(features)) (62, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 40, 22, 2]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 5
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (40, 4)
TEST np.zeros((pad_dim,int(features)) (24, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (22, 4)
TEST np.zeros((pad_dim,int(features)) (42, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (2, 4)
TEST np.zeros((pad_dim,int(features)) (62, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 50, 14, 2]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 5
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (50, 4)
TEST np.zeros((pad_dim,int(features)) (14, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (14, 4)
TEST np.zeros((pad_dim,int(features)) (50, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (2, 4)
TEST np.zeros((pad_dim,int(features)) (62, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 34, 8]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 4
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (34, 4)
TEST np.zeros((pad_dim,int(features)) (30, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (8, 4)
TEST np.zeros((pad_dim,int(features)) (56, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 42, 12]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 4
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (42, 4)
TEST np.zeros((pad_dim,int(features)) (22, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (12, 4)
TEST np.zeros((pad_dim,int(features)) (52, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 44, 10, 2]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 5
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (44, 4)
TEST np.zeros((pad_dim,int(features)) (20, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (10, 4)
TEST np.zeros((pad_dim,int(features)) (54, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (2, 4)
TEST np.zeros((pad_dim,int(features)) (62, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 42, 8, 4]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 5
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (42, 4)
TEST np.zeros((pad_dim,int(features)) (22, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (8, 4)
TEST np.zeros((pad_dim,int(features)) (56, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (4, 4)
TEST np.zeros((pad_dim,int(features)) (60, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 42, 12, 2]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 5
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (42, 4)
TEST np.zeros((pad_dim,int(features)) (22, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (12, 4)
TEST np.zeros((pad_dim,int(features)) (52, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (2, 4)
TEST np.zeros((pad_dim,int(features)) (62, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 40, 16, 2]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 5
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (40, 4)
TEST np.zeros((pad_dim,int(features)) (24, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (16, 4)
TEST np.zeros((pad_dim,int(features)) (48, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (2, 4)
TEST np.zeros((pad_dim,int(features)) (62, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 38, 12]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 4
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (38, 4)
TEST np.zeros((pad_dim,int(features)) (26, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (12, 4)
TEST np.zeros((pad_dim,int(features)) (52, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 48, 14, 2]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 5
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (48, 4)
TEST np.zeros((pad_dim,int(features)) (16, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (14, 4)
TEST np.zeros((pad_dim,int(features)) (50, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (2, 4)
TEST np.zeros((pad_dim,int(features)) (62, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 48, 12, 2]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 5
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (48, 4)
TEST np.zeros((pad_dim,int(features)) (16, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (12, 4)
TEST np.zeros((pad_dim,int(features)) (52, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (2, 4)
TEST np.zeros((pad_dim,int(features)) (62, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 48, 4, 2]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 5
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (48, 4)
TEST np.zeros((pad_dim,int(features)) (16, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (4, 4)
TEST np.zeros((pad_dim,int(features)) (60, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (2, 4)
TEST np.zeros((pad_dim,int(features)) (62, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 44, 12]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 4
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (44, 4)
TEST np.zeros((pad_dim,int(features)) (20, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (12, 4)
TEST np.zeros((pad_dim,int(features)) (52, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 40, 16, 2]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 5
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (40, 4)
TEST np.zeros((pad_dim,int(features)) (24, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (16, 4)
TEST np.zeros((pad_dim,int(features)) (48, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (2, 4)
TEST np.zeros((pad_dim,int(features)) (62, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 50, 14, 6, 2]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 6
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (50, 4)
TEST np.zeros((pad_dim,int(features)) (14, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (14, 4)
TEST np.zeros((pad_dim,int(features)) (50, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (6, 4)
TEST np.zeros((pad_dim,int(features)) (58, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (2, 4)
TEST np.zeros((pad_dim,int(features)) (62, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 42, 8]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 4
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (42, 4)
TEST np.zeros((pad_dim,int(features)) (22, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (8, 4)
TEST np.zeros((pad_dim,int(features)) (56, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 44, 10]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 4
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (44, 4)
TEST np.zeros((pad_dim,int(features)) (20, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (10, 4)
TEST np.zeros((pad_dim,int(features)) (54, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 52, 14]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 4
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (52, 4)
TEST np.zeros((pad_dim,int(features)) (12, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (14, 4)
TEST np.zeros((pad_dim,int(features)) (50, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 42, 4, 2]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 5
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (42, 4)
TEST np.zeros((pad_dim,int(features)) (22, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (4, 4)
TEST np.zeros((pad_dim,int(features)) (60, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (2, 4)
100%|█████████████████████████████████████████████████████████████████████| 37/37 [00:16<00:00,  2.30it/s, loss=0.677]
- Train metrics: accuracy: 0.6069 ; loss: 0.6737
--------------------------------------------------------------------------------
subjets per level= [32, 64, 48, 14, 2]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 5
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (48, 4)
TEST np.zeros((pad_dim,int(features)) (16, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (14, 4)
TEST np.zeros((pad_dim,int(features)) (50, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (2, 4)
TEST np.zeros((pad_dim,int(features)) (62, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 44, 6, 2]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 5
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (44, 4)
TEST np.zeros((pad_dim,int(features)) (20, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (6, 4)
TEST np.zeros((pad_dim,int(features)) (58, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (2, 4)
TEST np.zeros((pad_dim,int(features)) (62, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 42, 12]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 4
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (42, 4)
TEST np.zeros((pad_dim,int(features)) (22, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (12, 4)
TEST np.zeros((pad_dim,int(features)) (52, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 46, 16, 4, 4]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 6
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (46, 4)
TEST np.zeros((pad_dim,int(features)) (18, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (16, 4)
TEST np.zeros((pad_dim,int(features)) (48, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
--------------------------------------------------------------------------------
max_n_level and len(levels[i])= 64 64
subjets per level= [32, 64, 44, 10]
TEST contents[i].shape= (4, 4)
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 4
--------------------------------------------------------------------------------
TEST np.zeros((pad_dim,int(features)) (60, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (4, 4)
TEST np.zeros((pad_dim,int(features)) (60, 4)
max_n_level= 64
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
subjets per level= [32, 64, 44, 6, 2]
--------------------------------------------------------------------------------
max_n_level and len(levels[i])= 64 64
--------------------------------------------------------------------------------
Number of levels= 5
TEST contents[i].shape= (32, 4)
--------------------------------------------------------------------------------
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
max_n_level= 64
TEST np.zeros((pad_dim,int(features)) (0, 4)
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (44, 4)
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
TEST np.zeros((pad_dim,int(features)) (20, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
////////////////////////////////////////////////////////////////////////////////////////////////////
TEST contents[i].shape= (10, 4)
max_n_level and len(levels[i])= 64 64
TEST np.zeros((pad_dim,int(features)) (54, 4)
TEST contents[i].shape= (44, 4)
TEST np.zeros((pad_dim,int(features)) (20, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (6, 4)
TEST np.zeros((pad_dim,int(features)) (58, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (2, 4)
TEST np.zeros((pad_dim,int(features)) (62, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 36, 10, 2, 2]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 6
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (36, 4)
TEST np.zeros((pad_dim,int(features)) (28, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (10, 4)
TEST np.zeros((pad_dim,int(features)) (54, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (2, 4)
TEST np.zeros((pad_dim,int(features)) (62, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (2, 4)
TEST np.zeros((pad_dim,int(features)) (62, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 50, 12, 2]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 5
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (50, 4)
TEST np.zeros((pad_dim,int(features)) (14, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (12, 4)
TEST np.zeros((pad_dim,int(features)) (52, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (2, 4)
TEST np.zeros((pad_dim,int(features)) (62, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 44, 8]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 4
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (44, 4)
TEST np.zeros((pad_dim,int(features)) (20, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (8, 4)
TEST np.zeros((pad_dim,int(features)) (56, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 48, 8]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 4
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (48, 4)
TEST np.zeros((pad_dim,int(features)) (16, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (8, 4)
TEST np.zeros((pad_dim,int(features)) (56, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 60, 18]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 4
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (60, 4)
TEST np.zeros((pad_dim,int(features)) (4, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (18, 4)
TEST np.zeros((pad_dim,int(features)) (46, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 50, 10]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 4
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
train.py:219: RuntimeWarning: divide by zero encountered in true_divide
  inv_fpr = interp(base_tpr, tpr, 1. / fpr)[125]
- Eval metrics : accuracy: 0.5104 ; loss: 0.6960
Checkpoint Directory exists!
Epoch 16/30
  0%|                                                                                          | 0/37 [00:00<?, ?it/s]
--------------------------------------------------------------------------------
subjets per level= [32, 64, 36, 10]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 4
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (36, 4)
TEST np.zeros((pad_dim,int(features)) (28, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (10, 4)
TEST np.zeros((pad_dim,int(features)) (54, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 46, 14, 2]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 5
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
--------------------------------------------------------------------------------
TEST np.zeros((pad_dim,int(features)) (32, 4)
subjets per level= [32, 64, 46, 6, 2]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 5
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (46, 4)
max_n_level= 64
--------------------------------------------------------------------------------
TEST np.zeros((pad_dim,int(features)) (18, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST contents[i].shape= (14, 4)
TEST np.zeros((pad_dim,int(features)) (50, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (2, 4)
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (62, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (46, 4)
TEST np.zeros((pad_dim,int(features)) (18, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (6, 4)
TEST np.zeros((pad_dim,int(features)) (58, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (2, 4)
TEST np.zeros((pad_dim,int(features)) (62, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 44, 6]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 4
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (44, 4)
TEST np.zeros((pad_dim,int(features)) (20, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 40, 4, 4]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 5
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (6, 4)
TEST np.zeros((pad_dim,int(features)) (58, 4)
--------------------------------------------------------------------------------
max_n_level= 64
subjets per level= [32, 64, 38, 18, 6, 2]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 6
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
////////////////////////////////////////////////////////////////////////////////////////////////////
TEST contents[i].shape= (32, 4)
max_n_level and len(levels[i])= 64 64
TEST np.zeros((pad_dim,int(features)) (32, 4)
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
////////////////////////////////////////////////////////////////////////////////////////////////////
TEST contents[i].shape= (64, 4)
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (40, 4)
TEST np.zeros((pad_dim,int(features)) (24, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
////////////////////////////////////////////////////////////////////////////////////////////////////
TEST contents[i].shape= (4, 4)
max_n_level and len(levels[i])= 64 64
TEST np.zeros((pad_dim,int(features)) (60, 4)
TEST contents[i].shape= (38, 4)
TEST np.zeros((pad_dim,int(features)) (26, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (4, 4)
max_n_level and len(levels[i])= 64 64
TEST np.zeros((pad_dim,int(features)) (60, 4)
TEST contents[i].shape= (18, 4)
TEST np.zeros((pad_dim,int(features)) (46, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (6, 4)
TEST np.zeros((pad_dim,int(features)) (58, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (2, 4)
TEST np.zeros((pad_dim,int(features)) (62, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 40, 12, 2]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 5
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (40, 4)
TEST np.zeros((pad_dim,int(features)) (24, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (12, 4)
TEST np.zeros((pad_dim,int(features)) (52, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (2, 4)
TEST np.zeros((pad_dim,int(features)) (62, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 36, 10]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 4
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (36, 4)
TEST np.zeros((pad_dim,int(features)) (28, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (10, 4)
TEST np.zeros((pad_dim,int(features)) (54, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 58, 16, 4]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 5
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (58, 4)
TEST np.zeros((pad_dim,int(features)) (6, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (16, 4)
TEST np.zeros((pad_dim,int(features)) (48, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (4, 4)
TEST np.zeros((pad_dim,int(features)) (60, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 46, 16, 4]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 5
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (46, 4)
TEST np.zeros((pad_dim,int(features)) (18, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (16, 4)
TEST np.zeros((pad_dim,int(features)) (48, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (4, 4)
TEST np.zeros((pad_dim,int(features)) (60, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 40, 6]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 4
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (40, 4)
TEST np.zeros((pad_dim,int(features)) (24, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (6, 4)
TEST np.zeros((pad_dim,int(features)) (58, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 36, 4]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 4
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (36, 4)
TEST np.zeros((pad_dim,int(features)) (28, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (4, 4)
TEST np.zeros((pad_dim,int(features)) (60, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 54, 16, 2]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 5
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (54, 4)
TEST np.zeros((pad_dim,int(features)) (10, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (16, 4)
TEST np.zeros((pad_dim,int(features)) (48, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (2, 4)
TEST np.zeros((pad_dim,int(features)) (62, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 40, 8, 4]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 5
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (40, 4)
TEST np.zeros((pad_dim,int(features)) (24, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (8, 4)
TEST np.zeros((pad_dim,int(features)) (56, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (4, 4)
TEST np.zeros((pad_dim,int(features)) (60, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 36, 16]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 4
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (36, 4)
TEST np.zeros((pad_dim,int(features)) (28, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (16, 4)
TEST np.zeros((pad_dim,int(features)) (48, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 36, 6]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 4
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (36, 4)
TEST np.zeros((pad_dim,int(features)) (28, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (6, 4)
TEST np.zeros((pad_dim,int(features)) (58, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 42, 14, 4]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 5
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (42, 4)
TEST np.zeros((pad_dim,int(features)) (22, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (14, 4)
TEST np.zeros((pad_dim,int(features)) (50, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (4, 4)
TEST np.zeros((pad_dim,int(features)) (60, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 44, 6, 2]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 5
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (44, 4)
TEST np.zeros((pad_dim,int(features)) (20, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (6, 4)
TEST np.zeros((pad_dim,int(features)) (58, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (2, 4)
TEST np.zeros((pad_dim,int(features)) (62, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 40, 22, 2]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 5
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (40, 4)
TEST np.zeros((pad_dim,int(features)) (24, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (22, 4)
TEST np.zeros((pad_dim,int(features)) (42, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (2, 4)
TEST np.zeros((pad_dim,int(features)) (62, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 50, 14, 2]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 5
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (50, 4)
TEST np.zeros((pad_dim,int(features)) (14, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (14, 4)
TEST np.zeros((pad_dim,int(features)) (50, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (2, 4)
TEST np.zeros((pad_dim,int(features)) (62, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 34, 8]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 4
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (34, 4)
TEST np.zeros((pad_dim,int(features)) (30, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (8, 4)
TEST np.zeros((pad_dim,int(features)) (56, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 42, 12]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 4
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (42, 4)
TEST np.zeros((pad_dim,int(features)) (22, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (12, 4)
TEST np.zeros((pad_dim,int(features)) (52, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 44, 10, 2]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 5
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (44, 4)
TEST np.zeros((pad_dim,int(features)) (20, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (10, 4)
TEST np.zeros((pad_dim,int(features)) (54, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (2, 4)
100%|█████████████████████████████████████████████████████████████████████| 37/37 [00:15<00:00,  2.40it/s, loss=0.677]
- Train metrics: accuracy: 0.6020 ; loss: 0.6729
--------------------------------------------------------------------------------
Number of levels= 5
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (42, 4)
TEST np.zeros((pad_dim,int(features)) (22, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (8, 4)
TEST np.zeros((pad_dim,int(features)) (56, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (4, 4)
TEST np.zeros((pad_dim,int(features)) (60, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 42, 12, 2]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 5
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (42, 4)
TEST np.zeros((pad_dim,int(features)) (22, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (12, 4)
TEST np.zeros((pad_dim,int(features)) (52, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (2, 4)
TEST np.zeros((pad_dim,int(features)) (62, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 40, 16, 2]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 5
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (40, 4)
TEST np.zeros((pad_dim,int(features)) (24, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (16, 4)
TEST np.zeros((pad_dim,int(features)) (48, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (2, 4)
TEST np.zeros((pad_dim,int(features)) (62, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 38, 12]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 4
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (38, 4)
TEST np.zeros((pad_dim,int(features)) (26, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (12, 4)
TEST np.zeros((pad_dim,int(features)) (52, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 48, 14, 2]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 5
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (48, 4)
TEST np.zeros((pad_dim,int(features)) (16, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (14, 4)
TEST np.zeros((pad_dim,int(features)) (50, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (2, 4)
TEST np.zeros((pad_dim,int(features)) (62, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 48, 12, 2]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 5
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (48, 4)
TEST np.zeros((pad_dim,int(features)) (16, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (12, 4)
TEST np.zeros((pad_dim,int(features)) (52, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (2, 4)
TEST np.zeros((pad_dim,int(features)) (62, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 48, 4, 2]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 5
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (48, 4)
TEST np.zeros((pad_dim,int(features)) (16, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (4, 4)
TEST np.zeros((pad_dim,int(features)) (60, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (2, 4)
TEST np.zeros((pad_dim,int(features)) (62, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 44, 12]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 4
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (44, 4)
TEST np.zeros((pad_dim,int(features)) (20, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (12, 4)
TEST np.zeros((pad_dim,int(features)) (52, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 40, 16, 2]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 5
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (40, 4)
TEST np.zeros((pad_dim,int(features)) (24, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (16, 4)
TEST np.zeros((pad_dim,int(features)) (48, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (2, 4)
TEST np.zeros((pad_dim,int(features)) (62, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 50, 14, 6, 2]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 6
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (50, 4)
TEST np.zeros((pad_dim,int(features)) (14, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (14, 4)
TEST np.zeros((pad_dim,int(features)) (50, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (6, 4)
TEST np.zeros((pad_dim,int(features)) (58, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (2, 4)
TEST np.zeros((pad_dim,int(features)) (62, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 42, 8]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 4
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (42, 4)
TEST np.zeros((pad_dim,int(features)) (22, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (8, 4)
TEST np.zeros((pad_dim,int(features)) (56, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 44, 10]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 4
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (44, 4)
TEST np.zeros((pad_dim,int(features)) (20, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (10, 4)
TEST np.zeros((pad_dim,int(features)) (54, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 52, 14]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 4
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (52, 4)
TEST np.zeros((pad_dim,int(features)) (12, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (14, 4)
TEST np.zeros((pad_dim,int(features)) (50, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 42, 4, 2]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 5
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (42, 4)
TEST np.zeros((pad_dim,int(features)) (22, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (4, 4)
TEST np.zeros((pad_dim,int(features)) (60, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (2, 4)
TEST np.zeros((pad_dim,int(features)) (62, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 48, 14, 2]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 5
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
max_n_level= 64
subjets per level= [32, 64, 44, 6, 2]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 5
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level= 64
max_n_level and len(levels[i])= 64 64
--------------------------------------------------------------------------------
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
////////////////////////////////////////////////////////////////////////////////////////////////////
TEST contents[i].shape= (32, 4)
max_n_level and len(levels[i])= 64 64
TEST np.zeros((pad_dim,int(features)) (32, 4)
TEST contents[i].shape= (48, 4)
TEST np.zeros((pad_dim,int(features)) (16, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
////////////////////////////////////////////////////////////////////////////////////////////////////
TEST contents[i].shape= (64, 4)
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (14, 4)
TEST np.zeros((pad_dim,int(features)) (50, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (2, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
TEST np.zeros((pad_dim,int(features)) (62, 4)
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (44, 4)
TEST np.zeros((pad_dim,int(features)) (20, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (6, 4)
TEST np.zeros((pad_dim,int(features)) (58, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (2, 4)
--------------------------------------------------------------------------------
TEST np.zeros((pad_dim,int(features)) (62, 4)
subjets per level= [32, 64, 42, 12]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 4
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (42, 4)
TEST np.zeros((pad_dim,int(features)) (22, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (12, 4)
TEST np.zeros((pad_dim,int(features)) (52, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 46, 16, 4, 4]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 6
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
--------------------------------------------------------------------------------
TEST contents[i].shape= (46, 4)
subjets per level= [32, 64, 44, 6, 2]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
TEST np.zeros((pad_dim,int(features)) (18, 4)
Number of levels= 5
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
subjets per level= [32, 64, 44, 10]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 4
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
max_n_level and len(levels[i])= 64 64
max_n_level= 64
--------------------------------------------------------------------------------
TEST contents[i].shape= (16, 4)
TEST np.zeros((pad_dim,int(features)) (48, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
TEST np.zeros((pad_dim,int(features)) (32, 4)
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (4, 4)
TEST np.zeros((pad_dim,int(features)) (60, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (4, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
TEST np.zeros((pad_dim,int(features)) (60, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (44, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
TEST np.zeros((pad_dim,int(features)) (20, 4)
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (44, 4)
TEST contents[i].shape= (6, 4)
TEST np.zeros((pad_dim,int(features)) (20, 4)
TEST np.zeros((pad_dim,int(features)) (58, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (10, 4)
TEST contents[i].shape= (2, 4)
TEST np.zeros((pad_dim,int(features)) (54, 4)
TEST np.zeros((pad_dim,int(features)) (62, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 36, 10, 2, 2]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 6
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (36, 4)
TEST np.zeros((pad_dim,int(features)) (28, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (10, 4)
TEST np.zeros((pad_dim,int(features)) (54, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (2, 4)
TEST np.zeros((pad_dim,int(features)) (62, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (2, 4)
TEST np.zeros((pad_dim,int(features)) (62, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 48, 8]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 4
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (48, 4)
TEST np.zeros((pad_dim,int(features)) (16, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (8, 4)
TEST np.zeros((pad_dim,int(features)) (56, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 60, 18]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 4
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (60, 4)
TEST np.zeros((pad_dim,int(features)) (4, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (18, 4)
TEST np.zeros((pad_dim,int(features)) (46, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 50, 12, 2]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 5
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (50, 4)
TEST np.zeros((pad_dim,int(features)) (14, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (12, 4)
TEST np.zeros((pad_dim,int(features)) (52, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (2, 4)
TEST np.zeros((pad_dim,int(features)) (62, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 44, 8]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 4
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (44, 4)
TEST np.zeros((pad_dim,int(features)) (20, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (8, 4)
TEST np.zeros((pad_dim,int(features)) (56, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 50, 10]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 4
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (50, 4)
TEST np.zeros((pad_dim,int(features)) (14, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (10, 4)
TEST np.zeros((pad_dim,int(features)) (54, 4)
train.py:219: RuntimeWarning: divide by zero encountered in true_divide
  inv_fpr = interp(base_tpr, tpr, 1. / fpr)[125]
- Eval metrics : accuracy: 0.5156 ; loss: 0.6961
Checkpoint Directory exists!
Epoch 17/30
100%|█████████████████████████████████████████████████████████████████████| 37/37 [00:14<00:00,  2.52it/s, loss=0.676]
- Train metrics: accuracy: 0.6053 ; loss: 0.6717
--------------------------------------------------------------------------------
subjets per level= [32, 64, 36, 10]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 4
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (36, 4)
TEST np.zeros((pad_dim,int(features)) (28, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (10, 4)
TEST np.zeros((pad_dim,int(features)) (54, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 46, 14, 2]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 5
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (46, 4)
TEST np.zeros((pad_dim,int(features)) (18, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (14, 4)
TEST np.zeros((pad_dim,int(features)) (50, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (2, 4)
TEST np.zeros((pad_dim,int(features)) (62, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 46, 6, 2]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 5
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (46, 4)
TEST np.zeros((pad_dim,int(features)) (18, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (6, 4)
TEST np.zeros((pad_dim,int(features)) (58, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (2, 4)
TEST np.zeros((pad_dim,int(features)) (62, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 38, 18, 6, 2]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 6
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (38, 4)
TEST np.zeros((pad_dim,int(features)) (26, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (18, 4)
TEST np.zeros((pad_dim,int(features)) (46, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (6, 4)
TEST np.zeros((pad_dim,int(features)) (58, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (2, 4)
TEST np.zeros((pad_dim,int(features)) (62, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 40, 4, 4]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
subjets per level= [32, 64, 44, 6]
Number of levels= 5
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 4
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
////////////////////////////////////////////////////////////////////////////////////////////////////
TEST contents[i].shape= (32, 4)
max_n_level and len(levels[i])= 64 64
TEST np.zeros((pad_dim,int(features)) (32, 4)
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (44, 4)
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (40, 4)
TEST np.zeros((pad_dim,int(features)) (20, 4)
TEST np.zeros((pad_dim,int(features)) (24, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
////////////////////////////////////////////////////////////////////////////////////////////////////
TEST contents[i].shape= (6, 4)
TEST np.zeros((pad_dim,int(features)) (58, 4)
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (4, 4)
TEST np.zeros((pad_dim,int(features)) (60, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (4, 4)
TEST np.zeros((pad_dim,int(features)) (60, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 40, 12, 2]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 5
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (40, 4)
TEST np.zeros((pad_dim,int(features)) (24, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (12, 4)
TEST np.zeros((pad_dim,int(features)) (52, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (2, 4)
TEST np.zeros((pad_dim,int(features)) (62, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 36, 10]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 4
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (36, 4)
TEST np.zeros((pad_dim,int(features)) (28, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (10, 4)
TEST np.zeros((pad_dim,int(features)) (54, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 58, 16, 4]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 5
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (58, 4)
TEST np.zeros((pad_dim,int(features)) (6, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (16, 4)
TEST np.zeros((pad_dim,int(features)) (48, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (4, 4)
TEST np.zeros((pad_dim,int(features)) (60, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 46, 16, 4]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 5
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (46, 4)
TEST np.zeros((pad_dim,int(features)) (18, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (16, 4)
TEST np.zeros((pad_dim,int(features)) (48, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (4, 4)
TEST np.zeros((pad_dim,int(features)) (60, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 40, 6]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 4
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (40, 4)
TEST np.zeros((pad_dim,int(features)) (24, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (6, 4)
TEST np.zeros((pad_dim,int(features)) (58, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 36, 4]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 4
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (36, 4)
TEST np.zeros((pad_dim,int(features)) (28, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (4, 4)
TEST np.zeros((pad_dim,int(features)) (60, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 54, 16, 2]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 5
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (54, 4)
TEST np.zeros((pad_dim,int(features)) (10, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (16, 4)
TEST np.zeros((pad_dim,int(features)) (48, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (2, 4)
TEST np.zeros((pad_dim,int(features)) (62, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 40, 8, 4]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 5
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (40, 4)
TEST np.zeros((pad_dim,int(features)) (24, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (8, 4)
TEST np.zeros((pad_dim,int(features)) (56, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (4, 4)
TEST np.zeros((pad_dim,int(features)) (60, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 36, 16]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 4
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (36, 4)
TEST np.zeros((pad_dim,int(features)) (28, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (16, 4)
TEST np.zeros((pad_dim,int(features)) (48, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 36, 6]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 4
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (36, 4)
TEST np.zeros((pad_dim,int(features)) (28, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (6, 4)
TEST np.zeros((pad_dim,int(features)) (58, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 42, 14, 4]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 5
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (42, 4)
TEST np.zeros((pad_dim,int(features)) (22, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (14, 4)
TEST np.zeros((pad_dim,int(features)) (50, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (4, 4)
TEST np.zeros((pad_dim,int(features)) (60, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 44, 6, 2]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 5
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (44, 4)
TEST np.zeros((pad_dim,int(features)) (20, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (6, 4)
TEST np.zeros((pad_dim,int(features)) (58, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (2, 4)
TEST np.zeros((pad_dim,int(features)) (62, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 40, 22, 2]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 5
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (40, 4)
TEST np.zeros((pad_dim,int(features)) (24, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (22, 4)
TEST np.zeros((pad_dim,int(features)) (42, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (2, 4)
TEST np.zeros((pad_dim,int(features)) (62, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 50, 14, 2]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 5
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (50, 4)
TEST np.zeros((pad_dim,int(features)) (14, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (14, 4)
TEST np.zeros((pad_dim,int(features)) (50, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (2, 4)
TEST np.zeros((pad_dim,int(features)) (62, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 34, 8]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 4
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (34, 4)
TEST np.zeros((pad_dim,int(features)) (30, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (8, 4)
TEST np.zeros((pad_dim,int(features)) (56, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 42, 12]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 4
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (42, 4)
TEST np.zeros((pad_dim,int(features)) (22, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (12, 4)
TEST np.zeros((pad_dim,int(features)) (52, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 44, 10, 2]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 5
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (44, 4)
TEST np.zeros((pad_dim,int(features)) (20, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (10, 4)
TEST np.zeros((pad_dim,int(features)) (54, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (2, 4)
TEST np.zeros((pad_dim,int(features)) (62, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 42, 8, 4]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 5
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (42, 4)
TEST np.zeros((pad_dim,int(features)) (22, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (8, 4)
TEST np.zeros((pad_dim,int(features)) (56, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (4, 4)
TEST np.zeros((pad_dim,int(features)) (60, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 42, 12, 2]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 5
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (42, 4)
TEST np.zeros((pad_dim,int(features)) (22, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (12, 4)
TEST np.zeros((pad_dim,int(features)) (52, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (2, 4)
TEST np.zeros((pad_dim,int(features)) (62, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 40, 16, 2]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 5
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (40, 4)
TEST np.zeros((pad_dim,int(features)) (24, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (16, 4)
TEST np.zeros((pad_dim,int(features)) (48, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (2, 4)
TEST np.zeros((pad_dim,int(features)) (62, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 38, 12]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 4
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (38, 4)
TEST np.zeros((pad_dim,int(features)) (26, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (12, 4)
TEST np.zeros((pad_dim,int(features)) (52, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 48, 14, 2]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 5
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (48, 4)
TEST np.zeros((pad_dim,int(features)) (16, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (14, 4)
TEST np.zeros((pad_dim,int(features)) (50, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (2, 4)
TEST np.zeros((pad_dim,int(features)) (62, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 48, 12, 2]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 5
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (48, 4)
TEST np.zeros((pad_dim,int(features)) (16, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (12, 4)
TEST np.zeros((pad_dim,int(features)) (52, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (2, 4)
TEST np.zeros((pad_dim,int(features)) (62, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 48, 4, 2]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 5
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (48, 4)
TEST np.zeros((pad_dim,int(features)) (16, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (4, 4)
TEST np.zeros((pad_dim,int(features)) (60, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (2, 4)
TEST np.zeros((pad_dim,int(features)) (62, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 44, 12]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 4
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (44, 4)
TEST np.zeros((pad_dim,int(features)) (20, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (12, 4)
TEST np.zeros((pad_dim,int(features)) (52, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 40, 16, 2]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 5
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (40, 4)
TEST np.zeros((pad_dim,int(features)) (24, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (16, 4)
TEST np.zeros((pad_dim,int(features)) (48, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (2, 4)
TEST np.zeros((pad_dim,int(features)) (62, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 50, 14, 6, 2]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 6
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (50, 4)
TEST np.zeros((pad_dim,int(features)) (14, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (14, 4)
TEST np.zeros((pad_dim,int(features)) (50, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (6, 4)
TEST np.zeros((pad_dim,int(features)) (58, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (2, 4)
TEST np.zeros((pad_dim,int(features)) (62, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 42, 8]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 4
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (42, 4)
TEST np.zeros((pad_dim,int(features)) (22, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (8, 4)
TEST np.zeros((pad_dim,int(features)) (56, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 44, 10]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 4
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (44, 4)
TEST np.zeros((pad_dim,int(features)) (20, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (10, 4)
TEST np.zeros((pad_dim,int(features)) (54, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 52, 14]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 4
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (52, 4)
TEST np.zeros((pad_dim,int(features)) (12, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (14, 4)
TEST np.zeros((pad_dim,int(features)) (50, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 42, 4, 2]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 5
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (42, 4)
TEST np.zeros((pad_dim,int(features)) (22, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (4, 4)
TEST np.zeros((pad_dim,int(features)) (60, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (2, 4)
TEST np.zeros((pad_dim,int(features)) (62, 4)
train.py:219: RuntimeWarning: divide by zero encountered in true_divide
  inv_fpr = interp(base_tpr, tpr, 1. / fpr)[125]
- Eval metrics : accuracy: 0.5156 ; loss: 0.6965
--------------------------------------------------------------------------------
subjets per level= [32, 64, 48, 14, 2]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 5
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 44, 6, 2]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
Number of levels= 5
--------------------------------------------------------------------------------
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (48, 4)
TEST np.zeros((pad_dim,int(features)) (16, 4)
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (14, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST np.zeros((pad_dim,int(features)) (50, 4)
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 42, 12]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 4
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (2, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level= 64
TEST np.zeros((pad_dim,int(features)) (62, 4)
max_n_level and len(levels[i])= 64 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
TEST contents[i].shape= (44, 4)
TEST np.zeros((pad_dim,int(features)) (20, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (42, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST np.zeros((pad_dim,int(features)) (22, 4)
TEST contents[i].shape= (6, 4)
TEST np.zeros((pad_dim,int(features)) (58, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (12, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
TEST np.zeros((pad_dim,int(features)) (52, 4)
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (2, 4)
TEST np.zeros((pad_dim,int(features)) (62, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 44, 6, 2]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 5
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (44, 4)
TEST np.zeros((pad_dim,int(features)) (20, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (6, 4)
TEST np.zeros((pad_dim,int(features)) (58, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
max_n_level and len(levels[i])= 64 64
subjets per level= [32, 64, 46, 16, 4, 4]
subjets per level= [32, 64, 44, 10]
--------------------------------------------------------------------------------
TEST contents[i].shape= (2, 4)
--------------------------------------------------------------------------------
Number of levels= 6
--------------------------------------------------------------------------------
TEST np.zeros((pad_dim,int(features)) (62, 4)
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 4
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
////////////////////////////////////////////////////////////////////////////////////////////////////
TEST contents[i].shape= (32, 4)
max_n_level and len(levels[i])= 64 64
TEST np.zeros((pad_dim,int(features)) (32, 4)
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
TEST np.zeros((pad_dim,int(features)) (0, 4)
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////
///////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (44, 4)
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (46, 4)
TEST np.zeros((pad_dim,int(features)) (18, 4)
TEST np.zeros((pad_dim,int(features)) (20, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (16, 4)
TEST contents[i].shape= (10, 4)
TEST np.zeros((pad_dim,int(features)) (48, 4)
TEST np.zeros((pad_dim,int(features)) (54, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (4, 4)
TEST np.zeros((pad_dim,int(features)) (60, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (4, 4)
TEST np.zeros((pad_dim,int(features)) (60, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 36, 10, 2, 2]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 6
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (36, 4)
TEST np.zeros((pad_dim,int(features)) (28, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (10, 4)
TEST np.zeros((pad_dim,int(features)) (54, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (2, 4)
TEST np.zeros((pad_dim,int(features)) (62, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (2, 4)
TEST np.zeros((pad_dim,int(features)) (62, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 48, 8]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 4
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (48, 4)
TEST np.zeros((pad_dim,int(features)) (16, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (8, 4)
TEST np.zeros((pad_dim,int(features)) (56, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 60, 18]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 4
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (60, 4)
TEST np.zeros((pad_dim,int(features)) (4, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (18, 4)
TEST np.zeros((pad_dim,int(features)) (46, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 50, 12, 2]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 5
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (50, 4)
TEST np.zeros((pad_dim,int(features)) (14, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (12, 4)
TEST np.zeros((pad_dim,int(features)) (52, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (2, 4)
TEST np.zeros((pad_dim,int(features)) (62, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 44, 8]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 4
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (44, 4)
TEST np.zeros((pad_dim,int(features)) (20, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (8, 4)
TEST np.zeros((pad_dim,int(features)) (56, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 50, 10]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 4
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (50, 4)
TEST np.zeros((pad_dim,int(features)) (14, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (10, 4)
TEST np.zeros((pad_dim,int(features)) (54, 4)
Epoch 18/30
  0%|                                                                                          | 0/37 [00:00<?, ?it/s]
100%|█████████████████████████████████████████████████████████████████████| 37/37 [00:15<00:00,  2.39it/s, loss=0.675]
- Train metrics: accuracy: 0.6118 ; loss: 0.6710
--------------------------------------------------------------------------------
subjets per level= [32, 64, 36, 10]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 4
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (36, 4)
TEST np.zeros((pad_dim,int(features)) (28, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (10, 4)
TEST np.zeros((pad_dim,int(features)) (54, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 46, 14, 2]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 5
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (46, 4)
TEST np.zeros((pad_dim,int(features)) (18, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (14, 4)
TEST np.zeros((pad_dim,int(features)) (50, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (2, 4)
TEST np.zeros((pad_dim,int(features)) (62, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 46, 6, 2]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 5
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (46, 4)
TEST np.zeros((pad_dim,int(features)) (18, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (6, 4)
TEST np.zeros((pad_dim,int(features)) (58, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (2, 4)
TEST np.zeros((pad_dim,int(features)) (62, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 44, 6]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 4
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (44, 4)
TEST np.zeros((pad_dim,int(features)) (20, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (6, 4)
TEST np.zeros((pad_dim,int(features)) (58, 4)
subjets per level= [32, 64, 40, 4, 4]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 5
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
subjets per level= [32, 64, 38, 18, 6, 2]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
max_n_level and len(levels[i])= 64 64
Number of levels= 6
--------------------------------------------------------------------------------
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (40, 4)
max_n_level= 64
--------------------------------------------------------------------------------
TEST np.zeros((pad_dim,int(features)) (24, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST contents[i].shape= (4, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
TEST np.zeros((pad_dim,int(features)) (60, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST contents[i].shape= (4, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
TEST np.zeros((pad_dim,int(features)) (60, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (38, 4)
TEST np.zeros((pad_dim,int(features)) (26, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (18, 4)
TEST np.zeros((pad_dim,int(features)) (46, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (6, 4)
TEST np.zeros((pad_dim,int(features)) (58, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (2, 4)
TEST np.zeros((pad_dim,int(features)) (62, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 40, 12, 2]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 5
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (40, 4)
TEST np.zeros((pad_dim,int(features)) (24, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (12, 4)
TEST np.zeros((pad_dim,int(features)) (52, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (2, 4)
TEST np.zeros((pad_dim,int(features)) (62, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 36, 10]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 4
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (36, 4)
TEST np.zeros((pad_dim,int(features)) (28, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (10, 4)
TEST np.zeros((pad_dim,int(features)) (54, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 58, 16, 4]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 5
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (58, 4)
TEST np.zeros((pad_dim,int(features)) (6, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (16, 4)
TEST np.zeros((pad_dim,int(features)) (48, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (4, 4)
TEST np.zeros((pad_dim,int(features)) (60, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 46, 16, 4]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 5
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (46, 4)
TEST np.zeros((pad_dim,int(features)) (18, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (16, 4)
TEST np.zeros((pad_dim,int(features)) (48, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (4, 4)
TEST np.zeros((pad_dim,int(features)) (60, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 40, 6]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 4
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (40, 4)
TEST np.zeros((pad_dim,int(features)) (24, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (6, 4)
TEST np.zeros((pad_dim,int(features)) (58, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 36, 4]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 4
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (36, 4)
TEST np.zeros((pad_dim,int(features)) (28, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (4, 4)
TEST np.zeros((pad_dim,int(features)) (60, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 54, 16, 2]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 5
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (54, 4)
TEST np.zeros((pad_dim,int(features)) (10, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (16, 4)
TEST np.zeros((pad_dim,int(features)) (48, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (2, 4)
TEST np.zeros((pad_dim,int(features)) (62, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 40, 8, 4]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 5
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (40, 4)
TEST np.zeros((pad_dim,int(features)) (24, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (8, 4)
TEST np.zeros((pad_dim,int(features)) (56, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (4, 4)
TEST np.zeros((pad_dim,int(features)) (60, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 36, 16]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 4
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (36, 4)
TEST np.zeros((pad_dim,int(features)) (28, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (16, 4)
TEST np.zeros((pad_dim,int(features)) (48, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 36, 6]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 4
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (36, 4)
TEST np.zeros((pad_dim,int(features)) (28, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (6, 4)
TEST np.zeros((pad_dim,int(features)) (58, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 42, 14, 4]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 5
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (42, 4)
TEST np.zeros((pad_dim,int(features)) (22, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (14, 4)
TEST np.zeros((pad_dim,int(features)) (50, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (4, 4)
TEST np.zeros((pad_dim,int(features)) (60, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 44, 6, 2]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 5
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (44, 4)
TEST np.zeros((pad_dim,int(features)) (20, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (6, 4)
TEST np.zeros((pad_dim,int(features)) (58, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (2, 4)
TEST np.zeros((pad_dim,int(features)) (62, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 40, 22, 2]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 5
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (40, 4)
TEST np.zeros((pad_dim,int(features)) (24, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (22, 4)
TEST np.zeros((pad_dim,int(features)) (42, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (2, 4)
TEST np.zeros((pad_dim,int(features)) (62, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 50, 14, 2]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 5
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (50, 4)
TEST np.zeros((pad_dim,int(features)) (14, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (14, 4)
TEST np.zeros((pad_dim,int(features)) (50, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (2, 4)
TEST np.zeros((pad_dim,int(features)) (62, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 34, 8]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 4
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (34, 4)
TEST np.zeros((pad_dim,int(features)) (30, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (8, 4)
TEST np.zeros((pad_dim,int(features)) (56, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 42, 12]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 4
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (42, 4)
TEST np.zeros((pad_dim,int(features)) (22, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (12, 4)
TEST np.zeros((pad_dim,int(features)) (52, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 44, 10, 2]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 5
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (44, 4)
TEST np.zeros((pad_dim,int(features)) (20, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (10, 4)
TEST np.zeros((pad_dim,int(features)) (54, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (2, 4)
TEST np.zeros((pad_dim,int(features)) (62, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 42, 8, 4]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 5
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (42, 4)
TEST np.zeros((pad_dim,int(features)) (22, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (8, 4)
TEST np.zeros((pad_dim,int(features)) (56, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (4, 4)
TEST np.zeros((pad_dim,int(features)) (60, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 42, 12, 2]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 5
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (42, 4)
TEST np.zeros((pad_dim,int(features)) (22, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (12, 4)
TEST np.zeros((pad_dim,int(features)) (52, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (2, 4)
TEST np.zeros((pad_dim,int(features)) (62, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 40, 16, 2]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 5
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (40, 4)
TEST np.zeros((pad_dim,int(features)) (24, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (16, 4)
TEST np.zeros((pad_dim,int(features)) (48, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (2, 4)
TEST np.zeros((pad_dim,int(features)) (62, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 38, 12]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 4
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (38, 4)
TEST np.zeros((pad_dim,int(features)) (26, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (12, 4)
TEST np.zeros((pad_dim,int(features)) (52, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 48, 14, 2]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 5
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (48, 4)
TEST np.zeros((pad_dim,int(features)) (16, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (14, 4)
TEST np.zeros((pad_dim,int(features)) (50, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (2, 4)
TEST np.zeros((pad_dim,int(features)) (62, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 48, 12, 2]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 5
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (48, 4)
TEST np.zeros((pad_dim,int(features)) (16, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (12, 4)
TEST np.zeros((pad_dim,int(features)) (52, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (2, 4)
TEST np.zeros((pad_dim,int(features)) (62, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 48, 4, 2]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 5
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (48, 4)
TEST np.zeros((pad_dim,int(features)) (16, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (4, 4)
TEST np.zeros((pad_dim,int(features)) (60, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (2, 4)
TEST np.zeros((pad_dim,int(features)) (62, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 44, 12]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 4
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (44, 4)
TEST np.zeros((pad_dim,int(features)) (20, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (12, 4)
TEST np.zeros((pad_dim,int(features)) (52, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 40, 16, 2]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 5
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (40, 4)
TEST np.zeros((pad_dim,int(features)) (24, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (16, 4)
TEST np.zeros((pad_dim,int(features)) (48, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (2, 4)
TEST np.zeros((pad_dim,int(features)) (62, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 50, 14, 6, 2]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 6
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (50, 4)
TEST np.zeros((pad_dim,int(features)) (14, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (14, 4)
TEST np.zeros((pad_dim,int(features)) (50, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (6, 4)
TEST np.zeros((pad_dim,int(features)) (58, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (2, 4)
TEST np.zeros((pad_dim,int(features)) (62, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 42, 8]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 4
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (42, 4)
TEST np.zeros((pad_dim,int(features)) (22, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (8, 4)
TEST np.zeros((pad_dim,int(features)) (56, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 44, 10]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 4
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (44, 4)
TEST np.zeros((pad_dim,int(features)) (20, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (10, 4)
TEST np.zeros((pad_dim,int(features)) (54, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 52, 14]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 4
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (52, 4)
TEST np.zeros((pad_dim,int(features)) (12, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (14, 4)
TEST np.zeros((pad_dim,int(features)) (50, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 42, 4, 2]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 5
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (42, 4)
TEST np.zeros((pad_dim,int(features)) (22, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (4, 4)
TEST np.zeros((pad_dim,int(features)) (60, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (2, 4)
TEST np.zeros((pad_dim,int(features)) (62, 4)
train.py:219: RuntimeWarning: divide by zero encountered in true_divide
  inv_fpr = interp(base_tpr, tpr, 1. / fpr)[125]
- Eval metrics : accuracy: 0.5156 ; loss: 0.6964
--------------------------------------------------------------------------------
subjets per level= [32, 64, 48, 14, 2]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 5
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (48, 4)
TEST np.zeros((pad_dim,int(features)) (16, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (14, 4)
TEST np.zeros((pad_dim,int(features)) (50, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (2, 4)
TEST np.zeros((pad_dim,int(features)) (62, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 44, 6, 2]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 5
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (44, 4)
TEST np.zeros((pad_dim,int(features)) (20, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (6, 4)
TEST np.zeros((pad_dim,int(features)) (58, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 42, 12]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
Number of levels= 4
--------------------------------------------------------------------------------
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (2, 4)
TEST np.zeros((pad_dim,int(features)) (62, 4)
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (42, 4)
TEST np.zeros((pad_dim,int(features)) (22, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (12, 4)
TEST np.zeros((pad_dim,int(features)) (52, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 46, 16, 4, 4]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 6
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (46, 4)
TEST np.zeros((pad_dim,int(features)) (18, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (16, 4)
--------------------------------------------------------------------------------
TEST np.zeros((pad_dim,int(features)) (48, 4)
subjets per level= [32, 64, 44, 10]
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 4
--------------------------------------------------------------------------------
TEST contents[i].shape= (4, 4)
TEST np.zeros((pad_dim,int(features)) (60, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
--------------------------------------------------------------------------------
max_n_level and len(levels[i])= 64 64
max_n_level= 64
TEST contents[i].shape= (4, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 44, 6, 2]
--------------------------------------------------------------------------------
TEST np.zeros((pad_dim,int(features)) (60, 4)
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
Number of levels= 5
--------------------------------------------------------------------------------
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
max_n_level= 64
////////////////////////////////////////////////////////////////////////////////////////////////////
--------------------------------------------------------------------------------
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
TEST np.zeros((pad_dim,int(features)) (32, 4)
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (44, 4)
TEST np.zeros((pad_dim,int(features)) (20, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (10, 4)
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
TEST np.zeros((pad_dim,int(features)) (54, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (44, 4)
TEST np.zeros((pad_dim,int(features)) (20, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (6, 4)
TEST np.zeros((pad_dim,int(features)) (58, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (2, 4)
TEST np.zeros((pad_dim,int(features)) (62, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 36, 10, 2, 2]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 6
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (36, 4)
TEST np.zeros((pad_dim,int(features)) (28, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (10, 4)
TEST np.zeros((pad_dim,int(features)) (54, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (2, 4)
TEST np.zeros((pad_dim,int(features)) (62, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (2, 4)
TEST np.zeros((pad_dim,int(features)) (62, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 50, 12, 2]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 5
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (50, 4)
TEST np.zeros((pad_dim,int(features)) (14, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (12, 4)
TEST np.zeros((pad_dim,int(features)) (52, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (2, 4)
TEST np.zeros((pad_dim,int(features)) (62, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 44, 8]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 4
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (44, 4)
TEST np.zeros((pad_dim,int(features)) (20, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (8, 4)
TEST np.zeros((pad_dim,int(features)) (56, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 48, 8]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 4
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (48, 4)
TEST np.zeros((pad_dim,int(features)) (16, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (8, 4)
TEST np.zeros((pad_dim,int(features)) (56, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 60, 18]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 4
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (60, 4)
TEST np.zeros((pad_dim,int(features)) (4, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (18, 4)
TEST np.zeros((pad_dim,int(features)) (46, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 50, 10]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 4
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (50, 4)
TEST np.zeros((pad_dim,int(features)) (14, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (10, 4)
TEST np.zeros((pad_dim,int(features)) (54, 4)
Epoch 19/30
  0%|                                                                                          | 0/37 [00:00<?, ?it/s]
100%|█████████████████████████████████████████████████████████████████████| 37/37 [00:16<00:00,  2.20it/s, loss=0.674]
- Train metrics: accuracy: 0.6135 ; loss: 0.6703
--------------------------------------------------------------------------------
subjets per level= [32, 64, 36, 10]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 4
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (36, 4)
TEST np.zeros((pad_dim,int(features)) (28, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (10, 4)
TEST np.zeros((pad_dim,int(features)) (54, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 46, 14, 2]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 5
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (46, 4)
TEST np.zeros((pad_dim,int(features)) (18, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (14, 4)
TEST np.zeros((pad_dim,int(features)) (50, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 46, 6, 2]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
Number of levels= 5
--------------------------------------------------------------------------------
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (2, 4)
TEST np.zeros((pad_dim,int(features)) (62, 4)
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (46, 4)
TEST np.zeros((pad_dim,int(features)) (18, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (6, 4)
TEST np.zeros((pad_dim,int(features)) (58, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (2, 4)
TEST np.zeros((pad_dim,int(features)) (62, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 44, 6]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 4
--------------------------------------------------------------------------------
subjets per level= [32, 64, 40, 4, 4]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 5
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
///////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
max_n_level and len(levels[i])= 64 64
TEST np.zeros((pad_dim,int(features)) (32, 4)
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
TEST np.zeros((pad_dim,int(features)) (0, 4)
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (44, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
TEST np.zeros((pad_dim,int(features)) (20, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 38, 18, 6, 2]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 6
--------------------------------------------------------------------------------
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (40, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
TEST np.zeros((pad_dim,int(features)) (24, 4)
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (6, 4)
TEST np.zeros((pad_dim,int(features)) (58, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level= 64
max_n_level and len(levels[i])= 64 64
--------------------------------------------------------------------------------
TEST contents[i].shape= (4, 4)
TEST np.zeros((pad_dim,int(features)) (60, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (4, 4)
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (60, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (38, 4)
TEST np.zeros((pad_dim,int(features)) (26, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (18, 4)
TEST np.zeros((pad_dim,int(features)) (46, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (6, 4)
TEST np.zeros((pad_dim,int(features)) (58, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (2, 4)
TEST np.zeros((pad_dim,int(features)) (62, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 40, 12, 2]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 5
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (40, 4)
TEST np.zeros((pad_dim,int(features)) (24, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (12, 4)
TEST np.zeros((pad_dim,int(features)) (52, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (2, 4)
TEST np.zeros((pad_dim,int(features)) (62, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 36, 10]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 4
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (36, 4)
TEST np.zeros((pad_dim,int(features)) (28, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (10, 4)
TEST np.zeros((pad_dim,int(features)) (54, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 58, 16, 4]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 5
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (58, 4)
TEST np.zeros((pad_dim,int(features)) (6, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (16, 4)
TEST np.zeros((pad_dim,int(features)) (48, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (4, 4)
TEST np.zeros((pad_dim,int(features)) (60, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 46, 16, 4]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 5
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (46, 4)
TEST np.zeros((pad_dim,int(features)) (18, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (16, 4)
TEST np.zeros((pad_dim,int(features)) (48, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (4, 4)
TEST np.zeros((pad_dim,int(features)) (60, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 40, 6]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 4
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (40, 4)
TEST np.zeros((pad_dim,int(features)) (24, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (6, 4)
TEST np.zeros((pad_dim,int(features)) (58, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 36, 4]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 4
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (36, 4)
TEST np.zeros((pad_dim,int(features)) (28, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (4, 4)
TEST np.zeros((pad_dim,int(features)) (60, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 54, 16, 2]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 5
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (54, 4)
TEST np.zeros((pad_dim,int(features)) (10, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (16, 4)
TEST np.zeros((pad_dim,int(features)) (48, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (2, 4)
TEST np.zeros((pad_dim,int(features)) (62, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 40, 8, 4]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 5
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (40, 4)
TEST np.zeros((pad_dim,int(features)) (24, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (8, 4)
TEST np.zeros((pad_dim,int(features)) (56, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (4, 4)
TEST np.zeros((pad_dim,int(features)) (60, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 36, 16]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 4
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (36, 4)
TEST np.zeros((pad_dim,int(features)) (28, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (16, 4)
TEST np.zeros((pad_dim,int(features)) (48, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 36, 6]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 4
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (36, 4)
TEST np.zeros((pad_dim,int(features)) (28, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (6, 4)
TEST np.zeros((pad_dim,int(features)) (58, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 42, 14, 4]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 5
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (42, 4)
TEST np.zeros((pad_dim,int(features)) (22, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (14, 4)
TEST np.zeros((pad_dim,int(features)) (50, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (4, 4)
TEST np.zeros((pad_dim,int(features)) (60, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 44, 6, 2]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 5
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (44, 4)
TEST np.zeros((pad_dim,int(features)) (20, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (6, 4)
TEST np.zeros((pad_dim,int(features)) (58, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (2, 4)
TEST np.zeros((pad_dim,int(features)) (62, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 40, 22, 2]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 5
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (40, 4)
TEST np.zeros((pad_dim,int(features)) (24, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (22, 4)
TEST np.zeros((pad_dim,int(features)) (42, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (2, 4)
TEST np.zeros((pad_dim,int(features)) (62, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 50, 14, 2]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 5
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (50, 4)
TEST np.zeros((pad_dim,int(features)) (14, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (14, 4)
TEST np.zeros((pad_dim,int(features)) (50, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (2, 4)
TEST np.zeros((pad_dim,int(features)) (62, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 34, 8]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 4
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (34, 4)
TEST np.zeros((pad_dim,int(features)) (30, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (8, 4)
TEST np.zeros((pad_dim,int(features)) (56, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 42, 12]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 4
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (42, 4)
TEST np.zeros((pad_dim,int(features)) (22, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (12, 4)
TEST np.zeros((pad_dim,int(features)) (52, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 44, 10, 2]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 5
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (44, 4)
TEST np.zeros((pad_dim,int(features)) (20, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (10, 4)
TEST np.zeros((pad_dim,int(features)) (54, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (2, 4)
TEST np.zeros((pad_dim,int(features)) (62, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 42, 8, 4]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 5
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (42, 4)
TEST np.zeros((pad_dim,int(features)) (22, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (8, 4)
TEST np.zeros((pad_dim,int(features)) (56, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (4, 4)
TEST np.zeros((pad_dim,int(features)) (60, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 42, 12, 2]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 5
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (42, 4)
TEST np.zeros((pad_dim,int(features)) (22, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (12, 4)
TEST np.zeros((pad_dim,int(features)) (52, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (2, 4)
TEST np.zeros((pad_dim,int(features)) (62, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 40, 16, 2]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 5
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (40, 4)
TEST np.zeros((pad_dim,int(features)) (24, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (16, 4)
TEST np.zeros((pad_dim,int(features)) (48, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (2, 4)
TEST np.zeros((pad_dim,int(features)) (62, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 38, 12]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 4
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (38, 4)
TEST np.zeros((pad_dim,int(features)) (26, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (12, 4)
TEST np.zeros((pad_dim,int(features)) (52, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 48, 14, 2]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 5
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (48, 4)
TEST np.zeros((pad_dim,int(features)) (16, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (14, 4)
TEST np.zeros((pad_dim,int(features)) (50, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (2, 4)
TEST np.zeros((pad_dim,int(features)) (62, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 48, 12, 2]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 5
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (48, 4)
TEST np.zeros((pad_dim,int(features)) (16, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (12, 4)
TEST np.zeros((pad_dim,int(features)) (52, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (2, 4)
TEST np.zeros((pad_dim,int(features)) (62, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 48, 4, 2]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 5
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (48, 4)
TEST np.zeros((pad_dim,int(features)) (16, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (4, 4)
TEST np.zeros((pad_dim,int(features)) (60, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (2, 4)
TEST np.zeros((pad_dim,int(features)) (62, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 44, 12]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 4
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (44, 4)
TEST np.zeros((pad_dim,int(features)) (20, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (12, 4)
TEST np.zeros((pad_dim,int(features)) (52, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 40, 16, 2]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 5
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (40, 4)
TEST np.zeros((pad_dim,int(features)) (24, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (16, 4)
TEST np.zeros((pad_dim,int(features)) (48, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (2, 4)
TEST np.zeros((pad_dim,int(features)) (62, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 50, 14, 6, 2]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 6
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (50, 4)
TEST np.zeros((pad_dim,int(features)) (14, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (14, 4)
TEST np.zeros((pad_dim,int(features)) (50, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (6, 4)
TEST np.zeros((pad_dim,int(features)) (58, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (2, 4)
TEST np.zeros((pad_dim,int(features)) (62, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 42, 8]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 4
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (42, 4)
TEST np.zeros((pad_dim,int(features)) (22, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (8, 4)
TEST np.zeros((pad_dim,int(features)) (56, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 44, 10]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 4
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (44, 4)
TEST np.zeros((pad_dim,int(features)) (20, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (10, 4)
TEST np.zeros((pad_dim,int(features)) (54, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 52, 14]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 4
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (52, 4)
TEST np.zeros((pad_dim,int(features)) (12, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (14, 4)
TEST np.zeros((pad_dim,int(features)) (50, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 42, 4, 2]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 5
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (42, 4)
TEST np.zeros((pad_dim,int(features)) (22, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (4, 4)
TEST np.zeros((pad_dim,int(features)) (60, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (2, 4)
TEST np.zeros((pad_dim,int(features)) (62, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 48, 14, 2]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 5
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (48, 4)
TEST np.zeros((pad_dim,int(features)) (16, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (14, 4)
--------------------------------------------------------------------------------
TEST np.zeros((pad_dim,int(features)) (50, 4)
subjets per level= [32, 64, 44, 6, 2]
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
--------------------------------------------------------------------------------
max_n_level and len(levels[i])= 64 64
Number of levels= 5
--------------------------------------------------------------------------------
TEST contents[i].shape= (2, 4)
TEST np.zeros((pad_dimax_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
m,int(features)) (62, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (44, 4)
TEST np.zeros((pad_dim,int(features)) (20, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (6, 4)
TEST np.zeros((pad_dim,int(features)) (58, 4)
/////////////////--------------------------------------------------------------------------------
subjets per level= [32, 64, 42, 12]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 4
--------------------------------------------------------------------------------
///////////////////////////////////////////////////////////////////////////////////
max_n_level= 64
--------------------------------------------------------------------------------
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (2, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
TEST np.zeros((pad_dim,int(features)) (62, 4)
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (42, 4)
TEST np.zeros((pad_dim,int(features)) (22, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (12, 4)
TEST np.zeros((pad_dim,int(features)) (52, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 44, 6, 2]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 5
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
subjets per level= [32, 64, 46, 16, 4, 4]
max_n_level and len(levels[i])= 64 64
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 6
--------------------------------------------------------------------------------
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
TEST contents[i].shape= (44, 4)
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (20, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (46, 4)
TEST contents[i].shape= (6, 4)
TEST np.zeros((pad_dim,int(features)) (18, 4)
TEST np.zeros((pad_dim,int(features)) (58, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
--------------------------------------------------------------------------------
max_n_level and len(levels[i])= 64 64
subjets per level= [32, 64, 44, 10]
TEST contents[i].shape= (16, 4)
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
TEST np.zeros((pad_dim,int(features)) (48, 4)
Number of levels= 4
////////////////////////////////////////////////////////////////////////////////////////////////////
--------------------------------------------------------------------------------
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (2, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
TEST np.zeros((pad_dim,int(features)) (62, 4)
max_n_level and len(levels[i])= 64 64
max_n_level= 64
TEST contents[i].shape= (4, 4)
--------------------------------------------------------------------------------
TEST np.zeros((pad_dim,int(features)) (60, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
////////////////////////////////////////////////////////////////////////////////////////////////////
TEST contents[i].shape= (32, 4)
max_n_level and len(levels[i])= 64 64
TEST np.zeros((pad_dim,int(features)) (32, 4)
TEST contents[i].shape= (4, 4)
TEST np.zeros((pad_dim,int(features)) (60, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (44, 4)
TEST np.zeros((pad_dim,int(features)) (20, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (10, 4)
TEST np.zeros((pad_dim,int(features)) (54, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 36, 10, 2, 2]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 6
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (36, 4)
TEST np.zeros((pad_dim,int(features)) (28, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (10, 4)
TEST np.zeros((pad_dim,int(features)) (54, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (2, 4)
TEST np.zeros((pad_dim,int(features)) (62, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (2, 4)
TEST np.zeros((pad_dim,int(features)) (62, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 48, 8]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 4
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (48, 4)
TEST np.zeros((pad_dim,int(features)) (16, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (8, 4)
TEST np.zeros((pad_dim,int(features)) (56, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 60, 18]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 4
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (60, 4)
TEST np.zeros((pad_dim,int(features)) (4, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (18, 4)
TEST np.zeros((pad_dim,int(features)) (46, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 50, 12, 2]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 5
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (50, 4)
TEST np.zeros((pad_dim,int(features)) (14, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (12, 4)
TEST np.zeros((pad_dim,int(features)) (52, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (2, 4)
TEST np.zeros((pad_dim,int(features)) (62, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 44, 8]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 4
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (44, 4)
TEST np.zeros((pad_dim,int(features)) (20, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (8, 4)
TEST np.zeros((pad_dim,int(features)) (56, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 50, 10]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 4
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (50, 4)
TEST np.zeros((pad_dim,int(features)) (14, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (10, 4)
TEST np.zeros((pad_dim,int(features)) (54, 4)
train.py:219: RuntimeWarning: divide by zero encountered in true_divide
  inv_fpr = interp(base_tpr, tpr, 1. / fpr)[125]
- Eval metrics : accuracy: 0.5182 ; loss: 0.6965
Epoch 20/30
  0%|                                                                                          | 0/37 [00:00<?, ?it/s]
 68%|██████████████████████████████████████████████▌                      | 25/37 [00:19<00:05,  2.22it/s, loss=0.674]
 68%|██████████████████████████████████████████████▌                      | 25/37 [00:19<00:05,  2.22it/s, loss=0.674]
--------------------------------------------------------------------------------
subjets per level= [32, 64, 36, 10]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 4
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
//////////////////////////////////////////////////////////////////////////////////////////////////--------------------------------------------------------------------------------
subjets per level= [32, 64, 46, 14, 2]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
//
Number of levels= 5
--------------------------------------------------------------------------------
subjets per level= [32, 64, 46, 6, 2]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
max_n_level and len(levels[i])= 64 64
Number of levels= 5
--------------------------------------------------------------------------------
TEST contents[i].shape= (36, 4)
TEST np.zeros((pad_dim,int(features)) (28, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
max_n_level= 64
--------------------------------------------------------------------------------
TEST contents[i].shape= (10, 4)
TEST np.zeros((pad_dim,int(features)) (54, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (46, 4)
TEST np.zeros((pad_dim,int(features)) (18, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (14, 4)
TEST np.zeros((pad_dim,int(features)) (50, 4)
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
////////////////////////////////////////////////////////////////////////////////////////////////////
TEST contents[i].shape= (2, 4)
TEST np.zeros((pad_dim,int(features)) (62, 4)
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (46, 4)
TEST np.zeros((pad_dim,int(features)) (18, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (6, 4)
TEST np.zeros((pad_dim,int(features)) (58, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (2, 4)
TEST np.zeros((pad_dim,int(features)) (62, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 38, 18, 6, 2]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 6
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
subjets per level= [32, 64, 40, 4, 4]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 5
////////////////////////////////////////////////////////////////////////////////////////////////////
--------------------------------------------------------------------------------
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
max_n_level= 64
--------------------------------------------------------------------------------
subjets per level= [32, 64, 44, 6]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 4
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (44, 4)
TEST np.zeros((pad_dim,int(features)) (20, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (6, 4)
TEST np.zeros((pad_dim,int(features)) (58, 4)
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
////////////////////////////////////////////////////////////////////////////////////////////////////
TEST contents[i].shape= (40, 4)
TEST np.zeros((pad_dim,int(features)) (24, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (4, 4)
TEST np.zeros((pad_dim,int(features)) (60, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (4, 4)
TEST np.zeros((pad_dim,int(features)) (60, 4)
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (38, 4)
TEST np.zeros((pad_dim,int(features)) (26, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (18, 4)
TEST np.zeros((pad_dim,int(features)) (46, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (6, 4)
TEST np.zeros((pad_dim,int(features)) (58, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (2, 4)
TEST np.zeros((pad_dim,int(features)) (62, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 40, 12, 2]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 5
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (40, 4)
TEST np.zeros((pad_dim,int(features)) (24, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (12, 4)
TEST np.zeros((pad_dim,int(features)) (52, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (2, 4)
TEST np.zeros((pad_dim,int(features)) (62, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 36, 10]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 4
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (36, 4)
TEST np.zeros((pad_dim,int(features)) (28, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (10, 4)
TEST np.zeros((pad_dim,int(features)) (54, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 58, 16, 4]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 5
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (58, 4)
TEST np.zeros((pad_dim,int(features)) (6, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (16, 4)
TEST np.zeros((pad_dim,int(features)) (48, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (4, 4)
TEST np.zeros((pad_dim,int(features)) (60, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 46, 16, 4]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 5
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (46, 4)
TEST np.zeros((pad_dim,int(features)) (18, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (16, 4)
TEST np.zeros((pad_dim,int(features)) (48, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (4, 4)
TEST np.zeros((pad_dim,int(features)) (60, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 40, 6]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 4
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (40, 4)
TEST np.zeros((pad_dim,int(features)) (24, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (6, 4)
TEST np.zeros((pad_dim,int(features)) (58, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 36, 4]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 4
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (36, 4)
TEST np.zeros((pad_dim,int(features)) (28, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (4, 4)
TEST np.zeros((pad_dim,int(features)) (60, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 54, 16, 2]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 5
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (54, 4)
TEST np.zeros((pad_dim,int(features)) (10, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (16, 4)
TEST np.zeros((pad_dim,int(features)) (48, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (2, 4)
TEST np.zeros((pad_dim,int(features)) (62, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 40, 8, 4]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 5
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (40, 4)
TEST np.zeros((pad_dim,int(features)) (24, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (8, 4)
TEST np.zeros((pad_dim,int(features)) (56, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (4, 4)
TEST np.zeros((pad_dim,int(features)) (60, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 36, 16]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 4
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (36, 4)
TEST np.zeros((pad_dim,int(features)) (28, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (16, 4)
TEST np.zeros((pad_dim,int(features)) (48, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 36, 6]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 4
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (36, 4)
TEST np.zeros((pad_dim,int(features)) (28, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (6, 4)
TEST np.zeros((pad_dim,int(features)) (58, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 42, 14, 4]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 5
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (42, 4)
TEST np.zeros((pad_dim,int(features)) (22, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (14, 4)
TEST np.zeros((pad_dim,int(features)) (50, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (4, 4)
TEST np.zeros((pad_dim,int(features)) (60, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 44, 6, 2]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 5
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (44, 4)
TEST np.zeros((pad_dim,int(features)) (20, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (6, 4)
TEST np.zeros((pad_dim,int(features)) (58, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (2, 4)
TEST np.zeros((pad_dim,int(features)) (62, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 40, 22, 2]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 5
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (40, 4)
TEST np.zeros((pad_dim,int(features)) (24, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (22, 4)
TEST np.zeros((pad_dim,int(features)) (42, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (2, 4)
TEST np.zeros((pad_dim,int(features)) (62, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 50, 14, 2]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 5
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (50, 4)
TEST np.zeros((pad_dim,int(features)) (14, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (14, 4)
TEST np.zeros((pad_dim,int(features)) (50, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (2, 4)
TEST np.zeros((pad_dim,int(features)) (62, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 34, 8]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 4
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (34, 4)
TEST np.zeros((pad_dim,int(features)) (30, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (8, 4)
TEST np.zeros((pad_dim,int(features)) (56, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 42, 12]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 4
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (42, 4)
TEST np.zeros((pad_dim,int(features)) (22, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (12, 4)
TEST np.zeros((pad_dim,int(features)) (52, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 44, 10, 2]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 5
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (44, 4)
TEST np.zeros((pad_dim,int(features)) (20, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (10, 4)
TEST np.zeros((pad_dim,int(features)) (54, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (2, 4)
TEST np.zeros((pad_dim,int(features)) (62, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 42, 8, 4]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 5
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (42, 4)
TEST np.zeros((pad_dim,int(features)) (22, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (8, 4)
TEST np.zeros((pad_dim,int(features)) (56, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (4, 4)
TEST np.zeros((pad_dim,int(features)) (60, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 42, 12, 2]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 5
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (42, 4)
TEST np.zeros((pad_dim,int(features)) (22, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (12, 4)
TEST np.zeros((pad_dim,int(features)) (52, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (2, 4)
TEST np.zeros((pad_dim,int(features)) (62, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 40, 16, 2]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 5
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (40, 4)
TEST np.zeros((pad_dim,int(features)) (24, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (16, 4)
TEST np.zeros((pad_dim,int(features)) (48, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (2, 4)
TEST np.zeros((pad_dim,int(features)) (62, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 38, 12]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 4
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (38, 4)
TEST np.zeros((pad_dim,int(features)) (26, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (12, 4)
TEST np.zeros((pad_dim,int(features)) (52, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 48, 14, 2]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 5
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (48, 4)
TEST np.zeros((pad_dim,int(features)) (16, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (14, 4)
TEST np.zeros((pad_dim,int(features)) (50, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (2, 4)
TEST np.zeros((pad_dim,int(features)) (62, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 48, 12, 2]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 5
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (48, 4)
TEST np.zeros((pad_dim,int(features)) (16, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (12, 4)
TEST np.zeros((pad_dim,int(features)) (52, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (2, 4)
TEST np.zeros((pad_dim,int(features)) (62, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 48, 4, 2]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 5
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (48, 4)
TEST np.zeros((pad_dim,int(features)) (16, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (4, 4)
TEST np.zeros((pad_dim,int(features)) (60, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (2, 4)
TEST np.zeros((pad_dim,int(features)) (62, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 44, 12]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 4
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (44, 4)
TEST np.zeros((pad_dim,int(features)) (20, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (12, 4)
TEST np.zeros((pad_dim,int(features)) (52, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 40, 16, 2]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 5
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (40, 4)
TEST np.zeros((pad_dim,int(features)) (24, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (16, 4)
TEST np.zeros((pad_dim,int(features)) (48, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (2, 4)
TEST np.zeros((pad_dim,int(features)) (62, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 50, 14, 6, 2]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 6
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (50, 4)
TEST np.zeros((pad_dim,int(features)) (14, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (14, 4)
TEST np.zeros((pad_dim,int(features)) (50, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (6, 4)
TEST np.zeros((pad_dim,int(features)) (58, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (2, 4)
TEST np.zeros((pad_dim,int(features)) (62, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 42, 8]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 4
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (42, 4)
TEST np.zeros((pad_dim,int(features)) (22, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (8, 4)
TEST np.zeros((pad_dim,int(features)) (56, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 44, 10]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 4
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (44, 4)
TEST np.zeros((pad_dim,int(features)) (20, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (10, 4)
TEST np.zeros((pad_dim,int(features)) (54, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 52, 14]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 4
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (52, 4)
TEST np.zeros((pad_dim,int(features)) (12, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (14, 4)
TEST np.zeros((pad_dim,int(features)) (50, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 42, 4, 2]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 5
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (42, 4)
TEST np.zeros((pad_dim,int(features)) (22, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (4, 4)
TEST np.zeros((pad_dim,int(features)) (60, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (2, 4)
100%|█████████████████████████████████████████████████████████████████████| 37/37 [00:19<00:00,  1.90it/s, loss=0.673]
100%|█████████████████████████████████████████████████████████████████████| 37/37 [00:19<00:00,  1.90it/s, loss=0.673]
100%|█████████████████████████████████████████████████████████████████████| 37/37 [00:19<00:00,  1.90it/s, loss=0.673]
--------------------------------------------------------------------------------
subjets per level= [32, 64, 48, 14, 2]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 5
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
subjets per level= [32, 64, 44, 6, 2]
max_n_level and len(levels[i])= 64 64
--------------------------------------------------------------------------------
TEST contents[i].shape= (64, 4)
--------------------------------------------------------------------------------
Number of levels= 5
--------------------------------------------------------------------------------
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level= 64
--------------------------------------------------------------------------------
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (48, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
TEST np.zeros((pad_dim,int(features)) (16, 4)
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (14, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
TEST np.zeros((pad_dim,int(features)) (50, 4)
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
subjets per level= [32, 64, 42, 12]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
max_n_level and len(levels[i])= 64 64
Number of levels= 4
////////////////////////////////////////////////////////////////////////////////////////////////////
TEST contents[i].shape= (2, 4)
--------------------------------------------------------------------------------
TEST np.zeros((pad_dim,int(features)) (62, 4)
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (44, 4)
TEST np.zeros((pad_dim,int(features)) (20, 4)
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (6, 4)
TEST np.zeros((pad_dim,int(features)) (58, 4)
TEST contents[i].shape= (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
TEST np.zeros((pad_dim,int(features)) (32, 4)
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (2, 4)
TEST np.zeros((pad_dim,int(features)) (62, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (42, 4)
TEST np.zeros((pad_dim,int(features)) (22, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (12, 4)
TEST np.zeros((pad_dim,int(features)) (52, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 44, 6, 2]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 5
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (44, 4)
--------------------------------------------------------------------------------
TEST np.zeros((pad_dim,int(features)) (20, 4)
subjets per level= [32, 64, 44, 10]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 4
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (6, 4)
max_n_level= 64
--------------------------------------------------------------------------------
TEST np.zeros((pad_dim,int(features)) (58, 4)
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
subjets per level= [32, 64, 46, 16, 4, 4]
--------------------------------------------------------------------------------
TEST contents[i].shape= (32, 4)
max_n_level and len(levels[i])= 64 64
--------------------------------------------------------------------------------
TEST contents[i].shape= (2, 4)
Number of levels= 6
--------------------------------------------------------------------------------
TEST np.zeros((pad_dim,int(features)) (32, 4)
TEST np.zeros((pad_dim,int(features)) (62, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level= 64
--------------------------------------------------------------------------------
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (44, 4)
TEST np.zeros((pad_dim,int(features)) (20, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST contents[i].shape= (10, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
TEST np.zeros((pad_dim,int(features)) (54, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (46, 4)
TEST np.zeros((pad_dim,int(features)) (18, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (16, 4)
TEST np.zeros((pad_dim,int(features)) (48, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (4, 4)
TEST np.zeros((pad_dim,int(features)) (60, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (4, 4)
TEST np.zeros((pad_dim,int(features)) (60, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 36, 10, 2, 2]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 6
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (36, 4)
TEST np.zeros((pad_dim,int(features)) (28, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (10, 4)
TEST np.zeros((pad_dim,int(features)) (54, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (2, 4)
TEST np.zeros((pad_dim,int(features)) (62, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (2, 4)
TEST np.zeros((pad_dim,int(features)) (62, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 48, 8]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 4
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (48, 4)
TEST np.zeros((pad_dim,int(features)) (16, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (8, 4)
TEST np.zeros((pad_dim,int(features)) (56, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 60, 18]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 4
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (60, 4)
TEST np.zeros((pad_dim,int(features)) (4, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (18, 4)
TEST np.zeros((pad_dim,int(features)) (46, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 50, 12, 2]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 5
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (50, 4)
TEST np.zeros((pad_dim,int(features)) (14, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (12, 4)
TEST np.zeros((pad_dim,int(features)) (52, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (2, 4)
TEST np.zeros((pad_dim,int(features)) (62, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 44, 8]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 4
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (44, 4)
TEST np.zeros((pad_dim,int(features)) (20, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (8, 4)
TEST np.zeros((pad_dim,int(features)) (56, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 50, 10]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 4
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (50, 4)
TEST np.zeros((pad_dim,int(features)) (14, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (10, 4)
TEST np.zeros((pad_dim,int(features)) (54, 4)
