search_hyperparams.py sample_name= ../data/preprocessed_trees/
--------------------------------------------------------------------------------
Model dir= experiments/ginkgo/ginkgo_truth_lr_0.002_decay_0.9_batch_32_epochs_30_hidden_20_Njets_2000_features_4/run_0
CUDA_VISIBLE_DEVICES=2 /Users/laurengreenspan/miniconda3/bin/python train.py --model_dir=experiments/ginkgo/ginkgo_truth_lr_0.002_decay_0.9_batch_32_epochs_30_hidden_20_Njets_2000_features_4/run_0 --data_dir=../data/preprocessed_trees/ --jet_algorithm=truth --architecture=NiNRecNNReLU
sample_name=ginkgo
--------------------------------------------------------------------------------
sample_filename=ginkgo_truth_2000jets
------------------------------------------------------------
Loading the datasets...
- done loading the datasets
------------------------------------------------------------
Total parameters of the model= 12701
Total weights of the model= 12701
Model= PredictFromParticleEmbeddingNiNReLU(
  (fc_u): Linear(in_features=4, out_features=20, bias=True)
  (fc_h): Linear(in_features=60, out_features=20, bias=True)
  (fc_u_inner1): Linear(in_features=4, out_features=20, bias=True)
  (fc_u_outer1): Linear(in_features=4, out_features=20, bias=True)
  (fc_u_inner): Linear(in_features=4, out_features=20, bias=True)
  (fc_u_outer): Linear(in_features=4, out_features=20, bias=True)
  (fc_N0): Linear(in_features=20, out_features=20, bias=True)
  (fc_N1): Linear(in_features=20, out_features=20, bias=True)
  (fc_N2): Linear(in_features=20, out_features=20, bias=True)
  (fc_N3): Linear(in_features=20, out_features=20, bias=True)
  (fc_N4): Linear(in_features=20, out_features=20, bias=True)
  (fc_N5): Linear(in_features=20, out_features=20, bias=True)
  (fc_N6): Linear(in_features=20, out_features=20, bias=True)
  (fc_N7): Linear(in_features=20, out_features=20, bias=True)
  (fc_N8): Linear(in_features=20, out_features=20, bias=True)
  (fc_N9): Linear(in_features=20, out_features=20, bias=True)
  (transform): GRNNTransformSimpleNiNReLU(
    (fc_u): Linear(in_features=4, out_features=20, bias=True)
    (fc_h): Linear(in_features=60, out_features=20, bias=True)
    (fc_u_inner1): Linear(in_features=4, out_features=20, bias=True)
    (fc_u_outer1): Linear(in_features=4, out_features=20, bias=True)
    (fc_u_inner): Linear(in_features=4, out_features=20, bias=True)
    (fc_u_outer): Linear(in_features=4, out_features=20, bias=True)
    (fc_N0): Linear(in_features=20, out_features=20, bias=True)
    (fc_N1): Linear(in_features=20, out_features=20, bias=True)
    (fc_N2): Linear(in_features=20, out_features=20, bias=True)
    (fc_N3): Linear(in_features=20, out_features=20, bias=True)
    (fc_N4): Linear(in_features=20, out_features=20, bias=True)
    (fc_N5): Linear(in_features=20, out_features=20, bias=True)
    (fc_N6): Linear(in_features=20, out_features=20, bias=True)
    (fc_N7): Linear(in_features=20, out_features=20, bias=True)
    (fc_N8): Linear(in_features=20, out_features=20, bias=True)
    (fc_N9): Linear(in_features=20, out_features=20, bias=True)
  )
  (fc1): Linear(in_features=20, out_features=20, bias=True)
  (fc2): Linear(in_features=20, out_features=20, bias=True)
  (fc3): Linear(in_features=20, out_features=1, bias=True)
)
------------------------------------------------------------
Building optimizer...
Starting training for 30 epoch(s)
Epoch 1/30
100%|█████████████████████████████████████████████████████████████████████| 37/37 [00:16<00:00,  2.22it/s, loss=0.725]
- Train metrics: accuracy: 0.5247 ; loss: 0.7219
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
subjets per level= [32, 64, 40, 8]
subjets per level= [32, 64, 40, 4]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 4
Number of levels= 4
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
subjets per level= [32, 64, 56, 20, 2]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 5
--------------------------------------------------------------------------------
max_n_level= 64
max_n_level= 64
max_n_level= 64
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
TEST np.zeros((pad_dim,int(features)) (32, 4)
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST contents[i].shape= (40, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
TEST np.zeros((pad_dim,int(features)) (24, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
////////////////////////////////////////////////////////////////////////////////////////////////////
TEST contents[i].shape= (8, 4)
max_n_level and len(levels[i])= 64 64
TEST np.zeros((pad_dim,int(features)) (56, 4)
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (56, 4)
TEST np.zeros((pad_dim,int(features)) (8, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
TEST contents[i].shape= (64, 4)
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (20, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
TEST np.zeros((pad_dim,int(features)) (44, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (2, 4)
TEST np.zeros((pad_dim,int(features)) (62, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (40, 4)
TEST np.zeros((pad_dim,int(features)) (24, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (4, 4)
TEST np.zeros((pad_dim,int(features)) (60, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 38, 6, 2]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 5
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (38, 4)
TEST np.zeros((pad_dim,int(features)) (26, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 48, 12]
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
--------------------------------------------------------------------------------
Number of levels= 4
max_n_level and len(levels[i])= 64 64
--------------------------------------------------------------------------------
TEST contents[i].shape= (6, 4)
TEST np.zeros((pad_dim,imax_n_level= 64
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
subjets per level= [32, 64, 26, 6]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
Number of levels= 4
--------------------------------------------------------------------------------
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level= 64
max_n_level and len(levels[i])= 64 64
--------------------------------------------------------------------------------
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
max_n_level and len(levels[i])= 64 64
nt(features)) (58, 4)
TEST contents[i].shape= (48, 4)
TEST np.zeros((pad_dim,int(features)) (16, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (12, 4)
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
TEST contents[i].shape= (2, 4)
TEST np.zeros((pad_dim,int(features)) (52, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (62, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (26, 4)
TEST np.zeros((pad_dim,int(features)) (38, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (6, 4)
TEST np.zeros((pad_dim,int(features)) (58, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 42, 14]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 4
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (42, 4)
TEST np.zeros((pad_dim,int(features)) (22, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (14, 4)
TEST np.zeros((pad_dim,int(features)) (50, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 42, 14]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 4
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (42, 4)
TEST np.zeros((pad_dim,int(features)) (22, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (14, 4)
TEST np.zeros((pad_dim,int(features)) (50, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 36, 10]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 4
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (36, 4)
TEST np.zeros((pad_dim,int(features)) (28, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (10, 4)
TEST np.zeros((pad_dim,int(features)) (54, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 42, 12, 2, 2]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 6
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (42, 4)
TEST np.zeros((pad_dim,int(features)) (22, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (12, 4)
TEST np.zeros((pad_dim,int(features)) (52, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (2, 4)
TEST np.zeros((pad_dim,int(features)) (62, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (2, 4)
TEST np.zeros((pad_dim,int(features)) (62, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 44, 10, 4]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 5
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (44, 4)
TEST np.zeros((pad_dim,int(features)) (20, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (10, 4)
TEST np.zeros((pad_dim,int(features)) (54, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (4, 4)
TEST np.zeros((pad_dim,int(features)) (60, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 44, 16, 4]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 5
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (44, 4)
TEST np.zeros((pad_dim,int(features)) (20, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (16, 4)
TEST np.zeros((pad_dim,int(features)) (48, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (4, 4)
TEST np.zeros((pad_dim,int(features)) (60, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 34, 10]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 4
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (34, 4)
TEST np.zeros((pad_dim,int(features)) (30, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (10, 4)
TEST np.zeros((pad_dim,int(features)) (54, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 46, 8, 2]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 5
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (46, 4)
TEST np.zeros((pad_dim,int(features)) (18, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (8, 4)
TEST np.zeros((pad_dim,int(features)) (56, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (2, 4)
TEST np.zeros((pad_dim,int(features)) (62, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 36, 4, 2]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 5
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (36, 4)
TEST np.zeros((pad_dim,int(features)) (28, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (4, 4)
TEST np.zeros((pad_dim,int(features)) (60, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (2, 4)
TEST np.zeros((pad_dim,int(features)) (62, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 50, 6]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 4
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (50, 4)
TEST np.zeros((pad_dim,int(features)) (14, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (6, 4)
TEST np.zeros((pad_dim,int(features)) (58, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 46, 16, 2]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 5
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (46, 4)
TEST np.zeros((pad_dim,int(features)) (18, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (16, 4)
TEST np.zeros((pad_dim,int(features)) (48, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (2, 4)
TEST np.zeros((pad_dim,int(features)) (62, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 40, 4, 2]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 5
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (40, 4)
TEST np.zeros((pad_dim,int(features)) (24, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (4, 4)
TEST np.zeros((pad_dim,int(features)) (60, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
--------------------------------------------------------------------------------
subjets per level= [32, 64, 46, 16, 2]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 5
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
TEST contents[i].shape= (2, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
TEST np.zeros((pad_dim,int(features)) (62, 4)
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
subjets per level= [32, 64, 40, 8]
--------------------------------------------------------------------------------
max_n_level and len(levels[i])= 64 64
--------------------------------------------------------------------------------
Number of levels= 4
TEST contents[i].shape= (46, 4)
--------------------------------------------------------------------------------
TEST np.zeros((pad_dim,int(features)) (18, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (16, 4)
max_n_level= 64
TEST np.zeros((pad_dim,int(features)) (48, 4)
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST contents[i].shape= (2, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
TEST np.zeros((pad_dim,int(features)) (62, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (40, 4)
TEST np.zeros((pad_dim,int(features)) (24, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (8, 4)
TEST np.zeros((pad_dim,int(features)) (56, 4)
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
subjets per level= [32, 64, 46, 8, 2]
subjets per level= [32, 64, 42, 10, 4]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 5
Number of levels= 5
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
max_n_level= 64
max_n_level= 64
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (46, 4)
TEST np.zeros((pad_dim,int(features)) (18, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (8, 4)
TEST np.zeros((pad_dim,int(features)) (56, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (2, 4)
TEST np.zeros((pad_dim,int(features)) (62, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (42, 4)
TEST np.zeros((pad_dim,int(features)) (22, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (10, 4)
TEST np.zeros((pad_dim,int(features)) (54, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and l--------------------------------------------------------------------------------
en(levels[i])= 64 64
TEST contents[i].shape= (4, 4)
subjets per level= [32, 64, 42, 14, 2]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 5
TEST np.zeros((pad_dim,int(features)) (60, 4)
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (42, 4)
TEST np.zeros((pad_dim,int(features)) (22, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (14, 4)
TEST np.zeros((pad_dim,int(features)) (50, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (2, 4)
TEST np.zeros((pad_dim,int(features)) (62, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 48, 12, 2]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 5
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
subjets per level= [32, 64, 52, 12, 2]
subjets per level= [32, 64, 48, 10]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 5
Number of levels= 4
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
max_n_level= 64
max_n_level= 64
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (52, 4)
TEST np.zeros((pad_dim,int(features)) (12, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (12, 4)
TEST np.zeros((pad_dim,int(features)) (52, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (2, 4)
TEST np.zeros((pad_dim,int(features)) (62, 4)
TEST contents[i].shape= (48, 4)
TEST np.zeros((pad_dim,int(features)) (16, 4)
subjets per level= [32, 64, 52, 12, 2]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 5
--------------------------------------------------------------------------------
max_n_level= 64
////////////////////////////////////////////////////////////////////////////////////////////////////
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
max_n_level and len(levels[i])= 64 64
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (10, 4)
TEST contents[i].shape= (32, 4)
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (54, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (52, 4)
TEST np.zeros((pad_dim,int(features)) (12, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (12, 4)
TEST np.zeros((pad_dim,int(features)) (52, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (2, 4)
TEST np.zeros((pad_dim,int(features)) (62, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 54, 24, 2]
--------------------------------------------------------------------------------
---------------------------------------------------------------------------------------------
-------------------------------------------------------------------
--------------------------------------------------------------------------------
subjets per level= [32, 64, 42, 18, 8]
subjets per level= [32, 64, 38, 6]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 5
Number of levels= 5
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 4
--------------------------------------------------------------------------------
max_n_level= 64
max_n_level= 64
max_n_level= 64
-----------------------------------------------------------------------------------------------------------
-----------------------------------------------------
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
max_n_level and len(levels[i])= 64 64
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST contents[i].shape= (32, 4)
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
////////////////////////////////////////////////////////////////////////////////////////////////////
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (54, 4)
TEST np.zeros((pad_dim,int(features)) (10, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (42, 4)
TEST np.zeros((pad_dim,int(features)) (22, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (24, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
TEST np.zeros((pad_dim,int(features)) (40, 4)
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (18, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
TEST np.zeros((pad_dim,int(features)) (46, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
////////////////////////////////////////////////////////////////////////////////////////////////////
TEST contents[i].shape= (2, 4)
max_n_level and len(levels[i])= 64 64
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (38, 4)
TEST np.zeros((pad_dim,int(features)) (62, 4)
TEST contents[i].shape= (8, 4)
TEST np.zeros((pad_dim,int(features)) (26, 4)
TEST np.zeros((pad_dim,int(features)) (56, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (6, 4)
TEST np.zeros((pad_dim,int(features)) (58, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (48, 4)
TEST np.zeros((pad_dim,int(features)) (16, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (12, 4)
TEST np.zeros((pad_dim,int(features)) (52, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (2, 4)
TEST np.zeros((pad_dim,int(features)) (62, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 46, 14, 4, 2]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 6
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (46, 4)
TEST np.zeros((pad_dim,int(features)) (18, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (14, 4)
TEST np.zeros((pad_dim,int(features)) (50, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (4, 4)
TEST np.zeros((pad_dim,int(features)) (60, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (2, 4)
TEST np.zeros((pad_dim,int(features)) (62, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 46, 12]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 4
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (46, 4)
TEST np.zeros((pad_dim,int(features)) (18, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (12, 4)
TEST np.zeros((pad_dim,int(features)) (52, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 38, 14, 8]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 5
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (38, 4)
TEST np.zeros((pad_dim,int(features)) (26, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (14, 4)
TEST np.zeros((pad_dim,int(features)) (50, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (8, 4)
TEST np.zeros((pad_dim,int(features)) (56, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 36, 12, 4]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 5
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (36, 4)
TEST np.zeros((pad_dim,int(features)) (28, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (12, 4)
TEST np.zeros((pad_dim,int(features)) (52, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (4, 4)
TEST np.zeros((pad_dim,int(features)) (60, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 42, 10]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 4
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (42, 4)
TEST np.zeros((pad_dim,int(features)) (22, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (10, 4)
TEST np.zeros((pad_dim,int(features)) (54, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 42, 8, 2]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 5
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (42, 4)
TEST np.zeros((pad_dim,int(features)) (22, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (8, 4)
TEST np.zeros((pad_dim,int(features)) (56, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (2, 4)
TEST np.zeros((pad_dim,int(features)) (62, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 38, 10]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 4
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (38, 4)
TEST np.zeros((pad_dim,int(features)) (26, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (10, 4)
TEST np.zeros((pad_dim,int(features)) (54, 4)
train.py:221: RuntimeWarning: divide by zero encountered in true_divide
  inv_fpr = interp(base_tpr, tpr, 1. / fpr)[125]
- Eval metrics : accuracy: 0.4948 ; loss: 0.7085
- Found new best bg rejection = 3.305084745762712
Epoch 2/30
  0%|                                                                                          | 0/37 [00:00<?, ?it/s]
--------------------------------------------------------------------------------
subjets per level= [32, 64, 48, 14, 2]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 5
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
///////////////////////////////////////////////////////////////////////////////////////////////--------------------------------------------------------------------------------
subjets per level= [32, 64, 44, 6, 2]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 5
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (44, 4)
TEST np.zeros((pad_dim,int(features)) (20, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (6, 4)
TEST np.zeros((pad_dim,int(features)) (58, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (2, 4)
TEST np.zeros((pad_dim,int(features)) (62, 4)
/////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (48, 4)
TEST np.zeros((pad_dim,int(features)) (16, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (14, 4)
TEST np.zeros((pad_dim,int(features)) (50, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (2, 4)
TEST np.zeros((pad_dim,int(features)) (62, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 42, 12]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 4
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (42, 4)
TEST np.zeros((pad_dim,int(features)) (22, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (12, 4)
TEST np.zeros((pad_dim,int(features)) (52, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 44, 10]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 4
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
//////////////////////////////////////////////////////////////////////////////////////////////////--------------------------------------------------------------------------------
subjets per level= [32, 64, 46, 16, 4, 4]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 6
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
//
max_n_level and len(levels[i])= 64 64
--------------------------------------------------------------------------------
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (46, 4)
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (44, 4)
TEST np.zeros((pad_dim,int(features)) (18, 4)
TEST np.zeros((pad_dim,int(features)) (20, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (16, 4)
TEST contents[i].shape= (10, 4)
TEST np.zeros((pad_dim,int(features)) (48, 4)
TEST np.zeros((pad_dim,int(features)) (54, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (4, 4)
TEST np.zeros((pad_dim,int(features)) (60, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(lesubjets per level= [32, 64, 44, 6, 2]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 5
--------------------------------------------------------------------------------
vels[i])= 64 64
TEST contents[i].shape= (4, 4)
TEST np.zeros((pad_dim,int(features)) (60, 4)
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (44, 4)
TEST np.zeros((pad_dim,int(features)) (20, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (6, 4)
TEST np.zeros((pad_dim,int(features)) (58, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (2, 4)
TEST np.zeros((pad_dim,int(features)) (62, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 36, 10, 2, 2]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 6
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (36, 4)
TEST np.zeros((pad_dim,int(features)) (28, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (10, 4)
TEST np.zeros((pad_dim,int(features)) (54, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (2, 4)
TEST np.zeros((pad_dim,int(features)) (62, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (2, 4)
TEST np.zeros((pad_dim,int(features)) (62, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 50, 12, 2]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 5
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (50, 4)
TEST np.zeros((pad_dim,int(features)) (14, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (12, 4)
TEST np.zeros((pad_dim,int(features)) (52, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (2, 4)
TEST np.zeros((pad_dim,int(features)) (62, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 44, 8]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 4
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (44, 4)
TEST np.zeros((pad_dim,int(features)) (20, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (8, 4)
TEST np.zeros((pad_dim,int(features)) (56, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 48, 8]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 4
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (48, 4)
TEST np.zeros((pad_dim,int(features)) (16, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (8, 4)
TEST np.zeros((pad_dim,int(features)) (56, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 60, 18]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 4
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (60, 4)
TEST np.zeros((pad_dim,int(features)) (4, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (18, 4)
TEST np.zeros((pad_dim,int(features)) (46, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 50, 10]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 4
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (50, 4)
TEST np.zeros((pad_dim,int(features)) (14, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (10, 4)
TEST np.zeros((pad_dim,int(features)) (54, 4)
100%|█████████████████████████████████████████████████████████████████████| 37/37 [00:16<00:00,  2.29it/s, loss=0.701]
- Train metrics: accuracy: 0.5132 ; loss: 0.6984
--------------------------------------------------------------------------------
subjets per level= [32, 64, 40, 8]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 4
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (40, 4)
TEST np.zeros((pad_dim,int(features)) (24, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (8, 4)
TEST np.zeros((pad_dim,int(features)) (56, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 56, 20, 2]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 5
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (56, 4)
TEST np.zeros((pad_dim,int(features)) (8, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 40, 4]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 4
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (20, 4)
TEST np.zeros((pad_dim,int(features)) (44, 4)
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (2, 4)
max_n_level and len(levels[i])= 64 64
TEST np.zeros((pad_dim,int(features)) (62, 4)
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (40, 4)
TEST np.zeros((pad_dim,int(features)) (24, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (4, 4)
TEST np.zeros((pad_dim,int(features)) (60, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 26, 6]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 4
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
///////////////////////////////////////////////////////////////////////////////////////////////////--------------------------------------------------------------------------------
subjets per level= [32, 64, 38, 6, 2]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 5
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
/
--------------------------------------------------------------------------------
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (26, 4)
TEST np.zeros((pad_dim,int(features)) (38, 4)
subjets per level= [32, 64, 48, 12]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 4
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (6, 4)
TEST np.zeros((pad_dim,int(features)) (58, 4)
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (38, 4)
TEST np.zeros((pad_dim,int(features)) (26, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (6, 4)
TEST np.zeros((pad_dim,int(features)) (58, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (2, 4)
TEST np.zeros((pad_dim,int(features)) (62, 4)
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (48, 4)
TEST np.zeros((pad_dim,int(features)) (16, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (12, 4)
TEST np.zeros((pad_dim,int(features)) (52, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 42, 14]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 4
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (42, 4)
TEST np.zeros((pad_dim,int(features)) (22, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (14, 4)
TEST np.zeros((pad_dim,int(features)) (50, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 42, 14]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 4
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (42, 4)
TEST np.zeros((pad_dim,int(features)) (22, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (14, 4)
TEST np.zeros((pad_dim,int(features)) (50, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 36, 10]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 4
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (36, 4)
TEST np.zeros((pad_dim,int(features)) (28, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (10, 4)
TEST np.zeros((pad_dim,int(features)) (54, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 42, 12, 2, 2]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 6
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (42, 4)
TEST np.zeros((pad_dim,int(features)) (22, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (12, 4)
TEST np.zeros((pad_dim,int(features)) (52, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (2, 4)
TEST np.zeros((pad_dim,int(features)) (62, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (2, 4)
TEST np.zeros((pad_dim,int(features)) (62, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 44, 10, 4]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 5
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (44, 4)
TEST np.zeros((pad_dim,int(features)) (20, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (10, 4)
TEST np.zeros((pad_dim,int(features)) (54, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (4, 4)
TEST np.zeros((pad_dim,int(features)) (60, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 44, 16, 4]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 5
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (44, 4)
TEST np.zeros((pad_dim,int(features)) (20, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (16, 4)
TEST np.zeros((pad_dim,int(features)) (48, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (4, 4)
TEST np.zeros((pad_dim,int(features)) (60, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 34, 10]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 4
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (34, 4)
TEST np.zeros((pad_dim,int(features)) (30, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (10, 4)
TEST np.zeros((pad_dim,int(features)) (54, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 46, 8, 2]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 5
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 36, 4, 2]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 5
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level= 64
--------------------------------------------------------------------------------
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (46, 4)
TEST np.zeros((pad_dim,int(features)) (18, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
subjets per level= [32, 64, 46, 16, 2]
TEST contents[i].shape= (32, 4)
max_n_level and len(levels[i])= 64 64
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
TEST contents[i].shape= (8, 4)
Number of levels= 5
--------------------------------------------------------------------------------
TEST np.zeros((pad_dim,int(features)) (32, 4)
TEST np.zeros((pad_dim,int(features)) (56, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (2, 4)
TEST np.zeros((pad_dim,int(features)) (62, 4)
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
max_n_level= 64
TEST contents[i].shape= (36, 4)
--------------------------------------------------------------------------------
TEST np.zeros((pad_dim,int(features)) (28, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
////////////////////////////////////////////////////////////////////////////////////////////////////
TEST contents[i].shape= (4, 4)
TEST np.zeros((pad_dim,int(features)) (60, 4)
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
TEST np.zeros((pad_dim,int(features)) (32, 4)
max_n_level and len(levels[i])= 64 64
--------------------------------------------------------------------------------
subjets per level= [32, 64, 40, 4, 2]
TEST contents[i].shape= (2, 4)
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 5
--------------------------------------------------------------------------------
TEST np.zeros((pad_dim,int(features)) (62, 4)
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
subjets per level= [32, 64, 46, 16, 2]
subjets per level= [32, 64, 50, 6]
max_n_level and len(levels[i])= 64 64
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
TEST contents[i].shape= (64, 4)
Number of levels= 5
Number of levels= 4
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
TEST np.zeros((pad_dim,int(features)) (0, 4)
max_n_level= 64
////////////////////////////////////////////////////////////////////////////////////////////////////
--------------------------------------------------------------------------------
max_n_level and len(levels[i])= 64 64
////////////////////////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////////////////////////
TEST contents[i].shape= (40, 4)
max_n_level and len(levels[i])= 64 64
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST contents[i].shape= (46, 4)
TEST np.zeros((pad_dim,int(features)) (24, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
TEST np.zeros((pad_dim,int(features)) (18, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (16, 4)
TEST np.zeros((pad_dim,int(features)) (48, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST contents[i].shape= (2, 4)
TEST np.zeros((pad_dim,int(features)) (62, 4)
TEST contents[i].shape= (4, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
TEST np.zeros((pad_dim,int(features)) (60, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (2, 4)
TEST contents[i].shape= (46, 4)
TEST np.zeros((pad_dim,int(features)) (62, 4)
TE--------------------------------------------------------------------------------
ST np.zeros((pad_dim,int(features)) (18, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 46, 8, 2]
subjets per level= [32, 64, 42, 10, 4]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 5
--------------------------------------------------------------------------------
Number of levels= 5
--------------------------------------------------------------------------------
max_n_level= 64
max_n_level= 64
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
max_n_level and len(levels[i])= 64 64
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST contents[i].shape= (32, 4)
TEST contents[i].shape= (16, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
TEST np.zeros((pad_dim,int(features)) (48, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
max_n_level and len(levels[i])= 64 64
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (2, 4)
TEST contents[i].shape= (64, 4)
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
TEST np.zeros((pad_dim,int(features)) (62, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (42, 4)
TEST contents[i].shape= (46, 4)
TEST np.zeros((pad_dim,int(features)) (22, 4)
TEST np.zeros((pad_dim,int(features)) (18, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (10, 4)
--------------------------------------------------------------------------------
TEST contents[i].shape= (8, 4)
subjets per level= [32, 64, 42, 14, 2]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
TEST np.zeros((pad_dim,int(features)) (54, 4)
Number of levels= 5
TEST np.zeros((pad_dim,int(features)) (56, 4)
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (2, 4)
TEST np.zeros((pad_dim,int(features)) (62, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level= 64
--------------------------------------------------------------------------------
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (4, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
TEST np.zeros((pad_dim,int(features)) (60, 4)
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (42, 4)
TEST np.zeros((pad_dim,int(features)) (22, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (14, 4)
TEST np.zeros((pad_dim,int(features)) (50, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (2, 4)
TEST np.zeros((pad_dim,int(features)) (62, 4)
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (50, 4)
TEST np.zeros((pad_dim,int(features)) (14, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (6, 4)
TEST np.zeros((pad_dim,int(features)) (58, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 40, 8]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 4
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (40, 4)
TEST np.zeros((pad_dim,int(features)) (24, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (8, 4)
TEST np.zeros((pad_dim,int(features)) (56, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 48, 12, 2]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 5
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (48, 4)
TEST np.zeros((pad_dim,int(features)) (16, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (12, 4)
TEST np.zeros((pad_dim,int(features)) (52, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (2, 4)
TEST np.zeros((pad_dim,int(features)) (62, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 52, 12, 2]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 5
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (52, 4)
TEST np.zeros((pad_dim,int(features)) (12, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (12, 4)
TEST np.zeros((pad_dim,int(features)) (52, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (2, 4)
TEST np.zeros((pad_dim,int(features)) (62, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 52, 12, 2]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 5
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (52, 4)
TEST np.zeros((pad_dim,int(features)) (12, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (12, 4)
TEST np.zeros((pad_dim,int(features)) (52, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (2, 4)
TEST np.zeros((pad_dim,int(features)) (62, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 48, 10]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 4
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (48, 4)
TEST np.zeros((pad_dim,int(features)) (16, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (10, 4)
TEST np.zeros((pad_dim,int(features)) (54, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 46, 14, 4, 2]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 6
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (46, 4)
TEST np.zeros((pad_dim,int(features)) (18, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (14, 4)
TEST np.zeros((pad_dim,int(features)) (50, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (4, 4)
TEST np.zeros((pad_dim,int(features)) (60, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (2, 4)
TEST np.zeros((pad_dim,int(features)) (62, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 42, 18, 8]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 5
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (42, 4)
TEST np.zeros((pad_dim,int(features)) (22, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (18, 4)
TEST np.zeros((pad_dim,int(features)) (46, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (8, 4)
TEST np.zeros((pad_dim,int(features)) (56, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 54, 24, 2]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 5
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (54, 4)
TEST np.zeros((pad_dim,int(features)) (10, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (24, 4)
TEST np.zeros((pad_dim,int(features)) (40, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (2, 4)
TEST np.zeros((pad_dim,int(features)) (62, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 38, 6]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 4
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (38, 4)
TEST np.zeros((pad_dim,int(features)) (26, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (6, 4)
TEST np.zeros((pad_dim,int(features)) (58, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 46, 12]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 4
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (46, 4)
TEST np.zeros((pad_dim,int(features)) (18, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (12, 4)
TEST np.zeros((pad_dim,int(features)) (52, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 38, 14, 8]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 5
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (38, 4)
TEST np.zeros((pad_dim,int(features)) (26, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (14, 4)
TEST np.zeros((pad_dim,int(features)) (50, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (8, 4)
TEST np.zeros((pad_dim,int(features)) (56, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 36, 12, 4]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 5
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
train.py:221: RuntimeWarning: divide by zero encountered in true_divide
  inv_fpr = interp(base_tpr, tpr, 1. / fpr)[125]
- Eval metrics : accuracy: 0.4870 ; loss: 0.6999
Epoch 3/30
  0%|                                                                                          | 0/37 [00:00<?, ?it/s]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
subjets per level= [32, 64, 44, 6, 2]
--------------------------------------------------------------------------------
subjets per level= [32, 64, 48, 14, 2]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 5
--------------------------------------------------------------------------------
Number of levels= 5
--------------------------------------------------------------------------------
max_n_level= 64
max_n_level= 64
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (48, 4)
max_n_level and len(levels[i])= 64 64
TEST np.zeros((pad_dim,int(features)) (16, 4)
TEST contents[i].shape= (44, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 42, 12]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
TEST np.zeros((pad_dim,int(features)) (20, 4)
Number of levels= 4
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (14, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
TEST np.zeros((pad_dim,int(features)) (50, 4)
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (6, 4)
TEST np.zeros((pad_dim,int(features)) (58, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_lemax_n_level and len(levels[i])= 64 64
vel= 64
////////////////////////////////////////////////////////////////////////////////////////////////////
TEST contents[i].shape= (2, 4)
--------------------------------------------------------------------------------
TEST np.zeros((pad_dim,int(features)) (62, 4)
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (2, 4)
TEST np.zeros((pad_dim,int(features)) (62, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (42, 4)
TEST np.zeros((pad_dim,int(features)) (22, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (12, 4)
TEST np.zeros((pad_dim,int(features)) (52, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 44, 6, 2]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 5
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////--------------------------------------------------------------------------------
subjets per level= [32, 64, 46, 16, 4, 4]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 6
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (46, 4)
TEST np.zeros((pad_dim,int(features)) (18, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (16, 4)
TEST np.zeros((pad_dim,int(features)) (48, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (4, 4)
TEST np.zeros((pad_dim,int(features)) (60, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (4, 4)
TEST np.zeros((pad_dim,int(features)) (60, 4)
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (44, 4)
TEST np.zeros((pad_dim,int(features)) (20, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (6, 4)
TEST np.zeros((pad_dim,int(features)) (58, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (2, 4)
TEST np.zeros((pad_dim,int(features)) (62, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 44, 10]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 4
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (44, 4)
TEST np.zeros((pad_dim,int(features)) (20, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (10, 4)
TEST np.zeros((pad_dim,int(features)) (54, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 36, 10, 2, 2]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 6
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (36, 4)
TEST np.zeros((pad_dim,int(features)) (28, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (10, 4)
TEST np.zeros((pad_dim,int(features)) (54, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (2, 4)
TEST np.zeros((pad_dim,int(features)) (62, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (2, 4)
TEST np.zeros((pad_dim,int(features)) (62, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 48, 8]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 4
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (48, 4)
TEST np.zeros((pad_dim,int(features)) (16, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (8, 4)
TEST np.zeros((pad_dim,int(features)) (56, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 60, 18]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 4
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (60, 4)
TEST np.zeros((pad_dim,int(features)) (4, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (18, 4)
TEST np.zeros((pad_dim,int(features)) (46, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 50, 12, 2]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 5
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (50, 4)
TEST np.zeros((pad_dim,int(features)) (14, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (12, 4)
TEST np.zeros((pad_dim,int(features)) (52, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (2, 4)
TEST np.zeros((pad_dim,int(features)) (62, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 44, 8]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 4
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (44, 4)
TEST np.zeros((pad_dim,int(features)) (20, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (8, 4)
TEST np.zeros((pad_dim,int(features)) (56, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 50, 10]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 4
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (50, 4)
TEST np.zeros((pad_dim,int(features)) (14, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (10, 4)
TEST np.zeros((pad_dim,int(features)) (54, 4)
100%|█████████████████████████████████████████████████████████████████████| 37/37 [00:10<00:00,  3.62it/s, loss=0.697]
- Train metrics: accuracy: 0.5280 ; loss: 0.6957
--------------------------------------------------------------------------------
subjets per level= [32, 64, 40, 4]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 4
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (40, 4)
TEST np.zeros((pad_dim,int(features)) (24, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (4, 4)
TEST np.zeros((pad_dim,int(features)) (60, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 56, 20, 2]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 5
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
subjets per level= [32, 64, 40, 8]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 4
max_n_level= 64
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
TEST np.zeros((pad_dim,int(features)) (0, 4)
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (56, 4)
TEST np.zeros((pad_dim,int(features)) (8, 4)
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (20, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
TEST np.zeros((pad_dim,int(features)) (44, 4)
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (40, 4)
TEST np.zeros((pad_dim,int(features)) (24, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (2, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (8, 4)
TEST np.zeros((pad_dim,int(features)) (62, 4)
TEST np.zeros((pad_dim,int(features)) (56, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 48, 12]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 4
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (48, 4)
TEST np.zeros((pad_dim,int(features)) (16, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (12, 4)
TEST np.zeros((pad_dim,int(features)) (52, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 38, 6, 2]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 5
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (38, 4)
TEST np.zeros((pad_dim,int(features)) (26, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (6, 4)
TEST np.zeros((pad_dim,int(features)) (58, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (2, 4)
TEST np.zeros((pad_dim,int(features)) (62, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 26, 6]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 4
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (26, 4)
TEST np.zeros((pad_dim,int(features)) (38, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (6, 4)
TEST np.zeros((pad_dim,int(features)) (58, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 42, 14]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 4
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (42, 4)
TEST np.zeros((pad_dim,int(features)) (22, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (14, 4)
TEST np.zeros((pad_dim,int(features)) (50, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 42, 12, 2, 2]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 6
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (42, 4)
TEST np.zeros((pad_dim,int(features)) (22, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (12, 4)
TEST np.zeros((pad_dim,int(features)) (52, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (2, 4)
TEST np.zeros((pad_dim,int(features)) (62, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (2, 4)
TEST np.zeros((pad_dim,int(features)) (62, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 44, 10, 4]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 5
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (44, 4)
TEST np.zeros((pad_dim,int(features)) (20, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (10, 4)
TEST np.zeros((pad_dim,int(features)) (54, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (4, 4)
TEST np.zeros((pad_dim,int(features)) (60, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 42, 14]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 4
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (42, 4)
TEST np.zeros((pad_dim,int(features)) (22, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (14, 4)
TEST np.zeros((pad_dim,int(features)) (50, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 36, 10]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 4
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (36, 4)
TEST np.zeros((pad_dim,int(features)) (28, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (10, 4)
TEST np.zeros((pad_dim,int(features)) (54, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 44, 16, 4]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 5
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (44, 4)
TEST np.zeros((pad_dim,int(features)) (20, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (16, 4)
TEST np.zeros((pad_dim,int(features)) (48, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (4, 4)
TEST np.zeros((pad_dim,int(features)) (60, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 34, 10]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 4
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (34, 4)
TEST np.zeros((pad_dim,int(features)) (30, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (10, 4)
TEST np.zeros((pad_dim,int(features)) (54, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 46, 8, 2]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 5
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (46, 4)
TEST np.zeros((pad_dim,int(features)) (18, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (8, 4)
TEST np.zeros((pad_dim,int(features)) (56, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (2, 4)
TEST np.zeros((pad_dim,int(features)) (62, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 36, 4, 2]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 5
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (36, 4)
TEST np.zeros((pad_dim,int(features)) (28, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (4, 4)
TEST np.zeros((pad_dim,int(features)) (60, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (2, 4)
TEST np.zeros((pad_dim,int(features)) (62, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 50, 6]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 4
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (50, 4)
TEST np.zeros((pad_dim,int(features)) (14, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (6, 4)
TEST np.zeros((pad_dim,int(features)) (58, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 46, 16, 2]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 5
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (46, 4)
TEST np.zeros((pad_dim,int(features)) (18, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (16, 4)
TEST np.zeros((pad_dim,int(features)) (48, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (2, 4)
TEST np.zeros((pad_dim,int(features)) (62, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 40, 4, 2]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 5
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (40, 4)
TEST np.zeros((pad_dim,int(features)) (24, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (4, 4)
TEST np.zeros((pad_dim,int(features)) (60, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (2, 4)
TEST np.zeros((pad_dim,int(features)) (62, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 46, 16, 2]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 5
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (46, 4)
TEST np.zeros((pad_dim,int(features)) (18, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (16, 4)
TEST np.zeros((pad_dim,int(features)) (48, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (2, 4)
TEST np.zeros((pad_dim,int(features)) (62, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 40, 8]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 4
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (40, 4)
TEST np.zeros((pad_dim,int(features)) (24, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (8, 4)
TEST np.zeros((pad_dim,int(features)) (56, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 42, 10, 4]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 5
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (42, 4)
TEST np.zeros((pad_dim,int(features)) (22, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (10, 4)
TEST np.zeros((pad_dim,int(features)) (54, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (4, 4)
TEST np.zeros((pad_dim,int(features)) (60, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 46, 8, 2]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 5
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (46, 4)
TEST np.zeros((pad_dim,int(features)) (18, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (8, 4)
TEST np.zeros((pad_dim,int(features)) (56, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (2, 4)
TEST np.zeros((pad_dim,int(features)) (62, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 42, 14, 2]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 5
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (42, 4)
TEST np.zeros((pad_dim,int(features)) (22, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (14, 4)
TEST np.zeros((pad_dim,int(features)) (50, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (2, 4)
TEST np.zeros((pad_dim,int(features)) (62, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 48, 12, 2]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 5
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (48, 4)
TEST np.zeros((pad_dim,int(features)) (16, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (12, 4)
TEST np.zeros((pad_dim,int(features)) (52, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (2, 4)
TEST np.zeros((pad_dim,int(features)) (62, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 52, 12, 2]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 5
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (52, 4)
TEST np.zeros((pad_dim,int(features)) (12, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (12, 4)
TEST np.zeros((pad_dim,int(features)) (52, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (2, 4)
TEST np.zeros((pad_dim,int(features)) (62, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 52, 12, 2]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 5
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (52, 4)
TEST np.zeros((pad_dim,int(features)) (12, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (12, 4)
TEST np.zeros((pad_dim,int(features)) (52, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (2, 4)
TEST np.zeros((pad_dim,int(features)) (62, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 48, 10]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 4
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (48, 4)
TEST np.zeros((pad_dim,int(features)) (16, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (10, 4)
TEST np.zeros((pad_dim,int(features)) (54, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 46, 14, 4, 2]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 6
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (46, 4)
TEST np.zeros((pad_dim,int(features)) (18, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (14, 4)
TEST np.zeros((pad_dim,int(features)) (50, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (4, 4)
TEST np.zeros((pad_dim,int(features)) (60, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (2, 4)
TEST np.zeros((pad_dim,int(features)) (62, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 42, 18, 8]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 5
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (42, 4)
TEST np.zeros((pad_dim,int(features)) (22, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (18, 4)
TEST np.zeros((pad_dim,int(features)) (46, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (8, 4)
TEST np.zeros((pad_dim,int(features)) (56, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 54, 24, 2]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 5
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (54, 4)
TEST np.zeros((pad_dim,int(features)) (10, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (24, 4)
TEST np.zeros((pad_dim,int(features)) (40, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (2, 4)
TEST np.zeros((pad_dim,int(features)) (62, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 38, 6]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 4
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (38, 4)
TEST np.zeros((pad_dim,int(features)) (26, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (6, 4)
TEST np.zeros((pad_dim,int(features)) (58, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 46, 12]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 4
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (46, 4)
TEST np.zeros((pad_dim,int(features)) (18, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (12, 4)
TEST np.zeros((pad_dim,int(features)) (52, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 38, 14, 8]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 5
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (38, 4)
TEST np.zeros((pad_dim,int(features)) (26, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (14, 4)
TEST np.zeros((pad_dim,int(features)) (50, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (8, 4)
TEST np.zeros((pad_dim,int(features)) (56, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 36, 12, 4]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 5
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (36, 4)
TEST np.zeros((pad_dim,int(features)) (28, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (12, 4)
TEST np.zeros((pad_dim,int(features)) (52, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (4, 4)
TEST np.zeros((pad_dim,int(features)) (60, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 42, 10]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 4
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (42, 4)
TEST np.zeros((pad_dim,int(features)) (22, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (10, 4)
TEST np.zeros((pad_dim,int(features)) (54, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 42, 8, 2]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 5
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (42, 4)
TEST np.zeros((pad_dim,int(features)) (22, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (8, 4)
TEST np.zeros((pad_dim,int(features)) (56, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (2, 4)
TEST np.zeros((pad_dim,int(features)) (62, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 38, 10]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 4
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (38, 4)
TEST np.zeros((pad_dim,int(features)) (26, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (10, 4)
TEST np.zeros((pad_dim,int(features)) (54, 4)
train.py:221: RuntimeWarning: divide by zero encountered in true_divide
  inv_fpr = interp(base_tpr, tpr, 1. / fpr)[125]
- Eval metrics : accuracy: 0.4922 ; loss: 0.6978
Epoch 4/30
  0%|                                                                                          | 0/37 [00:00<?, ?it/s]
--------------------------------------------------------------------------------
subjets per level= [32, 64, 48, 14, 2]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 5
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (48, 4)
TEST np.zeros((pad_dim,int(features)) (16, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (14, 4)
TEST np.zeros((pad_dim,int(features)) (50, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (2, 4)
TEST np.zeros((pad_dim,int(features)) (62, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 42, 12]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 4
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 44, 6, 2]
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
--------------------------------------------------------------------------------
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
Number of levels= 5
--------------------------------------------------------------------------------
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (42, 4)
max_n_level= 64
TEST np.zeros((pad_dim,int(features)) (22, 4)
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST contents[i].shape= (12, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
TEST np.zeros((pad_dim,int(features)) (52, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (44, 4)
TEST np.zeros((pad_dim,int(features)) (20, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (6, 4)
TEST np.zeros((pad_dim,int(features)) (58, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (2, 4)
TEST np.zeros((pad_dim,int(features)) (62, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 44, 6, 2]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 5
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
subjets per level= [32, 64, 44, 10]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
max_n_level and len(levels[i])= 64 64
Number of levels= 4
--------------------------------------------------------------------------------
TEST contents[i].shape= (44, 4)
TEST np.zeros((pad_dim,int(features)) (20, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level= 64
max_n_level and len(levels[i])= 64 64
--------------------------------------------------------------------------------
TEST contents[i].shape= (6, 4)
TEST np.zeros((pad_dim,int(features)) (58, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (2, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
TEST np.zeros((pad_dim,int(features)) (62, 4)
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (44, 4)
TEST np.zeros((pad_dim,int(features)) (20, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (10, 4)
TEST np.zeros((pad_dim,int(features)) (54, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 46, 16, 4, 4]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 6
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (46, 4)
TEST np.zeros((pad_dim,int(features)) (18, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (16, 4)
TEST np.zeros((pad_dim,int(features)) (48, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (4, 4)
TEST np.zeros((pad_dim,int(features)) (60, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (4, 4)
TEST np.zeros((pad_dim,int(features)) (60, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 36, 10, 2, 2]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 6
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (36, 4)
TEST np.zeros((pad_dim,int(features)) (28, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (10, 4)
TEST np.zeros((pad_dim,int(features)) (54, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (2, 4)
TEST np.zeros((pad_dim,int(features)) (62, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (2, 4)
TEST np.zeros((pad_dim,int(features)) (62, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 48, 8]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 4
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (48, 4)
TEST np.zeros((pad_dim,int(features)) (16, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (8, 4)
TEST np.zeros((pad_dim,int(features)) (56, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 60, 18]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 4
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (60, 4)
TEST np.zeros((pad_dim,int(features)) (4, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (18, 4)
TEST np.zeros((pad_dim,int(features)) (46, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 50, 12, 2]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 5
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (50, 4)
TEST np.zeros((pad_dim,int(features)) (14, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (12, 4)
TEST np.zeros((pad_dim,int(features)) (52, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (2, 4)
TEST np.zeros((pad_dim,int(features)) (62, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 44, 8]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 4
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (44, 4)
TEST np.zeros((pad_dim,int(features)) (20, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (8, 4)
TEST np.zeros((pad_dim,int(features)) (56, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 50, 10]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 4
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (50, 4)
TEST np.zeros((pad_dim,int(features)) (14, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (10, 4)
TEST np.zeros((pad_dim,int(features)) (54, 4)
Checkpoint Directory exists!
--------------------------------------------------------------------------------
subjets per level= [32, 64, 40, 4]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 4
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (40, 4)
TEST np.zeros((pad_dim,int(features)) (24, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
--------------------------------------------------------------------------------
subjets per level= [32, 64, 56, 20, 2]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 5
--------------------------------------------------------------------------------
TEST contents[i].shape= (4, 4)
TEST np.zeros((pad_dim,int(features)) (60, 4)
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (56, 4)
TEST np.zeros((pad_dim,int(features)) (8, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (20, 4)
TEST np.zeros((pad_dim,int(features)) (44, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
--------------------------------------------------------------------------------
subjets per level= [32, 64, 40, 8]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 4
--------------------------------------------------------------------------------
TEST contents[i].shape= (2, 4)
TEST np.zeros((pad_dim,int(features)) (62, 4)
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (40, 4)
TEST np.zeros((pad_dim,int(features)) (24, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (8, 4)
TEST np.zeros((pad_dim,int(features)) (56, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 38, 6, 2]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 5
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (38, 4)
--------------------------------------------------------------------------------
TEST np.zeros((pad_dim,int(features)) (26, 4)
subjets per level= [32, 64, 26, 6]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 4
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (6, 4)
TEST np.zeros((pad_dim,int(features)) (58, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
max_n_level= 64
TEST contents[i].shape= (2, 4)
--------------------------------------------------------------------------------
TEST np.zeros((pad_dim,int(features)) (62, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (26, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 48, 12]
--------------------------------------------------------------------------------
TEST np.zeros((pad_dim,int(features)) (38, 4)
--------------------------------------------------------------------------------
Number of levels= 4
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level= 64
--------------------------------------------------------------------------------
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (6, 4)
TEST np.zeros((pad_dim,int(features)) (58, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (48, 4)
TEST np.zeros((pad_dim,int(features)) (16, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (12, 4)
TEST np.zeros((pad_dim,int(features)) (52, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 42, 14]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 4
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (42, 4)
TEST np.zeros((pad_dim,int(features)) (22, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (14, 4)
TEST np.zeros((pad_dim,int(features)) (50, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 42, 14]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 4
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (42, 4)
TEST np.zeros((pad_dim,int(features)) (22, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (14, 4)
TEST np.zeros((pad_dim,int(features)) (50, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 36, 10]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 4
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (36, 4)
TEST np.zeros((pad_dim,int(features)) (28, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (10, 4)
TEST np.zeros((pad_dim,int(features)) (54, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 42, 12, 2, 2]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 6
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (42, 4)
TEST np.zeros((pad_dim,int(features)) (22, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (12, 4)
TEST np.zeros((pad_dim,int(features)) (52, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (2, 4)
TEST np.zeros((pad_dim,int(features)) (62, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (2, 4)
TEST np.zeros((pad_dim,int(features)) (62, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 44, 10, 4]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 5
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (44, 4)
TEST np.zeros((pad_dim,int(features)) (20, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (10, 4)
TEST np.zeros((pad_dim,int(features)) (54, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (4, 4)
TEST np.zeros((pad_dim,int(features)) (60, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 44, 16, 4]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 5
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (44, 4)
TEST np.zeros((pad_dim,int(features)) (20, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (16, 4)
TEST np.zeros((pad_dim,int(features)) (48, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (4, 4)
100%|█████████████████████████████████████████████████████████████████████| 37/37 [00:13<00:00,  2.82it/s, loss=0.694]
- Train metrics: accuracy: 0.5247 ; loss: 0.6927
--------------------------------------------------------------------------------
subjets per level= [32, 64, 34, 10]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 4
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
--------------------------------------------------------------------------------
subjets per level= [32, 64, 46, 8, 2]
max_n_level and len(levels[i])= 64 64
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
TEST contents[i].shape= (34, 4)
Number of levels= 5
--------------------------------------------------------------------------------
TEST np.zeros((pad_dim,int(features)) (30, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level= 64
--------------------------------------------------------------------------------
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (10, 4)
TEST np.zeros((pad_dim,int(features)) (54, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (46, 4)
TEST np.zeros((pad_dim,int(features)) (18, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (8, 4)
TEST np.zeros((pad_dim,int(features)) (56, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (2, 4)
TEST np.zeros((pad_dim,int(features)) (62, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 36, 4, 2]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 5
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (36, 4)
TEST np.zeros((pad_dim,int(features)) (28, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (4, 4)
TEST np.zeros((pad_dim,int(features)) (60, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (2, 4)
TEST np.zeros((pad_dim,int(features)) (62, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 50, 6]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 4
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (50, 4)
TEST np.zeros((pad_dim,int(features)) (14, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (6, 4)
TEST np.zeros((pad_dim,int(features)) (58, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 46, 16, 2]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 5
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (46, 4)
TEST np.zeros((pad_dim,int(features)) (18, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (16, 4)
TEST np.zeros((pad_dim,int(features)) (48, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (2, 4)
TEST np.zeros((pad_dim,int(features)) (62, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 40, 4, 2]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 5
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (40, 4)
TEST np.zeros((pad_dim,int(features)) (24, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (4, 4)
TEST np.zeros((pad_dim,int(features)) (60, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (2, 4)
TEST np.zeros((pad_dim,int(features)) (62, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 46, 16, 2]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 5
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (46, 4)
TEST np.zeros((pad_dim,int(features)) (18, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (16, 4)
TEST np.zeros((pad_dim,int(features)) (48, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (2, 4)
TEST np.zeros((pad_dim,int(features)) (62, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 40, 8]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 4
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (40, 4)
TEST np.zeros((pad_dim,int(features)) (24, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (8, 4)
TEST np.zeros((pad_dim,int(features)) (56, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 42, 10, 4]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 5
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (42, 4)
TEST np.zeros((pad_dim,int(features)) (22, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (10, 4)
TEST np.zeros((pad_dim,int(features)) (54, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (4, 4)
TEST np.zeros((pad_dim,int(features)) (60, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 46, 8, 2]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 5
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (46, 4)
TEST np.zeros((pad_dim,int(features)) (18, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (8, 4)
TEST np.zeros((pad_dim,int(features)) (56, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (2, 4)
TEST np.zeros((pad_dim,int(features)) (62, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 42, 14, 2]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 5
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (42, 4)
TEST np.zeros((pad_dim,int(features)) (22, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (14, 4)
TEST np.zeros((pad_dim,int(features)) (50, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (2, 4)
TEST np.zeros((pad_dim,int(features)) (62, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 48, 12, 2]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 5
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (48, 4)
TEST np.zeros((pad_dim,int(features)) (16, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (12, 4)
TEST np.zeros((pad_dim,int(features)) (52, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (2, 4)
TEST np.zeros((pad_dim,int(features)) (62, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 52, 12, 2]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 5
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (52, 4)
TEST np.zeros((pad_dim,int(features)) (12, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (12, 4)
TEST np.zeros((pad_dim,int(features)) (52, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (2, 4)
TEST np.zeros((pad_dim,int(features)) (62, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 52, 12, 2]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 5
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (52, 4)
TEST np.zeros((pad_dim,int(features)) (12, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (12, 4)
TEST np.zeros((pad_dim,int(features)) (52, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (2, 4)
TEST np.zeros((pad_dim,int(features)) (62, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 48, 10]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 4
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (48, 4)
TEST np.zeros((pad_dim,int(features)) (16, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (10, 4)
TEST np.zeros((pad_dim,int(features)) (54, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 46, 14, 4, 2]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 6
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (46, 4)
TEST np.zeros((pad_dim,int(features)) (18, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (14, 4)
TEST np.zeros((pad_dim,int(features)) (50, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (4, 4)
TEST np.zeros((pad_dim,int(features)) (60, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (2, 4)
TEST np.zeros((pad_dim,int(features)) (62, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 42, 18, 8]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 5
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (42, 4)
TEST np.zeros((pad_dim,int(features)) (22, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (18, 4)
TEST np.zeros((pad_dim,int(features)) (46, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (8, 4)
TEST np.zeros((pad_dim,int(features)) (56, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 54, 24, 2]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 5
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (54, 4)
TEST np.zeros((pad_dim,int(features)) (10, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (24, 4)
TEST np.zeros((pad_dim,int(features)) (40, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (2, 4)
TEST np.zeros((pad_dim,int(features)) (62, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 38, 6]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 4
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (38, 4)
TEST np.zeros((pad_dim,int(features)) (26, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (6, 4)
TEST np.zeros((pad_dim,int(features)) (58, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 46, 12]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 4
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (46, 4)
TEST np.zeros((pad_dim,int(features)) (18, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (12, 4)
TEST np.zeros((pad_dim,int(features)) (52, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 38, 14, 8]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 5
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (38, 4)
TEST np.zeros((pad_dim,int(features)) (26, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (14, 4)
TEST np.zeros((pad_dim,int(features)) (50, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (8, 4)
TEST np.zeros((pad_dim,int(features)) (56, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 36, 12, 4]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 5
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (36, 4)
TEST np.zeros((pad_dim,int(features)) (28, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (12, 4)
TEST np.zeros((pad_dim,int(features)) (52, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (4, 4)
TEST np.zeros((pad_dim,int(features)) (60, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 42, 10]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 4
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (42, 4)
TEST np.zeros((pad_dim,int(features)) (22, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (10, 4)
TEST np.zeros((pad_dim,int(features)) (54, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 42, 8, 2]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 5
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (42, 4)
TEST np.zeros((pad_dim,int(features)) (22, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (8, 4)
TEST np.zeros((pad_dim,int(features)) (56, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (2, 4)
TEST np.zeros((pad_dim,int(features)) (62, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 38, 10]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 4
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (38, 4)
TEST np.zeros((pad_dim,int(features)) (26, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (10, 4)
TEST np.zeros((pad_dim,int(features)) (54, 4)
train.py:221: RuntimeWarning: divide by zero encountered in true_divide
  inv_fpr = interp(base_tpr, tpr, 1. / fpr)[125]
- Eval metrics : accuracy: 0.4844 ; loss: 0.6978
--------------------------------------------------------------------------------
subjets per level= [32, 64, 48, 14, 2]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 5
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (48, 4)
TEST np.zeros((pad_dim,int(features)) (16, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (14, 4)
TEST np.zeros((pad_dim,int(features)) (50, 4)
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
subjets per level= [32, 64, 44, 6, 2]
max_n_level and len(levels[i])= 64 64
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
TEST contents[i].shape= (2, 4)
Number of levels= 5
TEST np.zeros((pad_dim,int(features)) (62, 4)
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
--------------------------------------------------------------------------------
TEST contents[i].shape= (32, 4)
subjets per level= [32, 64, 42, 12]
--------------------------------------------------------------------------------
TEST np.zeros((pad_dim,int(features)) (32, 4)
--------------------------------------------------------------------------------
Number of levels= 4
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (44, 4)
TEST np.zeros((pad_dim,int(features)) (20, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (6, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
TEST np.zeros((pad_dim,int(features)) (58, 4)
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (2, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
TEST np.zeros((pad_dim,int(features)) (62, 4)
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (42, 4)
TEST np.zeros((pad_dim,int(features)) (22, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (12, 4)
TEST np.zeros((pad_dim,int(features)) (52, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 44, 10]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 4
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (44, 4)
TEST np.zeros((pad_dim,int(features)) (20, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 44, 6, 2]
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
--------------------------------------------------------------------------------
max_n_level and len(levels[i])= 64 64
Number of levels= 5
--------------------------------------------------------------------------------
TEST contents[i].shape= (10, 4)
TEST np.zeros((pad_dim,int(features)) (54, 4)
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (44, 4)
TEST np.zeros((pad_dim,int(features)) (20, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (6, 4)
TEST np.zeros((pad_dim,int(features)) (58, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
--------------------------------------------------------------------------------
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (2, 4)
TEST np.zeros((pad_dim,int(features)) (62, 4)
subjets per level= [32, 64, 46, 16, 4, 4]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 6
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (46, 4)
TEST np.zeros((pad_dim,int(features)) (18, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (16, 4)
TEST np.zeros((pad_dim,int(features)) (48, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (4, 4)
TEST np.zeros((pad_dim,int(features)) (60, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (4, 4)
TEST np.zeros((pad_dim,int(features)) (60, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 36, 10, 2, 2]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 6
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (36, 4)
TEST np.zeros((pad_dim,int(features)) (28, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (10, 4)
TEST np.zeros((pad_dim,int(features)) (54, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (2, 4)
TEST np.zeros((pad_dim,int(features)) (62, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (2, 4)
TEST np.zeros((pad_dim,int(features)) (62, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 48, 8]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 4
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (48, 4)
TEST np.zeros((pad_dim,int(features)) (16, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (8, 4)
TEST np.zeros((pad_dim,int(features)) (56, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 60, 18]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 4
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (60, 4)
TEST np.zeros((pad_dim,int(features)) (4, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (18, 4)
TEST np.zeros((pad_dim,int(features)) (46, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 50, 12, 2]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 5
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (50, 4)
TEST np.zeros((pad_dim,int(features)) (14, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (12, 4)
TEST np.zeros((pad_dim,int(features)) (52, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (2, 4)
TEST np.zeros((pad_dim,int(features)) (62, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 44, 8]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 4
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (44, 4)
TEST np.zeros((pad_dim,int(features)) (20, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (8, 4)
TEST np.zeros((pad_dim,int(features)) (56, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 50, 10]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 4
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (50, 4)
TEST np.zeros((pad_dim,int(features)) (14, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (10, 4)
TEST np.zeros((pad_dim,int(features)) (54, 4)
Checkpoint Directory exists!
- Found new best bg rejection = 3.3620689655172415
Epoch 5/30
  0%|                                                                                          | 0/37 [00:00<?, ?it/s]
--------------------------------------------------------------------------------
subjets per level= [32, 64, 40, 4]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 4
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
///////////////////////////////////////////////////////////////////////////////////////////////////--------------------------------------------------------------------------------
subjets per level= [32, 64, 56, 20, 2]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 5
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (56, 4)
TEST np.zeros((pad_dim,int(features)) (8, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
/
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (20, 4)
TEST np.zeros((pad_dim,int(features)) (44, 4)
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (2, 4)
subjets per level= [32, 64, 40, 8]
TEST np.zeros((pad_dim,int(features)) (62, 4)
TEST contents[i].shape= (40, 4)
TEST np.zeros((pad_dim,int(features)) (24, 4)
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (4, 4)
TEST np.zeros((pad_dim,int(features)) (60, 4)
--------------------------------------------------------------------------------
Number of levels= 4
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (40, 4)
TEST np.zeros((pad_dim,int(features)) (24, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (8, 4)
TEST np.zeros((pad_dim,int(features)) (56, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 48, 12]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 4
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (48, 4)
TEST np.zeros((pad_dim,int(features)) (16, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (12, 4)
TEST np.zeros((pad_dim,int(features)) (52, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 26, 6]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 4
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (26, 4)
TEST np.zeros((pad_dim,int(features)) (38, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (6, 4)
TEST np.zeros((pad_dim,int(features)) (58, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 38, 6, 2]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 5
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (38, 4)
TEST np.zeros((pad_dim,int(features)) (26, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (6, 4)
TEST np.zeros((pad_dim,int(features)) (58, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (2, 4)
TEST np.zeros((pad_dim,int(features)) (62, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 42, 14]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 4
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (42, 4)
TEST np.zeros((pad_dim,int(features)) (22, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (14, 4)
TEST np.zeros((pad_dim,int(features)) (50, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 42, 12, 2, 2]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 6
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (42, 4)
TEST np.zeros((pad_dim,int(features)) (22, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (12, 4)
TEST np.zeros((pad_dim,int(features)) (52, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (2, 4)
TEST np.zeros((pad_dim,int(features)) (62, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (2, 4)
TEST np.zeros((pad_dim,int(features)) (62, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 44, 10, 4]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 5
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (44, 4)
TEST np.zeros((pad_dim,int(features)) (20, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (10, 4)
TEST np.zeros((pad_dim,int(features)) (54, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (4, 4)
TEST np.zeros((pad_dim,int(features)) (60, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 42, 14]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 4
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (42, 4)
TEST np.zeros((pad_dim,int(features)) (22, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (14, 4)
TEST np.zeros((pad_dim,int(features)) (50, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 36, 10]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 4
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (36, 4)
TEST np.zeros((pad_dim,int(features)) (28, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (10, 4)
TEST np.zeros((pad_dim,int(features)) (54, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 44, 16, 4]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 5
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (44, 4)
TEST np.zeros((pad_dim,int(features)) (20, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (16, 4)
TEST np.zeros((pad_dim,int(features)) (48, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (4, 4)
TEST np.zeros((pad_dim,int(features)) (60, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 34, 10]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 4
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (34, 4)
TEST np.zeros((pad_dim,int(features)) (30, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (10, 4)
TEST np.zeros((pad_dim,int(features)) (54, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 46, 8, 2]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 5
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (46, 4)
TEST np.zeros((pad_dim,int(features)) (18, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (8, 4)
TEST np.zeros((pad_dim,int(features)) (56, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (2, 4)
TEST np.zeros((pad_dim,int(features)) (62, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 36, 4, 2]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 5
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (36, 4)
TEST np.zeros((pad_dim,int(features)) (28, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (4, 4)
TEST np.zeros((pad_dim,int(features)) (60, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (2, 4)
TEST np.zeros((pad_dim,int(features)) (62, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 50, 6]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 4
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (50, 4)
TEST np.zeros((pad_dim,int(features)) (14, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (6, 4)
TEST np.zeros((pad_dim,int(features)) (58, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 46, 16, 2]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 5
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (46, 4)
TEST np.zeros((pad_dim,int(features)) (18, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (16, 4)
TEST np.zeros((pad_dim,int(features)) (48, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (2, 4)
TEST np.zeros((pad_dim,int(features)) (62, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 40, 4, 2]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 5
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (40, 4)
TEST np.zeros((pad_dim,int(features)) (24, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (4, 4)
TEST np.zeros((pad_dim,int(features)) (60, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (2, 4)
TEST np.zeros((pad_dim,int(features)) (62, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 46, 16, 2]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 5
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (46, 4)
TEST np.zeros((pad_dim,int(features)) (18, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (16, 4)
TEST np.zeros((pad_dim,int(features)) (48, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (2, 4)
TEST np.zeros((pad_dim,int(features)) (62, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 40, 8]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 4
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (40, 4)
TEST np.zeros((pad_dim,int(features)) (24, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (8, 4)
TEST np.zeros((pad_dim,int(features)) (56, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 42, 10, 4]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 5
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (42, 4)
TEST np.zeros((pad_dim,int(features)) (22, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (10, 4)
TEST np.zeros((pad_dim,int(features)) (54, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (4, 4)
TEST np.zeros((pad_dim,int(features)) (60, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 46, 8, 2]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 5
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (46, 4)
TEST np.zeros((pad_dim,int(features)) (18, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (8, 4)
TEST np.zeros((pad_dim,int(features)) (56, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (2, 4)
TEST np.zeros((pad_dim,int(features)) (62, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 42, 14, 2]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 5
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (42, 4)
TEST np.zeros((pad_dim,int(features)) (22, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (14, 4)
TEST np.zeros((pad_dim,int(features)) (50, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (2, 4)
TEST np.zeros((pad_dim,int(features)) (62, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 48, 12, 2]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 5
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (48, 4)
TEST np.zeros((pad_dim,int(features)) (16, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (12, 4)
TEST np.zeros((pad_dim,int(features)) (52, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
--------------------------------------------------------------------------------
subjets per level= [32, 64, 52, 12, 2]
TEST contents[i].shape= (2, 4)
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 5
--------------------------------------------------------------------------------
TEST np.zeros((pad_dim,int(features)) (62, 4)
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 52, 12, 2]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 5
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (52, 4)
TEST np.zeros((pad_dim,int(features)) (12, 4)
max_n_level= 64
////////////////////////////////////////////////////////////////////////////////////////////////////
--------------------------------------------------------------------------------
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (12, 4)
TEST np.zeros((pad_dim,int(features)) (52, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (2, 4)
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
TEST np.zeros((pad_dim,int(features)) (62, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (52, 4)
TEST np.zeros((pad_dim,int(features)) (12, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (12, 4)
TEST np.zeros((pad_dim,int(features)) (52, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (2, 4)
TEST np.zeros((pad_dim,int(features)) (62, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 48, 10]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 4
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
subjets per level= [32, 64, 46, 14, 4, 2]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 6
max_n_level and len(levels[i])= 64 64
--------------------------------------------------------------------------------
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level= 64
max_n_level and len(levels[i])= 64 64
--------------------------------------------------------------------------------
TEST contents[i].shape= (48, 4)
TEST np.zeros((pad_dim,int(features)) (16, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////////////max_n_level and len(levels[i])= 64 64
////////////
TEST contents[i].shape= (32, 4)
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (10, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
TEST np.zeros((pad_dim,int(features)) (54, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (46, 4)
subjets per level= [32, 64, 42, 18, 8]
--------------------------------------------------------------------------------
TEST np.zeros((pad_dim,int(features)) (18, 4)
--------------------------------------------------------------------------------
Number of levels= 5
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
--------------------------------------------------------------------------------
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
subjets per level= [32, 64, 54, 24, 2]
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
--------------------------------------------------------------------------------
Number of levels= 5
max_n_level and len(levels[i])= 64 64
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (54, 4)
TEST np.zeros((pad_dim,int(features)) (10, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (24, 4)
TEST contents[i].shape= (42, 4)
TEST np.zeros((pad_dim,int(features)) (22, 4)
TEST np.zeros((pad_dim,int(features)) (40, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (18, 4)
TEST contents[i].shape= (2, 4)
TEST np.zeros((pad_dim,int(features)) (46, 4)
TEST np.zeros((pad_dim,int(features)) (62, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (8, 4)
TEST np.zeros((pad_dim,int(features)) (56, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (14, 4)
TEST np.zeros((pad_dim,int(features)) (50, 4)
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
subjets per level= [32, 64, 38, 14, 8]
subjets per level= [32, 64, 38, 6]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
max_n_level and len(levels[i])= 64 64
--------------------------------------------------------------------------------
Number of levels= 5
--------------------------------------------------------------------------------
Number of levels= 4
TEST contents[i].shape= (4, 4)
--------------------------------------------------------------------------------
TEST np.zeros((pad_dim,int(features)) (60, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level= 64
--------------------------------------------------------------------------------
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (2, 4)
TEST np.zeros((pad_dim,int(features)) (62, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (38, 4)
TEST np.zeros((pad_dim,int(features)) (26, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level= 64
--------------------------------------------------------------------------------
max_n_level and len(levels[i])= 64 64
////////////////////////////////////////////////////////////////////////////////////////////////////
TEST contents[i].shape= (14, 4)
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (50, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST contents[i].shape= (8, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
TEST np.zeros((pad_dim,int(features)) (56, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (38, 4)
TEST np.zeros((pad_dim,int(features)) (26, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 46, 12]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 4
////////////////////////////////////////////////////////////////////////////////////////////////////
--------------------------------------------------------------------------------
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (6, 4)
TEST np.zeros((pad_dim,int(features)) (58, 4)
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
--------------------------------------------------------------------------------
max_n_level and len(levels[i])= 64 64
subjets per level= [32, 64, 36, 12, 4]
TEST contents[i].shape= (64, 4)
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 5
TEST np.zeros((pad_dim,int(features)) (0, 4)
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
max_n_level= 64
--------------------------------------------------------------------------------
TEST contents[i].shape= (46, 4)
TEST np.zeros((pad_dim,int(features)) (18, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
--------------------------------------------------------------------------------
TEST np.zeros((pad_dim,int(features)) (32, 4)
subjets per level= [32, 64, 42, 10]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 4
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (36, 4)
max_n_level= 64
--------------------------------------------------------------------------------
TEST np.zeros((pad_dim,int(features)) (28, 4)
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (12, 4)
subjets per level= [32, 64, 38, 10]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
TEST np.zeros((pad_dim,int(features)) (52, 4)
Number of levels= 4
////////////////////////////////////////////////////////////////////////////////////////////////////
--------------------------------------------------------------------------------
max_n_level and len(levels[i])= 64 64
////////////////////////////////////////////////////////////////////////////////////////////////////
TEST contents[i].shape= (12, 4)
TEST np.zeros((pad_dim,int(features)) (52, 4)
max_n_level and len(levels[i])= 64 64
////////////////////////////////////////////////////////////////////////////////////////////////////
TEST contents[i].shape= (32, 4)
max_n_level= 64
--------------------------------------------------------------------------------
TEST np.zeros((pad_dim,int(features)) (32, 4)
max_n_level and len(levels[i])= 64 64
////////////////////////////////////////////////////////////////////////////////////////////////////
TEST contents[i].shape= (4, 4)
max_n_level and len(levels[i])= 64 64
TEST np.zeros((pad_dim,int(features)) (60, 4)
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
TEST np.zeros((pad_dim,int(features)) (0, 4)
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (42, 4)
TEST np.zeros((pad_dim,int(features)) (22, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (38, 4)
TEST np.zeros((pad_dim,int(features)) (26, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
////////////////////////////////////////////////////////////////////////////////////////////////////
TEST contents[i].shape= (10, 4)
max_n_level and len(levels[i])= 64 64
TEST np.zeros((pad_dim,int(features)) (54, 4)
TEST contents[i].shape= (10, 4)
TEST np.zeros((pad_dim,int(features)) (54, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 42, 8, 2]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 5
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (42, 4)
TEST np.zeros((pad_dim,int(features)) (22, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (8, 4)
TEST np.zeros((pad_dim,int(features)) (56, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (2, 4)
100%|█████████████████████████████████████████████████████████████████████| 37/37 [00:12<00:00,  3.00it/s, loss=0.693]
- Train metrics: accuracy: 0.5411 ; loss: 0.6919
--------------------------------------------------------------------------------
subjets per level= [32, 64, 48, 14, 2]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 5
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
--------------------------------------------------------------------------------
max_n_level and len(levels[i])= 64 64
subjets per level= [32, 64, 44, 6, 2]
TEST contents[i].shape= (48, 4)
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 5
TEST np.zeros((pad_dim,int(features)) (16, 4)
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (14, 4)
TEST np.zeros((pad_dim,int(features)) (50, 4)
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (2, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
TEST np.zeros((pad_dim,int(features)) (62, 4)
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
--------------------------------------------------------------------------------
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
subjets per level= [32, 64, 42, 12]
--------------------------------------------------------------------------------
TEST np.zeros((pad_dim,int(features)) (0, 4)
--------------------------------------------------------------------------------
Number of levels= 4
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (44, 4)
max_n_level= 64
--------------------------------------------------------------------------------
TEST np.zeros((pad_dim,int(features)) (20, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (6, 4)
max_n_level and len(levels[i])= 64 64
TEST np.zeros((pad_dim,int(features)) (58, 4)
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (2, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
TEST np.zeros((pad_dim,int(features)) (62, 4)
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (42, 4)
TEST np.zeros((pad_dim,int(features)) (22, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (12, 4)
TEST np.zeros((pad_dim,int(features)) (52, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 44, 6, 2]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 5
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (44, 4)
TEST np.zeros((pad_dim,int(features)) (20, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (6, 4)
TEST np.zeros((pad_dim,int(features)) (58, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
--------------------------------------------------------------------------------
subjets per level= [32, 64, 44, 10]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
TEST contents[i].shape= (2, 4)
Number of levels= 4
--------------------------------------------------------------------------------
TEST np.zeros((pad_dim,imax_n_level= 64
nt(features)) (62, 4)
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
--------------------------------------------------------------------------------
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
subjets per level= [32, 64, 46, 16, 4, 4]
--------------------------------------------------------------------------------
TEST np.zeros((pad_dim,int(features)) (32, 4)
--------------------------------------------------------------------------------
Number of levels= 6
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level= 64
--------------------------------------------------------------------------------
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (44, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
TEST np.zeros((pad_dim,int(features)) (20, 4)
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (10, 4)
TEST np.zeros((pad_dim,int(features)) (54, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (46, 4)
TEST np.zeros((pad_dim,int(features)) (18, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (16, 4)
TEST np.zeros((pad_dim,int(features)) (48, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (4, 4)
TEST np.zeros((pad_dim,int(features)) (60, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (4, 4)
TEST np.zeros((pad_dim,int(features)) (60, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 36, 10, 2, 2]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 6
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (36, 4)
TEST np.zeros((pad_dim,int(features)) (28, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (10, 4)
TEST np.zeros((pad_dim,int(features)) (54, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (2, 4)
TEST np.zeros((pad_dim,int(features)) (62, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (2, 4)
TEST np.zeros((pad_dim,int(features)) (62, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 50, 12, 2]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 5
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (50, 4)
TEST np.zeros((pad_dim,int(features)) (14, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (12, 4)
TEST np.zeros((pad_dim,int(features)) (52, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (2, 4)
TEST np.zeros((pad_dim,int(features)) (62, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 44, 8]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 4
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (44, 4)
TEST np.zeros((pad_dim,int(features)) (20, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (8, 4)
TEST np.zeros((pad_dim,int(features)) (56, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 48, 8]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 4
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (48, 4)
TEST np.zeros((pad_dim,int(features)) (16, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (8, 4)
TEST np.zeros((pad_dim,int(features)) (56, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 60, 18]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 4
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (60, 4)
TEST np.zeros((pad_dim,int(features)) (4, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (18, 4)
TEST np.zeros((pad_dim,int(features)) (46, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 50, 10]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 4
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (50, 4)
TEST np.zeros((pad_dim,int(features)) (14, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (10, 4)
TEST np.zeros((pad_dim,int(features)) (54, 4)
Checkpoint Directory exists!
train.py:221: RuntimeWarning: divide by zero encountered in true_divide
  inv_fpr = interp(base_tpr, tpr, 1. / fpr)[125]
- Eval metrics : accuracy: 0.5156 ; loss: 0.6970
Epoch 6/30
  0%|                                                                                          | 0/37 [00:00<?, ?it/s]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
subjets per level= [32, 64, 56, 20, 2]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 5
subjets per level= [32, 64, 40, 4]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 4
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level= 64
max_n_level and len(levels[i])= 64 64
--------------------------------------------------------------------------------
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
TEST np.zeros((pad_dim,int(features)) (32, 4)
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
////////////////////////////////////////////////////////////////////////////////////////////////////
TEST contents[i].shape= (64, 4)
max_n_level and len(levels[i])= 64 64
TEST np.zeros((pad_dim,int(features)) (0, 4)
TEST contents[i].shape= (56, 4)
TEST np.zeros((pad_dim,int(features)) (8, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (40, 4)
TEST np.zeros((pad_dim,int(features)) (24, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (20, 4)
TEST np.zeros((pad_dim,int(features)) (44, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (4, 4)
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (2, 4)
TEST np.zeros((pad_dim,int(features)) (60, 4)
TEST np.zeros((pad_dim,int(features)) (62, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 40, 8]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 4
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (40, 4)
TEST np.zeros((pad_dim,int(features)) (24, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (8, 4)
TEST np.zeros((pad_dim,int(features)) (56, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 38, 6, 2]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 5
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
subjets per level= [32, 64, 26, 6]
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (38, 4)
TEST np.zeros((pad_dim,int(features)) (26, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (6, 4)
TEST np.zeros((pad_dim,int(features)) (58, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (2, 4)
TEST np.zeros((pad_dim,int(features)) (62, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 48, 12]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 4
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (48, 4)
TEST np.zeros((pad_dim,int(features)) (16, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (12, 4)
TEST np.zeros((pad_dim,int(features)) (52, 4)
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 4
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (26, 4)
TEST np.zeros((pad_dim,int(features)) (38, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (6, 4)
TEST np.zeros((pad_dim,int(features)) (58, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 42, 14]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 4
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (42, 4)
TEST np.zeros((pad_dim,int(features)) (22, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (14, 4)
TEST np.zeros((pad_dim,int(features)) (50, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 42, 14]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 4
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (42, 4)
TEST np.zeros((pad_dim,int(features)) (22, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (14, 4)
TEST np.zeros((pad_dim,int(features)) (50, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 36, 10]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 4
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (36, 4)
TEST np.zeros((pad_dim,int(features)) (28, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (10, 4)
TEST np.zeros((pad_dim,int(features)) (54, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 42, 12, 2, 2]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 6
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (42, 4)
TEST np.zeros((pad_dim,int(features)) (22, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (12, 4)
TEST np.zeros((pad_dim,int(features)) (52, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (2, 4)
TEST np.zeros((pad_dim,int(features)) (62, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (2, 4)
TEST np.zeros((pad_dim,int(features)) (62, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 44, 10, 4]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 5
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (44, 4)
TEST np.zeros((pad_dim,int(features)) (20, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (10, 4)
TEST np.zeros((pad_dim,int(features)) (54, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (4, 4)
TEST np.zeros((pad_dim,int(features)) (60, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 44, 16, 4]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 5
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (44, 4)
TEST np.zeros((pad_dim,int(features)) (20, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (16, 4)
TEST np.zeros((pad_dim,int(features)) (48, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (4, 4)
TEST np.zeros((pad_dim,int(features)) (60, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 34, 10]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 4
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (34, 4)
TEST np.zeros((pad_dim,int(features)) (30, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (10, 4)
TEST np.zeros((pad_dim,int(features)) (54, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 46, 8, 2]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 5
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (46, 4)
TEST np.zeros((pad_dim,int(features)) (18, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (8, 4)
TEST np.zeros((pad_dim,int(features)) (56, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (2, 4)
TEST np.zeros((pad_dim,int(features)) (62, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 36, 4, 2]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 5
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (36, 4)
TEST np.zeros((pad_dim,int(features)) (28, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (4, 4)
TEST np.zeros((pad_dim,int(features)) (60, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (2, 4)
TEST np.zeros((pad_dim,int(features)) (62, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 50, 6]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 4
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (50, 4)
TEST np.zeros((pad_dim,int(features)) (14, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (6, 4)
TEST np.zeros((pad_dim,int(features)) (58, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 46, 16, 2]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 5
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (46, 4)
TEST np.zeros((pad_dim,int(features)) (18, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (16, 4)
TEST np.zeros((pad_dim,int(features)) (48, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (2, 4)
TEST np.zeros((pad_dim,int(features)) (62, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 40, 4, 2]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 5
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (40, 4)
TEST np.zeros((pad_dim,int(features)) (24, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (4, 4)
TEST np.zeros((pad_dim,int(features)) (60, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (2, 4)
TEST np.zeros((pad_dim,int(features)) (62, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 46, 16, 2]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 5
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (46, 4)
TEST np.zeros((pad_dim,int(features)) (18, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (16, 4)
TEST np.zeros((pad_dim,int(features)) (48, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (2, 4)
TEST np.zeros((pad_dim,int(features)) (62, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 40, 8]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 4
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (40, 4)
TEST np.zeros((pad_dim,int(features)) (24, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (8, 4)
TEST np.zeros((pad_dim,int(features)) (56, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 42, 10, 4]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 5
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (42, 4)
TEST np.zeros((pad_dim,int(features)) (22, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (10, 4)
TEST np.zeros((pad_dim,int(features)) (54, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (4, 4)
TEST np.zeros((pad_dim,int(features)) (60, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 46, 8, 2]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 5
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (46, 4)
TEST np.zeros((pad_dim,int(features)) (18, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (8, 4)
TEST np.zeros((pad_dim,int(features)) (56, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (2, 4)
TEST np.zeros((pad_dim,int(features)) (62, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 42, 14, 2]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 5
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (42, 4)
TEST np.zeros((pad_dim,int(features)) (22, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (14, 4)
TEST np.zeros((pad_dim,int(features)) (50, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (2, 4)
TEST np.zeros((pad_dim,int(features)) (62, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 48, 12, 2]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 5
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (48, 4)
TEST np.zeros((pad_dim,int(features)) (16, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (12, 4)
TEST np.zeros((pad_dim,int(features)) (52, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (2, 4)
TEST np.zeros((pad_dim,int(features)) (62, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 52, 12, 2]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 5
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (52, 4)
TEST np.zeros((pad_dim,int(features)) (12, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (12, 4)
TEST np.zeros((pad_dim,int(features)) (52, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (2, 4)
TEST np.zeros((pad_dim,int(features)) (62, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 52, 12, 2]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 5
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (52, 4)
TEST np.zeros((pad_dim,int(features)) (12, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (12, 4)
TEST np.zeros((pad_dim,int(features)) (52, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (2, 4)
TEST np.zeros((pad_dim,int(features)) (62, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 48, 10]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 4
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (48, 4)
TEST np.zeros((pad_dim,int(features)) (16, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (10, 4)
TEST np.zeros((pad_dim,int(features)) (54, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 46, 14, 4, 2]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 6
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (46, 4)
TEST np.zeros((pad_dim,int(features)) (18, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (14, 4)
TEST np.zeros((pad_dim,int(features)) (50, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (4, 4)
TEST np.zeros((pad_dim,int(features)) (60, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (2, 4)
TEST np.zeros((pad_--------------------------------------------------------------------------------
dim,int(features)) (62, 4)
subjets per level= [32, 64, 42, 18, 8]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 5
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
--------------------------------------------------------------------------------
subjets per level= [32, 64, 54, 24, 2]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 5
--------------------------------------------------------------------------------
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (42, 4)
TEST np.zeros((pad_dim,int(features)) (22, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level= 64
max_n_level and len(levels[i])= 64 64
--------------------------------------------------------------------------------
TEST contents[i].shape= (18, 4)
TEST np.zeros((pad_dim,int(features)) (46, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
--------------------------------------------------------------------------------
subjets per level= [32, 64, 38, 6]
--------------------------------------------------------------------------------
TEST np.zeros((pad_dim,int(features)) (32, 4)
--------------------------------------------------------------------------------
max_n_level and len(levels[i])= 64 64
Number of levels= 4
--------------------------------------------------------------------------------
TEST contents[i].shape= (8, 4)
TEST np.zeros((pad_dim,int(features)) (56, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (54, 4)
TEST np.zeros((pad_dim,int(features)) (10, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (24, 4)
TEST np.zeros((pad_dim,int(features)) (40, 4)
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST np.zeros((pad_dim,int(features)) (32, 4)
TEST contents[i].shape= (2, 4)
TEST np.zeros((pad_dim,int(features)) (62, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np--------------------------------------------------------------------------------
.zeros((pad_dim,int(features)) (0, 4)
subjets per level= [32, 64, 46, 12]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 4
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (38, 4)
TEST np.zeros((pad_dim,int(features)) (26, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level= 64
--------------------------------------------------------------------------------
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (6, 4)
TEST np.zeros((pad_dim,int(features)) (58, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
--------------------------------------------------------------------------------
subjets per level= [32, 64, 42, 10]
max_n_level and len(levels[i])= 64 64
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
TEST contents[i].shape= (32, 4)
Number of levels= 4
--------------------------------------------------------------------------------
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level= 64
max_n_level and len(levels[i])= 64 64
--------------------------------------------------------------------------------
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
////////////////TEST contents[i].shape= (32, 4)
////////////////////////////////////////////////////////////////////////////////////
--------------------------------------------------------------------------------
TEST np.zeros((pad_dim,int(features)) (32, 4)
subjets per level= [32, 64, 38, 14, 8]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 5
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level= 64
max_n_level and len(levels[i])= 64 64
--------------------------------------------------------------------------------
TEST contents[i].shape= (42, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
TEST np.zeros((pad_dim,int(features)) (22, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (10, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
TEST np.zeros((pad_dim,int(features)) (54, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (38, 4)
TEST np.zeros((pad_dim,int(features)) (26, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (14, 4)
TEST np.zeros((pad_dim,int(features)) (50, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (8, 4)
TEST np.zeros((pad_dim,int(features)) (56, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 36, 12, 4]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 5
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (36, 4)
TEST np.zeros((pad_dim,int(features)) (28, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (12, 4)
TEST np.zeros((pad_dim,int(features)) (52, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (4, 4)
TEST np.zeros((pad_dim,int(features)) (60, 4)
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (46, 4)
TEST np.zeros((pad_dim,int(features)) (18, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 38, 10]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 4
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (12, 4)
TEST np.zeros((pad_dim,int(features)) (52, 4)
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
--------------------------------------------------------------------------------
TEST np.zeros((pad_dim,int(features)) (0, 4)
subjets per level= [32, 64, 42, 8, 2]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 5
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (38, 4)
TEST np.zeros((pad_dim,int(features)) (26, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
max_n_level= 64
TEST contents[i].shape= (10, 4)
--------------------------------------------------------------------------------
TEST np.zeros((pad_dim,int(features)) (54, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (42, 4)
TEST np.zeros((pad_dim,int(features)) (22, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (8, 4)
TEST np.zeros((pad_dim,int(features)) (56, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (2, 4)
100%|█████████████████████████████████████████████████████████████████████| 37/37 [00:10<00:00,  3.70it/s, loss=0.692]
- Train metrics: accuracy: 0.5477 ; loss: 0.6901
--------------------------------------------------------------------------------
subjets per level= [32, 64, 48, 14, 2]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 5
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (48, 4)
TEST np.zeros((pad_dim,int(features)) (16, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (14, 4)
TEST np.zeros((pad_dim,int(features)) (50, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (2, 4)
TEST np.zeros((pad_dim,int(features)) (62, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 44, 6, 2]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 5
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (44, 4)
TEST np.zeros((pad_dim,int(features)) (20, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
--------------------------------------------------------------------------------
TEST contents[i].shape= (6, 4)
subjets per level= [32, 64, 42, 12]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
TEST np.zeros((pad_dim,int(features)) (58, 4)
Number of levels= 4
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (2, 4)
TEST np.zeros((pad_dim,int(features)) (62, 4)
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (42, 4)
TEST np.zeros((pad_dim,int(features)) (22, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (12, 4)
TEST np.zeros((pad_dim,int(features)) (52, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 44, 6, 2]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 5
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (44, 4)
TEST np.zeros((pad_dim,int(features)) (20, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (6, 4)
TEST np.zeros((pad_dim,int(features)) (58, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (2, 4)
TEST np.zeros((pad_dim,int(features)) (62, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 44, 10]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 4
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (44, 4)
TEST np.zeros((pad_dim,int(features)) (20, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (10, 4)
TEST np.zeros((pad_dim,int(features)) (54, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 46, 16, 4, 4]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 6
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (46, 4)
TEST np.zeros((pad_dim,int(features)) (18, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (16, 4)
TEST np.zeros((pad_dim,int(features)) (48, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (4, 4)
TEST np.zeros((pad_dim,int(features)) (60, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (4, 4)
TEST np.zeros((pad_dim,int(features)) (60, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 36, 10, 2, 2]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 6
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (36, 4)
TEST np.zeros((pad_dim,int(features)) (28, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (10, 4)
TEST np.zeros((pad_dim,int(features)) (54, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (2, 4)
TEST np.zeros((pad_dim,int(features)) (62, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (2, 4)
TEST np.zeros((pad_dim,int(features)) (62, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 50, 12, 2]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 5
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (50, 4)
TEST np.zeros((pad_dim,int(features)) (14, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (12, 4)
TEST np.zeros((pad_dim,int(features)) (52, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (2, 4)
TEST np.zeros((pad_dim,int(features)) (62, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 44, 8]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 4
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (44, 4)
TEST np.zeros((pad_dim,int(features)) (20, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (8, 4)
TEST np.zeros((pad_dim,int(features)) (56, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 48, 8]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 4
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (48, 4)
TEST np.zeros((pad_dim,int(features)) (16, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (8, 4)
TEST np.zeros((pad_dim,int(features)) (56, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 60, 18]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 4
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (60, 4)
TEST np.zeros((pad_dim,int(features)) (4, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (18, 4)
TEST np.zeros((pad_dim,int(features)) (46, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 50, 10]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 4
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (50, 4)
TEST np.zeros((pad_dim,int(features)) (14, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (10, 4)
TEST np.zeros((pad_dim,int(features)) (54, 4)
train.py:221: RuntimeWarning: divide by zero encountered in true_divide
  inv_fpr = interp(base_tpr, tpr, 1. / fpr)[125]
- Eval metrics : accuracy: 0.5000 ; loss: 0.6966
Epoch 7/30
  0%|                                                                                          | 0/37 [00:00<?, ?it/s]
