
100%|█████████████████████████████████████████████████████████████████████| 37/37 [00:22<00:00,  1.64it/s, loss=0.748]
- Train metrics: accuracy: 0.5000 ; loss: 0.7462
--------------------------------------------------------------------------------
subjets per level= [32, 64, 44, 14]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 4
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (44, 4)
TEST np.zeros((pad_dim,int(features)) (20, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 42, 6]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 4
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
subjets per level= [32, 64, 40, 4]
--------------------------------------------------------------------------------
max_n_level= 64
max_n_level and len(levels[i])= 64 64
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 4
TEST contents[i].shape= (14, 4)
----------------------////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
----------------------------------------------------------
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
TEST np.zeros((pad_dim,int(features)) (50, 4)
max_n_level= 64
--------------------------------------------------------------------------------
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (42, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
TEST np.zeros((pad_dim,int(features)) (22, 4)
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (6, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
TEST np.zeros((pad_dim,int(features)) (58, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (40, 4)
TEST np.zeros((pad_dim,int(features)) (24, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (4, 4)
TEST np.zeros((pad_dim,int(features)) (60, 4)
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
subjets per level= [32, 64, 48, 16, 2]
subjets per level= [32, 64, 42, 10]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 5
Number of levels= 4
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
subjets per level= [32, 64, 38, 8]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
max_n_level= 64
max_n_level= 64
Number of levels= 4
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
--------------------------------------------------------------------------------
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
TEST np.zeros((pad_dim,int(features)) (32, 4)
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
max_n_level and len(levels[i])= 64 64
--------------------------------------------------------------------------------
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////////////////////////
TEST contents[i].shape= (38, 4)
max_n_level and len(levels[i])= 64 64
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST contents[i].shape= (42, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
TEST np.zeros((pad_dim,int(features)) (22, 4)
TEST np.zeros((pad_dim,int(features)) (26, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (10, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
TEST np.zeros((pad_dim,int(features)) (54, 4)
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (8, 4)
TEST np.zeros((pad_dim,int(features)) (56, 4)
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (48, 4)
TEST np.zeros((pad_dim,int(features)) (16, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (16, 4)
TEST np.zeros((pad_dim,int(features)) (48, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (2, 4)
TEST np.zeros((pad_dim,int(features)) (62, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 34, 6]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 4
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (34, 4)
TEST np.zeros((pad_dim,int(features)) (30, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (6, 4)
TEST np.zeros((pad_dim,int(features)) (58, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 40, 10]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 4
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (40, 4)
TEST np.zeros((pad_dim,int(features)) (24, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (10, 4)
TEST np.zeros((pad_dim,int(features)) (54, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 44, 10, 2]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 5
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (44, 4)
TEST np.zeros((pad_dim,int(features)) (20, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (10, 4)
TEST np.zeros((pad_dim,int(features)) (54, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (2, 4)
TEST np.zeros((pad_dim,int(features)) (62, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 40, 12]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 4
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (40, 4)
TEST np.zeros((pad_dim,int(features)) (24, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (12, 4)
TEST np.zeros((pad_dim,int(features)) (52, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 38, 12]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 4
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (38, 4)
TEST np.zeros((pad_dim,int(features)) (26, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (12, 4)
TEST np.zeros((pad_dim,int(features)) (52, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 40, 6]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 4
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (40, 4)
TEST np.zeros((pad_dim,int(features)) (24, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (6, 4)
TEST np.zeros((pad_dim,int(features)) (58, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 40, 6]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 4
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (40, 4)
TEST np.zeros((pad_dim,int(features)) (24, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (6, 4)
TEST np.zeros((pad_dim,int(features)) (58, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 44, 8]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 4
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (44, 4)
TEST np.zeros((pad_dim,int(features)) (20, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (8, 4)
TEST np.zeros((pad_dim,int(features)) (56, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 40, 10]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 4
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (40, 4)
TEST np.zeros((pad_dim,int(features)) (24, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (10, 4)
TEST np.zeros((pad_dim,int(features)) (54, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 34, 6, 2]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 5
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (34, 4)
TEST np.zeros((pad_dim,int(features)) (30, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (6, 4)
TEST np.zeros((pad_dim,int(features)) (58, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (2, 4)
TEST np.zeros((pad_dim,int(features)) (62, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 42, 4]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 4
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (42, 4)
TEST np.zeros((pad_dim,int(features)) (22, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (4, 4)
TEST np.zeros((pad_dim,int(features)) (60, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 40, 10]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 4
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (40, 4)
TEST np.zeros((pad_dim,int(features)) (24, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (10, 4)
TEST np.zeros((pad_dim,int(features)) (54, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 48, 18, 2]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 5
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (48, 4)
TEST np.zeros((pad_dim,int(features)) (16, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (18, 4)
TEST np.zeros((pad_dim,int(features)) (46, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (2, 4)
TEST np.zeros((pad_dim,int(features)) (62, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 34, 10]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 4
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (34, 4)
TEST np.zeros((pad_dim,int(features)) (30, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (10, 4)
TEST np.zeros((pad_dim,int(features)) (54, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 42, 14, 4]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 5
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (42, 4)
TEST np.zeros((pad_dim,int(features)) (22, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (14, 4)
TEST np.zeros((pad_dim,int(features)) (50, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (4, 4)
TEST np.zeros((pad_dim,int(features)) (60, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 46, 14, 6, 2]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 6
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (46, 4)
TEST np.zeros((pad_dim,int(features)) (18, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (14, 4)
TEST np.zeros((pad_dim,int(features)) (50, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (6, 4)
TEST np.zeros((pad_dim,int(features)) (58, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (2, 4)
TEST np.zeros((pad_dim,int(features)) (62, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 42, 16, 4]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 5
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (42, 4)
TEST np.zeros((pad_dim,int(features)) (22, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (16, 4)
TEST np.zeros((pad_dim,int(features)) (48, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (4, 4)
TEST np.zeros((pad_dim,int(features)) (60, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 50, 14, 2]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 5
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (50, 4)
TEST np.zeros((pad_dim,int(features)) (14, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (14, 4)
TEST np.zeros((pad_dim,int(features)) (50, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (2, 4)
TEST np.zeros((pad_dim,int(features)) (62, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 44, 12, 2]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 5
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (44, 4)
TEST np.zeros((pad_dim,int(features)) (20, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (12, 4)
TEST np.zeros((pad_dim,int(features)) (52, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (2, 4)
TEST np.zeros((pad_dim,int(features)) (62, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 46, 12, 2]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 5
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (46, 4)
TEST np.zeros((pad_dim,int(features)) (18, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (12, 4)
TEST np.zeros((pad_dim,int(features)) (52, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (2, 4)
TEST np.zeros((pad_dim,int(features)) (62, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 48, 10, 4]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 5
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (48, 4)
TEST np.zeros((pad_dim,int(features)) (16, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (10, 4)
TEST np.zeros((pad_dim,int(features)) (54, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (4, 4)
TEST np.zeros((pad_dim,int(features)) (60, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 50, 16, 8]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 5
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (50, 4)
TEST np.zeros((pad_dim,int(features)) (14, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (16, 4)
TEST np.zeros((pad_dim,int(features)) (48, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (8, 4)
TEST np.zeros((pad_dim,int(features)) (56, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 38, 8, 6]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 5
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (38, 4)
TEST np.zeros((pad_dim,int(features)) (26, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (8, 4)
TEST np.zeros((pad_dim,int(features)) (56, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (6, 4)
TEST np.zeros((pad_dim,int(features)) (58, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 46, 8, 4]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 5
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (46, 4)
TEST np.zeros((pad_dim,int(features)) (18, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (8, 4)
TEST np.zeros((pad_dim,int(features)) (56, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (4, 4)
TEST np.zeros((pad_dim,int(features)) (60, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 56, 12]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 4
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (56, 4)
TEST np.zeros((pad_dim,int(features)) (8, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (12, 4)
TEST np.zeros((pad_dim,int(features)) (52, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 46, 22, 8]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 5
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (46, 4)
TEST np.zeros((pad_dim,int(features)) (18, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (22, 4)
TEST np.zeros((pad_dim,int(features)) (42, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (8, 4)
TEST np.zeros((pad_dim,int(features)) (56, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 44, 14, 2]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 5
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (44, 4)
TEST np.zeros((pad_dim,int(features)) (20, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (14, 4)
TEST np.zeros((pad_dim,int(features)) (50, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (2, 4)
TEST np.zeros((pad_dim,int(features)) (62, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 42, 16, 2]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 5
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (42, 4)
TEST np.zeros((pad_dim,int(features)) (22, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (16, 4)
TEST np.zeros((pad_dim,int(features)) (48, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (2, 4)
TEST np.zeros((pad_dim,int(features)) (62, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 40, 10, 2, 2]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 6
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (40, 4)
TEST np.zeros((pad_dim,int(features)) (24, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (10, 4)
TEST np.zeros((pad_dim,int(features)) (54, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (2, 4)
TEST np.zeros((pad_dim,int(features)) (62, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (2, 4)
TEST np.zeros((pad_dim,int(features)) (62, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 50, 8]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 4
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (50, 4)
TEST np.zeros((pad_dim,int(features)) (14, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (8, 4)
TEST np.zeros((pad_dim,int(features)) (56, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 46, 18, 2]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 5
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (46, 4)
TEST np.zeros((pad_dim,int(features)) (18, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (18, 4)
TEST np.zeros((pad_dim,int(features)) (46, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (2, 4)
TEST np.zeros((pad_dim,int(features)) (62, 4)
train.py:220: RuntimeWarning: divide by zero encountered in true_divide
  inv_fpr = interp(base_tpr, tpr, 1. / fpr)[125]
Traceback (most recent call last):
  File "train.py", line 517, in <module>
    train_and_evaluate(model, train_data, val_data, optimizer, loss_fn, metrics, params, args.model_dir, step_size,
  File "train.py", line 295, in train_and_evaluate
    val_metrics, inv_fpr = evaluate(model, loss_fn, val_loader, metrics, params, num_steps_val)
  File "train.py", line 222, in evaluate
    wandb.log({'roc': wandb.plots.ROC(labels_all, output_all, pos_label=1)})
TypeError: roc() got an unexpected keyword argument 'pos_label'
--------------------------------------------------------------------------------
subjets per level= [32, 64, 48, 14, 2]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 5
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
subjets per level= [32, 64, 42, 12]
max_n_level and len(levels[i])= 64 64
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
TEST contents[i].shape= (64, 4)
Number of levels= 4
--------------------------------------------------------------------------------
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (48, 4)
TEST np.zeros((pad_dim,int(features)) (16, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level= 64
--------------------------------------------------------------------------------
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (14, 4)
TEST np.zeros((pad_dim,int(features)) (50, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
max_n_level and len(levels[i])= 64 64
////////////////////////////////////////////////////////////////////////////////////////////////////
TEST contents[i].shape= (2, 4)
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (42, 4)
TEST np.zeros((pad_dim,int(features)) (62, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 44, 6, 2]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 5
--------------------------------------------------------------------------------
TEST np.zeros((pad_dim,int(features)) (22, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (12, 4)
max_n_level= 64
TEST np.zeros((pad_dim,int(features)) (52, 4)
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (44, 4)
TEST np.zeros((pad_dim,int(features)) (20, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (6, 4)
TEST np.zeros((pad_dim,int(features)) (58, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (2, 4)
TEST np.zeros((pad_dim,int(features)) (62, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 46, 16, 4, 4]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 6
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
--------------------------------------------------------------------------------
TEST contents[i].shape= (32, 4)
subjets per level= [32, 64, 44, 10]
TEST np.zeros((pad_dim,int(features)) (32, 4)
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 4
--------////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (46, 4)
max_n_level= 64
TEST np.zeros((pad_dim,int(features)) (18, 4)
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (16, 4)
max_n_level and len(levels[i])= 64 64
TEST np.zeros((pad_dim,int(features)) (48, 4)
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
--------------------------------------------------------------------------------
TEST contents[i].shape= (4, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
TEST np.zeros((pad_dim,int(features)) (60, 4)
subjets per level= [32, 64, 44, 6, 2]
--------------------------------------------------------------------------------
max_n_level and len(levels[i])= 64 64
--------------------------------------------------------------------------------
TEST contents[i].shape= (64, 4)
Number of levels= 5
--------------------------------------------------------------------------------
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (4, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST np.zeros((pad_dim,int(features)) (60, 4)
TEST contents[i].shape= (44, 4)
TEST np.zeros((pad_dim,int(features)) (20, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level= 64
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (10, 4)
--------------------------------------------------------------------------------
TEST np.zeros((pad_dim,int(features)) (54, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (44, 4)
TEST np.zeros((pad_dim,int(features)) (20, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (6, 4)
TEST np.zeros((pad_dim,int(features)) (58, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (2, 4)
TEST np.zeros((pad_dim,int(features)) (62, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 36, 10, 2, 2]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 6
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (36, 4)
TEST np.zeros((pad_dim,int(features)) (28, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (10, 4)
TEST np.zeros((pad_dim,int(features)) (54, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (2, 4)
TEST np.zeros((pad_dim,int(features)) (62, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (2, 4)
TEST np.zeros((pad_dim,int(features)) (62, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 48, 8]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 4
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (48, 4)
TEST np.zeros((pad_dim,int(features)) (16, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (8, 4)
TEST np.zeros((pad_dim,int(features)) (56, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 50, 12, 2]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 5
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (50, 4)
TEST np.zeros((pad_dim,int(features)) (14, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (12, 4)
TEST np.zeros((pad_dim,int(features)) (52, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (2, 4)
TEST np.zeros((pad_dim,int(features)) (62, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 44, 8]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 4
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (44, 4)
TEST np.zeros((pad_dim,int(features)) (20, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (8, 4)
TEST np.zeros((pad_dim,int(features)) (56, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 60, 18]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 4
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (60, 4)
TEST np.zeros((pad_dim,int(features)) (4, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (18, 4)
TEST np.zeros((pad_dim,int(features)) (46, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 50, 10]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 4
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (50, 4)
TEST np.zeros((pad_dim,int(features)) (14, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (10, 4)
TEST np.zeros((pad_dim,int(features)) (54, 4)