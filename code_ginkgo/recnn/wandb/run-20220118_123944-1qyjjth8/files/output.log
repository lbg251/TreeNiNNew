
100%|█████████████████████████████████████████████████████████████████████| 37/37 [00:24<00:00,  1.50it/s, loss=0.710]
- Train metrics: accuracy: 0.4868 ; loss: 0.7105
--------------------------------------------------------------------------------
subjets per level= [32, 64, 44, 10]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 4
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (44, 4)
TEST np.zeros((pad_dim,int(features)) (20, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (10, 4)
TEST np.zeros((pad_dim,int(features)) (54, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 42, 14]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 4
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
--------------------------------------------------------------------------------
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
subjets per level= [32, 64, 46, 14, 2]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 5
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
///////////////////////////////////////////////////////////////////////////////////////////////max_n_level= 64
/////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (42, 4)
--------------------------------------------------------------------------------
TEST np.zeros((pad_dim,int(features)) (22, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (14, 4)
TEST np.zeros((pad_dim,int(features)) (50, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (46, 4)
TEST np.zeros((pad_dim,int(features)) (18, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (14, 4)
TEST np.zeros((pad_dim,int(features)) (50, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (2, 4)
TEST np.zeros((pad_dim,int(features)) (62, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 44, 12]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 4
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
--------------------------------------------------------------------------------
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (44, 4)
TEST np.zeros((pad_dim,int(features)) (20, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (12, 4)
--------------------------------------------------------------------------------
TEST np.zeros((pad_dim,int(features)) (52, 4)
subjets per level= [32, 64, 40, 12, 4]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 5
--------------------------------------------------------------------------------
subjets per level= [32, 64, 44, 10]
max_n_level= 64
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
--------------------------------------------------------------------------------
max_n_level and len(levels[i])= 64 64
Number of levels= 4
TEST contents[i].shape= (32, 4)
--------------------------------------------------------------------------------
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level= 64
--------------------------------------------------------------------------------
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST np.zeros((pad_dim,int(features)) (32, 4)
TEST contents[i].shape= (40, 4)
TEST np.zeros((pad_dim,int(features)) (24, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
TEST np.zeros((pad_dim,int(features)) (0, 4)
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (12, 4)
TEST np.zeros((pad_dim,int(features)) (52, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (44, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
TEST np.zeros((pad_dim,int(features)) (20, 4)
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (4, 4)
TEST np.zeros((pad_dim,int(features)) (60, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (10, 4)
TEST np.zeros((pad_dim,int(features)) (54, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 44, 10, 2]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 5
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (44, 4)
TEST np.zeros((pad_dim,int(features)) (20, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (10, 4)
TEST np.zeros((pad_dim,int(features)) (54, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (2, 4)
TEST np.zeros((pad_dim,int(features)) (62, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 36, 6, 2]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 5
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (36, 4)
TEST np.zeros((pad_dim,int(features)) (28, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (6, 4)
TEST np.zeros((pad_dim,int(features)) (58, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (2, 4)
TEST np.zeros((pad_dim,int(features)) (62, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 30, 4]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 4
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (30, 4)
TEST np.zeros((pad_dim,int(features)) (34, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (4, 4)
TEST np.zeros((pad_dim,int(features)) (60, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 44, 10, 4]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 5
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (44, 4)
TEST np.zeros((pad_dim,int(features)) (20, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (10, 4)
TEST np.zeros((pad_dim,int(features)) (54, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (4, 4)
TEST np.zeros((pad_dim,int(features)) (60, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 46, 10]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 4
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (46, 4)
TEST np.zeros((pad_dim,int(features)) (18, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (10, 4)
TEST np.zeros((pad_dim,int(features)) (54, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 46, 10, 2]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 5
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (46, 4)
TEST np.zeros((pad_dim,int(features)) (18, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (10, 4)
TEST np.zeros((pad_dim,int(features)) (54, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (2, 4)
TEST np.zeros((pad_dim,int(features)) (62, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 48, 12, 2]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 5
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (48, 4)
TEST np.zeros((pad_dim,int(features)) (16, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (12, 4)
TEST np.zeros((pad_dim,int(features)) (52, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (2, 4)
TEST np.zeros((pad_dim,int(features)) (62, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 40, 12]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 4
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (40, 4)
TEST np.zeros((pad_dim,int(features)) (24, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (12, 4)
TEST np.zeros((pad_dim,int(features)) (52, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 56, 10]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 4
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (56, 4)
TEST np.zeros((pad_dim,int(features)) (8, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (10, 4)
TEST np.zeros((pad_dim,int(features)) (54, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 38, 2]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 4
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (38, 4)
TEST np.zeros((pad_dim,int(features)) (26, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (2, 4)
TEST np.zeros((pad_dim,int(features)) (62, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 40, 12, 4, 2]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 6
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (40, 4)
TEST np.zeros((pad_dim,int(features)) (24, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (12, 4)
TEST np.zeros((pad_dim,int(features)) (52, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (4, 4)
TEST np.zeros((pad_dim,int(features)) (60, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (2, 4)
TEST np.zeros((pad_dim,int(features)) (62, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 38, 8]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 4
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (38, 4)
TEST np.zeros((pad_dim,int(features)) (26, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (8, 4)
TEST np.zeros((pad_dim,int(features)) (56, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 48, 4]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 4
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (48, 4)
TEST np.zeros((pad_dim,int(features)) (16, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (4, 4)
TEST np.zeros((pad_dim,int(features)) (60, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 42, 14]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 4
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (42, 4)
TEST np.zeros((pad_dim,int(features)) (22, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (14, 4)
TEST np.zeros((pad_dim,int(features)) (50, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 42, 14, 2]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 5
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (42, 4)
TEST np.zeros((pad_dim,int(features)) (22, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (14, 4)
TEST np.zeros((pad_dim,int(features)) (50, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (2, 4)
TEST np.zeros((pad_dim,int(features)) (62, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 42, 12, 2]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 5
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (42, 4)
TEST np.zeros((pad_dim,int(features)) (22, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (12, 4)
TEST np.zeros((pad_dim,int(features)) (52, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (2, 4)
TEST np.zeros((pad_dim,int(features)) (62, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 50, 14, 4]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 5
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (50, 4)
TEST np.zeros((pad_dim,int(features)) (14, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (14, 4)
TEST np.zeros((pad_dim,int(features)) (50, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (4, 4)
TEST np.zeros((pad_dim,int(features)) (60, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 44, 8, 2]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 5
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (44, 4)
TEST np.zeros((pad_dim,int(features)) (20, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (8, 4)
TEST np.zeros((pad_dim,int(features)) (56, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (2, 4)
TEST np.zeros((pad_dim,int(features)) (62, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 48, 10, 2]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 5
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (48, 4)
TEST np.zeros((pad_dim,int(features)) (16, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (10, 4)
TEST np.zeros((pad_dim,int(features)) (54, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (2, 4)
TEST np.zeros((pad_dim,int(features)) (62, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 44, 14, 4]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 5
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (44, 4)
TEST np.zeros((pad_dim,int(features)) (20, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (14, 4)
TEST np.zeros((pad_dim,int(features)) (50, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (4, 4)
TEST np.zeros((pad_dim,int(features)) (60, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 38, 12, 2]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 5
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (38, 4)
TEST np.zeros((pad_dim,int(features)) (26, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (12, 4)
TEST np.zeros((pad_dim,int(features)) (52, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (2, 4)
TEST np.zeros((pad_dim,int(features)) (62, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 44, 16, 2]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 5
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (44, 4)
TEST np.zeros((pad_dim,int(features)) (20, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (16, 4)
TEST np.zeros((pad_dim,int(features)) (48, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (2, 4)
TEST np.zeros((pad_dim,int(features)) (62, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 40, 14, 2]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 5
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (40, 4)
TEST np.zeros((pad_dim,int(features)) (24, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (14, 4)
TEST np.zeros((pad_dim,int(features)) (50, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (2, 4)
TEST np.zeros((pad_dim,int(features)) (62, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 40, 16, 2]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 5
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (40, 4)
TEST np.zeros((pad_dim,int(features)) (24, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (16, 4)
TEST np.zeros((pad_dim,int(features)) (48, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (2, 4)
TEST np.zeros((pad_dim,int(features)) (62, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 38, 14, 4]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 5
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (38, 4)
TEST np.zeros((pad_dim,int(features)) (26, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (14, 4)
TEST np.zeros((pad_dim,int(features)) (50, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (4, 4)
TEST np.zeros((pad_dim,int(features)) (60, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 40, 10]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 4
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (40, 4)
TEST np.zeros((pad_dim,int(features)) (24, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (10, 4)
TEST np.zeros((pad_dim,int(features)) (54, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 50, 12, 4]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 5
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (50, 4)
TEST np.zeros((pad_dim,int(features)) (14, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (12, 4)
TEST np.zeros((pad_dim,int(features)) (52, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (4, 4)
TEST np.zeros((pad_dim,int(features)) (60, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 52, 16, 2, 2]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 6
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (52, 4)
TEST np.zeros((pad_dim,int(features)) (12, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (16, 4)
TEST np.zeros((pad_dim,int(features)) (48, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (2, 4)
TEST np.zeros((pad_dim,int(features)) (62, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (2, 4)
TEST np.zeros((pad_dim,int(features)) (62, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 42, 20, 8]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 5
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (42, 4)
TEST np.zeros((pad_dim,int(features)) (22, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (20, 4)
TEST np.zeros((pad_dim,int(features)) (44, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (8, 4)
TEST np.zeros((pad_dim,int(features)) (56, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 42, 6, 2]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 5
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (42, 4)
TEST np.zeros((pad_dim,int(features)) (22, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (6, 4)
TEST np.zeros((pad_dim,int(features)) (58, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (2, 4)
TEST np.zeros((pad_dim,int(features)) (62, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 36, 6]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 4
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (36, 4)
TEST np.zeros((pad_dim,int(features)) (28, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (6, 4)
TEST np.zeros((pad_dim,int(features)) (58, 4)
train.py:220: RuntimeWarning: divide by zero encountered in true_divide
  inv_fpr = interp(base_tpr, tpr, 1. / fpr)[125]
- Eval metrics : accuracy: 0.4948 ; loss: 0.6986
- Found new best bg rejection = 3.145161290322581
Epoch 2/30
  0%|                                                                                          | 0/37 [00:00<?, ?it/s]
--------------------------------------------------------------------------------
subjets per level= [32, 64, 48, 14, 2]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 5
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (48, 4)
TEST np.zeros((pad_dim,int(features)) (16, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (14, 4)
TEST np.zeros((pad_dim,int(features)) (50, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (2, 4)
TEST np.zeros((pad_dim,int(features)) (62, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 44, 6, 2]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 5
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (44, 4)
TEST np.zeros((pad_dim,int(features)) (20, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (6, 4)
TEST np.zeros((pad_dim,int(features)) (58, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 42, 12]
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
--------------------------------------------------------------------------------
Number of levels= 4
max_n_level and len(levels[i])= 64 64
--------------------------------------------------------------------------------
TEST contents[i].shape= (2, 4)
TEST np.zeros((pad_dim,int(features)) (62, 4)
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (42, 4)
TEST np.zeros((pad_dim,int(features)) (22, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (12, 4)
TEST np.zeros((pad_dim,int(features)) (52, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 44, 6, 2]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 5
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
subjets per level= [32, 64, 46, 16, 4, 4]
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 6
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TESTmax_n_level= 64
 contents[i].shape= (32, 4)
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
subjets per level= [32, 64, 44, 10]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 4
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
TEST np.zeros((pad_dim,int(features)) (32, 4)
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
max_n_level= 64
TEST np.zeros((pad_dim,int(features)) (32, 4)
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
max_n_level and len(levels[i])= 64 64
TEST np.zeros((pad_dim,int(features)) (0, 4)
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (44, 4)
TEST contents[i].shape= (46, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
TEST np.zeros((pad_dim,int(features)) (20, 4)
max_n_level and len(levels[i])= 64 64
TEST np.zeros((pad_dim,int(features)) (18, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
TEST contents[i].shape= (64, 4)
max_n_level and len(levels[i])= 64 64
TEST np.zeros((pad_dim,int(features)) (0, 4)
TEST contents[i].shape= (16, 4)
TEST np.zeros((pad_dim,int(features)) (48, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
////////////////////////////////////////////////////////////////////////////////////////////////////
TEST contents[i].shape= (44, 4)
max_n_level and len(levels[i])= 64 64
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (4, 4)
TEST contents[i].shape= (6, 4)
TEST np.zeros((pad_dim,int(features)) (20, 4)
TEST np.zeros((pad_dim,int(features)) (60, 4)
TEST np.zeros((pad_dim,int(features)) (58, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
////////////////////////////////////////////////////////////////////////////////////////////////////
TEST contents[i].shape= (10, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (2, 4)
TEST np.zeros((pad_dim,int(features)) (62, 4)
max_n_level and len(levels[i])= 64 64
TEST np.zeros((pad_dim,int(features)) (54, 4)
TEST contents[i].shape= (4, 4)
TEST np.zeros((pad_dim,int(features)) (60, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 36, 10, 2, 2]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 6
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (36, 4)
TEST np.zeros((pad_dim,int(features)) (28, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (10, 4)
TEST np.zeros((pad_dim,int(features)) (54, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (2, 4)
TEST np.zeros((pad_dim,int(features)) (62, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (2, 4)
TEST np.zeros((pad_dim,int(features)) (62, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 48, 8]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 4
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (48, 4)
TEST np.zeros((pad_dim,int(features)) (16, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (8, 4)
TEST np.zeros((pad_dim,int(features)) (56, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 60, 18]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 4
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (60, 4)
TEST np.zeros((pad_dim,int(features)) (4, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (18, 4)
TEST np.zeros((pad_dim,int(features)) (46, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 50, 12, 2]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 5
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (50, 4)
TEST np.zeros((pad_dim,int(features)) (14, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (12, 4)
TEST np.zeros((pad_dim,int(features)) (52, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (2, 4)
TEST np.zeros((pad_dim,int(features)) (62, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 44, 8]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 4
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (44, 4)
TEST np.zeros((pad_dim,int(features)) (20, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (8, 4)
TEST np.zeros((pad_dim,int(features)) (56, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 50, 10]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 4
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (50, 4)
TEST np.zeros((pad_dim,int(features)) (14, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (10, 4)
TEST np.zeros((pad_dim,int(features)) (54, 4)
100%|█████████████████████████████████████████████████████████████████████| 37/37 [00:16<00:00,  2.26it/s, loss=0.696]
- Train metrics: accuracy: 0.5115 ; loss: 0.6991
--------------------------------------------------------------------------------
subjets per level= [32, 64, 44, 10]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 4
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
subjets per level= [32, 64, 46, 14, 2]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 5
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level= 64
max_n_level and len(levels[i])= 64 64
--------------------------------------------------------------------------------
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
////////////////////////////////////////////////////////////////////////////////////////////////////
TEST contents[i].shape= (32, 4)
max_n_level and len(levels[i])= 64 64
TEST np.zeros((pad_dim,int(features)) (32, 4)
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
////////////////////////////////////////////////////////////////////////////////////////////////////
TEST contents[i].shape= (64, 4)
max_n_level and len(levels[i])= 64 64
TEST np.zeros((pad_dim,int(features)) (0, 4)
TEST contents[i].shape= (44, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
TEST np.zeros((pad_dim,int(features)) (20, 4)
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (46, 4)
TEST np.zeros((pad_dim,int(features)) (18, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (10, 4)
TEST contents[i].shape= (14, 4)
TEST np.zeros((pad_dim,int(features)) (54, 4)
--------------------------------------------------------------------------------
TEST np.zeros((pad_dim,int(features)) (50, 4)
subjets per level= [32, 64, 42, 14]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 4
////////////////////////////////////////////////////////////////////////////////////////////////////
--------------------------------------------------------------------------------
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (2, 4)
TEST np.zeros((pad_dim,int(features)) (62, 4)
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (42, 4)
TEST np.zeros((pad_dim,int(features)) (22, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (14, 4)
TEST np.zeros((pad_dim,int(features)) (50, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 44, 10]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 4
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
--------------------------------------------------------------------------------
subjets per level= [32, 64, 40, 12, 4]
--------------------------------------------------------------------------------
max_n_level and len(levels[i])= 64 64
--------------------------------------------------------------------------------
Number of levels= 5
--------------------------------------------------------------------------------
TEST contents[i].shape= (44, 4)
TEST np.zeros((pad_dim,int(features)) (20, 4)
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (10, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
TEST np.zeros((pad_dim,int(features)) (54, 4)
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 44, 12]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 4
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (40, 4)
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (24, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (12, 4)
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (52, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (4, 4)
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (44, 4)
TEST np.zeros((pad_dim,int(features)) (60, 4)
TEST np.zeros((pad_dim,int(features)) (20, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (12, 4)
TEST np.zeros((pad_dim,int(features)) (52, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 44, 10, 2]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 5
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (44, 4)
TEST np.zeros((pad_dim,int(features)) (20, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (10, 4)
TEST np.zeros((pad_dim,int(features)) (54, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (2, 4)
TEST np.zeros((pad_dim,int(features)) (62, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 36, 6, 2]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 5
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (36, 4)
TEST np.zeros((pad_dim,int(features)) (28, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (6, 4)
TEST np.zeros((pad_dim,int(features)) (58, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (2, 4)
TEST np.zeros((pad_dim,int(features)) (62, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 30, 4]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 4
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (30, 4)
TEST np.zeros((pad_dim,int(features)) (34, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (4, 4)
TEST np.zeros((pad_dim,int(features)) (60, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 44, 10, 4]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 5
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (44, 4)
TEST np.zeros((pad_dim,int(features)) (20, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (10, 4)
TEST np.zeros((pad_dim,int(features)) (54, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (4, 4)
TEST np.zeros((pad_dim,int(features)) (60, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 46, 10]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 4
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (46, 4)
TEST np.zeros((pad_dim,int(features)) (18, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (10, 4)
TEST np.zeros((pad_dim,int(features)) (54, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 46, 10, 2]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 5
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (46, 4)
TEST np.zeros((pad_dim,int(features)) (18, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (10, 4)
TEST np.zeros((pad_dim,int(features)) (54, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (2, 4)
TEST np.zeros((pad_dim,int(features)) (62, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 48, 12, 2]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 5
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (48, 4)
TEST np.zeros((pad_dim,int(features)) (16, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (12, 4)
TEST np.zeros((pad_dim,int(features)) (52, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (2, 4)
TEST np.zeros((pad_dim,int(features)) (62, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 40, 12]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 4
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (40, 4)
TEST np.zeros((pad_dim,int(features)) (24, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (12, 4)
TEST np.zeros((pad_dim,int(features)) (52, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 56, 10]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 4
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (56, 4)
TEST np.zeros((pad_dim,int(features)) (8, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (10, 4)
TEST np.zeros((pad_dim,int(features)) (54, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 38, 2]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 4
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
train.py:220: RuntimeWarning: divide by zero encountered in true_divide
  inv_fpr = interp(base_tpr, tpr, 1. / fpr)[125]
- Eval metrics : accuracy: 0.4870 ; loss: 0.6985
TEST contents[i].shape= (38, 4)
TEST np.zeros((pad_dim,int(features)) (26, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (2, 4)
TEST np.zeros((pad_dim,int(features)) (62, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 40, 12, 4, 2]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 6
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (40, 4)
TEST np.zeros((pad_dim,int(features)) (24, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (12, 4)
TEST np.zeros((pad_dim,int(features)) (52, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (4, 4)
TEST np.zeros((pad_dim,int(features)) (60, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (2, 4)
TEST np.zeros((pad_dim,int(features)) (62, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 38, 8]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 4
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (38, 4)
TEST np.zeros((pad_dim,int(features)) (26, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (8, 4)
TEST np.zeros((pad_dim,int(features)) (56, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 48, 4]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 4
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (48, 4)
TEST np.zeros((pad_dim,int(features)) (16, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (4, 4)
TEST np.zeros((pad_dim,int(features)) (60, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 42, 14]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 4
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (42, 4)
TEST np.zeros((pad_dim,int(features)) (22, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (14, 4)
TEST np.zeros((pad_dim,int(features)) (50, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 42, 14, 2]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 5
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (42, 4)
TEST np.zeros((pad_dim,int(features)) (22, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (14, 4)
TEST np.zeros((pad_dim,int(features)) (50, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (2, 4)
TEST np.zeros((pad_dim,int(features)) (62, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 42, 12, 2]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 5
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (42, 4)
TEST np.zeros((pad_dim,int(features)) (22, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (12, 4)
TEST np.zeros((pad_dim,int(features)) (52, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (2, 4)
TEST np.zeros((pad_dim,int(features)) (62, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 50, 14, 4]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 5
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (50, 4)
TEST np.zeros((pad_dim,int(features)) (14, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (14, 4)
TEST np.zeros((pad_dim,int(features)) (50, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (4, 4)
TEST np.zeros((pad_dim,int(features)) (60, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 44, 8, 2]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 5
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (44, 4)
TEST np.zeros((pad_dim,int(features)) (20, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (8, 4)
TEST np.zeros((pad_dim,int(features)) (56, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (2, 4)
TEST np.zeros((pad_dim,int(features)) (62, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 48, 10, 2]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 5
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (48, 4)
TEST np.zeros((pad_dim,int(features)) (16, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (10, 4)
TEST np.zeros((pad_dim,int(features)) (54, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (2, 4)
TEST np.zeros((pad_dim,int(features)) (62, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 44, 14, 4]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 5
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (44, 4)
TEST np.zeros((pad_dim,int(features)) (20, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (14, 4)
TEST np.zeros((pad_dim,int(features)) (50, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (4, 4)
TEST np.zeros((pad_dim,int(features)) (60, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 38, 12, 2]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 5
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (38, 4)
TEST np.zeros((pad_dim,int(features)) (26, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (12, 4)
TEST np.zeros((pad_dim,int(features)) (52, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (2, 4)
TEST np.zeros((pad_dim,int(features)) (62, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 44, 16, 2]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 5
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (44, 4)
TEST np.zeros((pad_dim,int(features)) (20, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (16, 4)
TEST np.zeros((pad_dim,int(features)) (48, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (2, 4)
TEST np.zeros((pad_dim,int(features)) (62, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 40, 14, 2]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 5
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (40, 4)
TEST np.zeros((pad_dim,int(features)) (24, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (14, 4)
TEST np.zeros((pad_dim,int(features)) (50, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (2, 4)
TEST np.zeros((pad_dim,int(features)) (62, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 40, 16, 2]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 5
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (40, 4)
TEST np.zeros((pad_dim,int(features)) (24, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (16, 4)
TEST np.zeros((pad_dim,int(features)) (48, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (2, 4)
TEST np.zeros((pad_dim,int(features)) (62, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 38, 14, 4]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 5
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (38, 4)
TEST np.zeros((pad_dim,int(features)) (26, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (14, 4)
TEST np.zeros((pad_dim,int(features)) (50, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (4, 4)
TEST np.zeros((pad_dim,int(features)) (60, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 40, 10]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 4
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (40, 4)
TEST np.zeros((pad_dim,int(features)) (24, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (10, 4)
TEST np.zeros((pad_dim,int(features)) (54, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 50, 12, 4]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 5
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (50, 4)
TEST np.zeros((pad_dim,int(features)) (14, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (12, 4)
TEST np.zeros((pad_dim,int(features)) (52, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (4, 4)
TEST np.zeros((pad_dim,int(features)) (60, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 52, 16, 2, 2]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 6
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (52, 4)
TEST np.zeros((pad_dim,int(features)) (12, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (16, 4)
TEST np.zeros((pad_dim,int(features)) (48, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (2, 4)
TEST np.zeros((pad_dim,int(features)) (62, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (2, 4)
TEST np.zeros((pad_dim,int(features)) (62, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 42, 20, 8]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 5
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (42, 4)
TEST np.zeros((pad_dim,int(features)) (22, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (20, 4)
TEST np.zeros((pad_dim,int(features)) (44, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (8, 4)
TEST np.zeros((pad_dim,int(features)) (56, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 42, 6, 2]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 5
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (42, 4)
TEST np.zeros((pad_dim,int(features)) (22, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (6, 4)
TEST np.zeros((pad_dim,int(features)) (58, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (2, 4)
TEST np.zeros((pad_dim,int(features)) (62, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 36, 6]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 4
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (36, 4)
TEST np.zeros((pad_dim,int(features)) (28, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (6, 4)
TEST np.zeros((pad_dim,int(features)) (58, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 48, 14, 2]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 5
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (48, 4)
TEST np.zeros((pad_dim,int(features)) (16, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (14, 4)
TEST np.zeros((pad_dim,int(features)) (50, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (2, 4)
TEST np.zeros((pad_dim,int(features)) (62, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 44, 6, 2]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 5
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (44, 4)
TEST np.zeros((pad_dim,int(features)) (20, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (6, 4)
TEST np.zeros((pad_dim,int(features)) (58, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (2, 4)
TEST np.zeros((pad_dim,int(features)) (62, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 42, 12]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 4
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (42, 4)
TEST np.zeros((pad_dim,int(features)) (22, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (12, 4)
TEST np.zeros((pad_dim,int(features)) (52, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 46, 16, 4, 4]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 6
--------------------------------------------------------------------------------
subjets per level= [32, 64, 44, 10]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 4
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
max_n_level and len(levels[i])= 64 64
max_n_level= 64
--------------------------------------------------------------------------------
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
////////////////////////////////////////////////////////////////////////////////////////////////////
TEST contents[i].shape= (44, 4)
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (20, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (10, 4)
TEST np.zeros((pad_dim,int(features)) (54, 4)
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (46, 4)
TEST np.zeros((pad_dim,int(features)) (18, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (16, 4)
TEST np.zeros((pad_dim,int(features)) (48, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (4, 4)
TEST np.zeros((pad_dim,int(features)) (60, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (4, 4)
TEST np.zeros((pad_dim,int(features)) (60, 4)
subjets per level= [32, 64, 44, 6, 2]
-----------------------------------------------------------------------------------------------------------
subjets per level= [32, 64, 36, 10, 2, 2]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 6
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
-----------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 5
--------------------------------------------------------------------------------
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (36, 4)
TEST np.zeros((pad_dim,int(features)) (28, 4)
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (10, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
TEST np.zeros((pad_dim,int(features)) (54, 4)
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
TEST np.zeros((pad_dim,int(features)) (32, 4)
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (2, 4)
TEST np.zeros((pad_dim,int(features)) (62, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (2, 4)
TEST np.zeros((pad_dim,int(features)) (62, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (44, 4)
TEST np.zeros((pad_dim,int(features)) (20, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (6, 4)
TEST np.zeros((pad_dim,int(features)) (58, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (2, 4)
TEST np.zeros((pad_dim,int(features)) (62, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 48, 8]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 4
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (48, 4)
TEST np.zeros((pad_dim,int(features)) (16, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (8, 4)
TEST np.zeros((pad_dim,int(features)) (56, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 60, 18]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 4
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (60, 4)
TEST np.zeros((pad_dim,int(features)) (4, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (18, 4)
TEST np.zeros((pad_dim,int(features)) (46, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 50, 12, 2]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 5
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (50, 4)
TEST np.zeros((pad_dim,int(features)) (14, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (12, 4)
TEST np.zeros((pad_dim,int(features)) (52, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (2, 4)
TEST np.zeros((pad_dim,int(features)) (62, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 44, 8]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 4
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (44, 4)
TEST np.zeros((pad_dim,int(features)) (20, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (8, 4)
TEST np.zeros((pad_dim,int(features)) (56, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 50, 10]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 4
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (50, 4)
TEST np.zeros((pad_dim,int(features)) (14, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (10, 4)
TEST np.zeros((pad_dim,int(features)) (54, 4)
- Found new best bg rejection = 3.19672131147541
Epoch 3/30
  0%|                                                                                          | 0/37 [00:00<?, ?it/s]
--------------------------------------------------------------------------------
subjets per level= [32, 64, 46, 14, 2]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 5
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (46, 4)
TEST np.zeros((pad_dim,int(features)) (18, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (14, 4)
TEST np.zeros((pad_dim,int(features)) (50, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
--------------------------------------------------------------------------------
TEST contents[i].shape= (2, 4)
TEST np.zeros((pad_dim,int(features)) (62, 4)
subjets per level= [32, 64, 44, 10]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
subjets per level= [32, 64, 42, 14]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 4
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 4
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (42, 4)
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (22, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
////////////////////////////////////////////////////////////////////////////////////////////////////
TEST contents[i].shape= (14, 4)
TEST np.zeros((pad_dim,int(features)) (50, 4)
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (44, 4)
TEST np.zeros((pad_dim,int(features)) (20, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (10, 4)
TEST np.zeros((pad_dim,int(features)) (54, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 44, 12]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 4
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
subjets per level= [32, 64, 40, 12, 4]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 5
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level= 64
--------------------------------------------------------------------------------
max_n_level and len(levels[i])= 64 64
////////////////////////////////////////////////////////////////////////////////////////////////////
TEST contents[i].shape= (32, 4)
--------------------------------------------------------------------------------
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
subjets per level= [32, 64, 44, 10]
TEST np.zeros((pad_dim,int(features)) (32, 4)
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
TEST np.zeros((pad_dim,int(features)) (32, 4)
Number of levels= 4
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
max_TEST contents[i].shape= (64, 4)
n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
max_n_level= 64
////////////////////////////////////////////////////////////////////////////////////////////////////
--------------------------------------------------------------------------------
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (44, 4)
TEST np.zeros((pad_dim,int(features)) (20, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
////////////////////////////////////////////////////////////////////////////////////////////////////
TEST contents[i].shape= (40, 4)
max_n_level and len(levels[i])= 64 64
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST contents[i].shape= (12, 4)
TEST np.zeros((pad_dim,int(features)) (24, 4)
TEST np.zeros((pad_dim,int(features)) (52, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST np.zeros((pad_dim,int(features)) (32, 4)
TEST contents[i].shape= (12, 4)
TEST np.zeros((pad_dim,int(features)) (52, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST contents[i].shape= (4, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
TEST np.zeros((pad_dim,int(features)) (60, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (44, 4)
TEST np.zeros((pad_dim,int(features)) (20, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (10, 4)
TEST np.zeros((pad_dim,int(features)) (54, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 44, 10, 2]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 5
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (44, 4)
TEST np.zeros((pad_dim,int(features)) (20, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (10, 4)
TEST np.zeros((pad_dim,int(features)) (54, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (2, 4)
TEST np.zeros((pad_dim,int(features)) (62, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 36, 6, 2]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 5
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (36, 4)
TEST np.zeros((pad_dim,int(features)) (28, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (6, 4)
TEST np.zeros((pad_dim,int(features)) (58, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (2, 4)
TEST np.zeros((pad_dim,int(features)) (62, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 30, 4]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 4
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (30, 4)
TEST np.zeros((pad_dim,int(features)) (34, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (4, 4)
TEST np.zeros((pad_dim,int(features)) (60, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 44, 10, 4]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 5
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (44, 4)
TEST np.zeros((pad_dim,int(features)) (20, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (10, 4)
TEST np.zeros((pad_dim,int(features)) (54, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (4, 4)
TEST np.zeros((pad_dim,int(features)) (60, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 46, 10]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 4
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (46, 4)
TEST np.zeros((pad_dim,int(features)) (18, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (10, 4)
TEST np.zeros((pad_dim,int(features)) (54, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 46, 10, 2]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 5
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (46, 4)
TEST np.zeros((pad_dim,int(features)) (18, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (10, 4)
TEST np.zeros((pad_dim,int(features)) (54, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (2, 4)
TEST np.zeros((pad_dim,int(features)) (62, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 48, 12, 2]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 5
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (48, 4)
TEST np.zeros((pad_dim,int(features)) (16, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (12, 4)
TEST np.zeros((pad_dim,int(features)) (52, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (2, 4)
TEST np.zeros((pad_dim,int(features)) (62, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 40, 12]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 4
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (40, 4)
TEST np.zeros((pad_dim,int(features)) (24, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (12, 4)
TEST np.zeros((pad_dim,int(features)) (52, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 56, 10]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 4
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (56, 4)
TEST np.zeros((pad_dim,int(features)) (8, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (10, 4)
TEST np.zeros((pad_dim,int(features)) (54, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 38, 2]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 4
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (38, 4)
TEST np.zeros((pad_dim,int(features)) (26, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (2, 4)
TEST np.zeros((pad_dim,int(features)) (62, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 40, 12, 4, 2]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 6
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (40, 4)
TEST np.zeros((pad_dim,int(features)) (24, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (12, 4)
TEST np.zeros((pad_dim,int(features)) (52, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (4, 4)
TEST np.zeros((pad_dim,int(features)) (60, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (2, 4)
100%|█████████████████████████████████████████████████████████████████████| 37/37 [00:16<00:00,  2.31it/s, loss=0.692]
- Train metrics: accuracy: 0.5329 ; loss: 0.6949
train.py:220: RuntimeWarning: divide by zero encountered in true_divide
  inv_fpr = interp(base_tpr, tpr, 1. / fpr)[125]
- Eval metrics : accuracy: 0.4766 ; loss: 0.7016
Epoch 4/30
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (38, 4)
TEST np.zeros((pad_dim,int(features)) (26, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (8, 4)
TEST np.zeros((pad_dim,int(features)) (56, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 48, 4]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 4
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (48, 4)
TEST np.zeros((pad_dim,int(features)) (16, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (4, 4)
TEST np.zeros((pad_dim,int(features)) (60, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 42, 14]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 4
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (42, 4)
TEST np.zeros((pad_dim,int(features)) (22, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (14, 4)
TEST np.zeros((pad_dim,int(features)) (50, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 42, 14, 2]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 5
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (42, 4)
TEST np.zeros((pad_dim,int(features)) (22, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (14, 4)
TEST np.zeros((pad_dim,int(features)) (50, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (2, 4)
TEST np.zeros((pad_dim,int(features)) (62, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 42, 12, 2]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 5
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (42, 4)
TEST np.zeros((pad_dim,int(features)) (22, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (12, 4)
TEST np.zeros((pad_dim,int(features)) (52, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (2, 4)
TEST np.zeros((pad_dim,int(features)) (62, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 50, 14, 4]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 5
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (50, 4)
TEST np.zeros((pad_dim,int(features)) (14, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (14, 4)
TEST np.zeros((pad_dim,int(features)) (50, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (4, 4)
TEST np.zeros((pad_dim,int(features)) (60, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 44, 8, 2]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 5
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (44, 4)
TEST np.zeros((pad_dim,int(features)) (20, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (8, 4)
TEST np.zeros((pad_dim,int(features)) (56, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (2, 4)
TEST np.zeros((pad_dim,int(features)) (62, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 48, 10, 2]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 5
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (48, 4)
TEST np.zeros((pad_dim,int(features)) (16, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (10, 4)
TEST np.zeros((pad_dim,int(features)) (54, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (2, 4)
TEST np.zeros((pad_dim,int(features)) (62, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 44, 14, 4]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 5
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (44, 4)
TEST np.zeros((pad_dim,int(features)) (20, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (14, 4)
TEST np.zeros((pad_dim,int(features)) (50, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (4, 4)
TEST np.zeros((pad_dim,int(features)) (60, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 38, 12, 2]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 5
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (38, 4)
TEST np.zeros((pad_dim,int(features)) (26, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (12, 4)
TEST np.zeros((pad_dim,int(features)) (52, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (2, 4)
TEST np.zeros((pad_dim,int(features)) (62, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 44, 16, 2]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 5
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (44, 4)
TEST np.zeros((pad_dim,int(features)) (20, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (16, 4)
TEST np.zeros((pad_dim,int(features)) (48, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (2, 4)
TEST np.zeros((pad_dim,int(features)) (62, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 40, 14, 2]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 5
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (40, 4)
TEST np.zeros((pad_dim,int(features)) (24, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (14, 4)
TEST np.zeros((pad_dim,int(features)) (50, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (2, 4)
TEST np.zeros((pad_dim,int(features)) (62, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 40, 16, 2]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 5
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (40, 4)
TEST np.zeros((pad_dim,int(features)) (24, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (16, 4)
TEST np.zeros((pad_dim,int(features)) (48, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (2, 4)
TEST np.zeros((pad_dim,int(features)) (62, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 38, 14, 4]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 5
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (38, 4)
TEST np.zeros((pad_dim,int(features)) (26, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (14, 4)
TEST np.zeros((pad_dim,int(features)) (50, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (4, 4)
TEST np.zeros((pad_dim,int(features)) (60, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 40, 10]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 4
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (40, 4)
TEST np.zeros((pad_dim,int(features)) (24, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (10, 4)
TEST np.zeros((pad_dim,int(features)) (54, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 50, 12, 4]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 5
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (50, 4)
TEST np.zeros((pad_dim,int(features)) (14, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (12, 4)
TEST np.zeros((pad_dim,int(features)) (52, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (4, 4)
TEST np.zeros((pad_dim,int(features)) (60, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 52, 16, 2, 2]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 6
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (52, 4)
TEST np.zeros((pad_dim,int(features)) (12, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (16, 4)
TEST np.zeros((pad_dim,int(features)) (48, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (2, 4)
TEST np.zeros((pad_dim,int(features)) (62, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (2, 4)
TEST np.zeros((pad_dim,int(features)) (62, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 42, 20, 8]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 5
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (42, 4)
TEST np.zeros((pad_dim,int(features)) (22, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (20, 4)
TEST np.zeros((pad_dim,int(features)) (44, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (8, 4)
TEST np.zeros((pad_dim,int(features)) (56, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 42, 6, 2]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 5
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (42, 4)
TEST np.zeros((pad_dim,int(features)) (22, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (6, 4)
TEST np.zeros((pad_dim,int(features)) (58, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (2, 4)
TEST np.zeros((pad_dim,int(features)) (62, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 36, 6]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 4
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (36, 4)
TEST np.zeros((pad_dim,int(features)) (28, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (6, 4)
TEST np.zeros((pad_dim,int(features)) (58, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 48, 14, 2]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 5
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (48, 4)
TEST np.zeros((pad_dim,int(features)) (16, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (14, 4)
TEST np.zeros((pad_dim,int(features)) (50, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (2, 4)
TEST np.zeros((pad_dim,int(features)) (62, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 44, 6, 2]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 5
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
max_n_level= 64
subjets per level= [32, 64, 42, 12]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 4
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (44, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
TEST np.zeros((pad_dim,int(features)) (20, 4)
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (6, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
TEST np.zeros((pad_dim,int(features)) (58, 4)
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (42, 4)
TEST np.zeros((pad_dim,int(features)) (22, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (12, 4)
TEST np.zeros((pad_dim,int(features)) (52, 4)
TEST contents[i].shape= (2, 4)
TEST np.zeros((pad_dim,int(features)) (62, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 44, 10]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 4
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (44, 4)
TEST np.zeros((pad_dim,int(features)) (20, 4)
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
subjets per level= [32, 64, 44, 6, 2]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 5
--------------------------------------------------------------------------------
subjets per level= [32, 64, 46, 16, 4, 4]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
Number of levels= 6
--------------------------------------------------------------------------------
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (10, 4)
TEST np.zeros((pad_dim,int(features)) (54, 4)
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
max_n_level= 64
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
--------------------------------------------------------------------------------
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (46, 4)
max_n_level and len(levels[i])= 64 64
TEST np.zeros((pad_dim,int(features)) (18, 4)
TEST contents[i].shape= (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (16, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
TEST np.zeros((pad_dim,int(features)) (48, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (4, 4)
max_n_level and len(levels[i])= 64 64
TEST np.zeros((pad_dim,int(features)) (60, 4)
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
////////////////////////////////////////////////////////////////////////////////////////////////////
TEST contents[i].shape= (4, 4)
TEST np.zeros((pad_dim,int(features)) (60, 4)
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (44, 4)
TEST np.zeros((pad_dim,int(features)) (20, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (6, 4)
TEST np.zeros((pad_dim,int(features)) (58, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (2, 4)
TEST np.zeros((pad_dim,int(features)) (62, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 36, 10, 2, 2]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 6
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (36, 4)
TEST np.zeros((pad_dim,int(features)) (28, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (10, 4)
TEST np.zeros((pad_dim,int(features)) (54, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (2, 4)
TEST np.zeros((pad_dim,int(features)) (62, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (2, 4)
TEST np.zeros((pad_dim,int(features)) (62, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 48, 8]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 4
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (48, 4)
TEST np.zeros((pad_dim,int(features)) (16, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (8, 4)
TEST np.zeros((pad_dim,int(features)) (56, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 60, 18]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 4
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (60, 4)
TEST np.zeros((pad_dim,int(features)) (4, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (18, 4)
TEST np.zeros((pad_dim,int(features)) (46, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 50, 12, 2]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 5
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (50, 4)
TEST np.zeros((pad_dim,int(features)) (14, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (12, 4)
TEST np.zeros((pad_dim,int(features)) (52, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (2, 4)
TEST np.zeros((pad_dim,int(features)) (62, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 44, 8]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 4
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (44, 4)
TEST np.zeros((pad_dim,int(features)) (20, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (8, 4)
TEST np.zeros((pad_dim,int(features)) (56, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 50, 10]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 4
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (50, 4)
TEST np.zeros((pad_dim,int(features)) (14, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (10, 4)
TEST np.zeros((pad_dim,int(features)) (54, 4)
Checkpoint Directory exists!
100%|█████████████████████████████████████████████████████████████████████| 37/37 [00:17<00:00,  2.09it/s, loss=0.691]
- Train metrics: accuracy: 0.5280 ; loss: 0.6932
--------------------------------------------------------------------------------
subjets per level= [32, 64, 46, 14, 2]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 5
--------------------------------------------------------------------------------
subjets per level= [32, 64, 44, 10]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 4
--------------------------------------------------------------------------------
max_n_level= 64
max_n_level= 64
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (46, 4)
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (44, 4)
TEST np.zeros((pad_dim,int(features)) (18, 4)
TEST np.zeros((pad_dim,int(features)) (20, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (14, 4)
TEST np.zeros((pad_dim,int(features)) (50, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (2, 4)
TEST contents[i].shape= (10, 4)
TEST np.zeros((pad_dim,int(features)) (62, 4)
TEST np.zeros((pad_dim,int(features)) (54, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 42, 14]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 4
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (42, 4)
TEST np.zeros((pad_dim,int(features)) (22, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (14, 4)
TEST np.zeros((pad_dim,int(features)) (50, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 40, 12, 4]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 5
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (40, 4)
TEST np.zeros((pad_dim,int(features)) (24, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (12, 4)
TEST np.zeros((pad_dim,int(features)) (52, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (4, 4)
TEST np.zeros((pad_dim,int(features)) (60, 4)
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
subjets per level= [32, 64, 44, 12]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 4
--------------------------------------------------------------------------------
subjets per level= [32, 64, 44, 10]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 4
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
////////////////////////////////////////////////////////////////////////////////////////////////////
TEST contents[i].shape= (32, 4)
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
////////////////////////////////////////////////////////////////////////////////////////////////////
TEST contents[i].shape= (64, 4)
max_n_level and len(levels[i])= 64 64
TEST np.zeros((pad_dim,int(features)) (0, 4)
TEST contents[i].shape= (44, 4)
TEST np.zeros((pad_dim,int(features)) (20, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (44, 4)
TEST contents[i].shape= (10, 4)
TEST np.zeros((pad_dim,int(features)) (20, 4)
TEST np.zeros((pad_dim,int(features)) (54, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (12, 4)
TEST np.zeros((pad_dim,int(features)) (52, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 44, 10, 2]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 5
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (44, 4)
TEST np.zeros((pad_dim,int(features)) (20, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (10, 4)
TEST np.zeros((pad_dim,int(features)) (54, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (2, 4)
TEST np.zeros((pad_dim,int(features)) (62, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 36, 6, 2]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 5
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (36, 4)
TEST np.zeros((pad_dim,int(features)) (28, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (6, 4)
TEST np.zeros((pad_dim,int(features)) (58, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (2, 4)
TEST np.zeros((pad_dim,int(features)) (62, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 30, 4]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 4
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (30, 4)
TEST np.zeros((pad_dim,int(features)) (34, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (4, 4)
TEST np.zeros((pad_dim,int(features)) (60, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 44, 10, 4]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 5
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (44, 4)
TEST np.zeros((pad_dim,int(features)) (20, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (10, 4)
TEST np.zeros((pad_dim,int(features)) (54, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (4, 4)
TEST np.zeros((pad_dim,int(features)) (60, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 46, 10]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 4
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (46, 4)
TEST np.zeros((pad_dim,int(features)) (18, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (10, 4)
TEST np.zeros((pad_dim,int(features)) (54, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 46, 10, 2]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 5
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (46, 4)
TEST np.zeros((pad_dim,int(features)) (18, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (10, 4)
TEST np.zeros((pad_dim,int(features)) (54, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (2, 4)
TEST np.zeros((pad_dim,int(features)) (62, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 48, 12, 2]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 5
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (48, 4)
TEST np.zeros((pad_dim,int(features)) (16, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (12, 4)
TEST np.zeros((pad_dim,int(features)) (52, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (2, 4)
TEST np.zeros((pad_dim,int(features)) (62, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 40, 12]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 4
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (40, 4)
TEST np.zeros((pad_dim,int(features)) (24, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (12, 4)
TEST np.zeros((pad_dim,int(features)) (52, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 56, 10]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 4
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (56, 4)
TEST np.zeros((pad_dim,int(features)) (8, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (10, 4)
TEST np.zeros((pad_dim,int(features)) (54, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 38, 2]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 4
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (38, 4)
TEST np.zeros((pad_dim,int(features)) (26, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (2, 4)
TEST np.zeros((pad_dim,int(features)) (62, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 40, 12, 4, 2]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 6
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (40, 4)
TEST np.zeros((pad_dim,int(features)) (24, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (12, 4)
TEST np.zeros((pad_dim,int(features)) (52, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (4, 4)
TEST np.zeros((pad_dim,int(features)) (60, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (2, 4)
TEST np.zeros((pad_dim,int(features)) (62, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 38, 8]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 4
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (38, 4)
TEST np.zeros((pad_dim,int(features)) (26, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (8, 4)
TEST np.zeros((pad_dim,int(features)) (56, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 48, 4]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 4
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (48, 4)
TEST np.zeros((pad_dim,int(features)) (16, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (4, 4)
TEST np.zeros((pad_dim,int(features)) (60, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 42, 14]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 4
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (42, 4)
TEST np.zeros((pad_dim,int(features)) (22, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (14, 4)
TEST np.zeros((pad_dim,int(features)) (50, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 42, 14, 2]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 5
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (42, 4)
TEST np.zeros((pad_dim,int(features)) (22, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (14, 4)
TEST np.zeros((pad_dim,int(features)) (50, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (2, 4)
TEST np.zeros((pad_dim,int(features)) (62, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 42, 12, 2]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 5
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (42, 4)
TEST np.zeros((pad_dim,int(features)) (22, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (12, 4)
TEST np.zeros((pad_dim,int(features)) (52, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (2, 4)
TEST np.zeros((pad_dim,int(features)) (62, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 50, 14, 4]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 5
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (50, 4)
TEST np.zeros((pad_dim,int(features)) (14, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (14, 4)
TEST np.zeros((pad_dim,int(features)) (50, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (4, 4)
TEST np.zeros((pad_dim,int(features)) (60, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 44, 8, 2]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 5
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (44, 4)
TEST np.zeros((pad_dim,int(features)) (20, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (8, 4)
TEST np.zeros((pad_dim,int(features)) (56, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (2, 4)
TEST np.zeros((pad_dim,int(features)) (62, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 48, 10, 2]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 5
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (48, 4)
TEST np.zeros((pad_dim,int(features)) (16, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (10, 4)
TEST np.zeros((pad_dim,int(features)) (54, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (2, 4)
TEST np.zeros((pad_dim,int(features)) (62, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 44, 14, 4]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 5
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (44, 4)
TEST np.zeros((pad_dim,int(features)) (20, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (14, 4)
TEST np.zeros((pad_dim,int(features)) (50, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (4, 4)
TEST np.zeros((pad_dim,int(features)) (60, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 38, 12, 2]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 5
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (38, 4)
TEST np.zeros((pad_dim,int(features)) (26, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (12, 4)
TEST np.zeros((pad_dim,int(features)) (52, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (2, 4)
TEST np.zeros((pad_dim,int(features)) (62, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 44, 16, 2]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 5
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (44, 4)
TEST np.zeros((pad_dim,int(features)) (20, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (16, 4)
TEST np.zeros((pad_dim,int(features)) (48, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (2, 4)
TEST np.zeros((pad_dim,int(features)) (62, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 40, 14, 2]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 5
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (40, 4)
TEST np.zeros((pad_dim,int(features)) (24, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (14, 4)
TEST np.zeros((pad_dim,int(features)) (50, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (2, 4)
TEST np.zeros((pad_dim,int(features)) (62, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 40, 16, 2]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 5
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (40, 4)
TEST np.zeros((pad_dim,int(features)) (24, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (16, 4)
TEST np.zeros((pad_dim,int(features)) (48, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (2, 4)
TEST np.zeros((pad_dim,int(features)) (62, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 38, 14, 4]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 5
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (38, 4)
TEST np.zeros((pad_dim,int(features)) (26, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (14, 4)
TEST np.zeros((pad_dim,int(features)) (50, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (4, 4)
TEST np.zeros((pad_dim,int(features)) (60, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 40, 10]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 4
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (40, 4)
TEST np.zeros((pad_dim,int(features)) (24, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (10, 4)
TEST np.zeros((pad_dim,int(features)) (54, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 50, 12, 4]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 5
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (50, 4)
TEST np.zeros((pad_dim,int(features)) (14, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (12, 4)
TEST np.zeros((pad_dim,int(features)) (52, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (4, 4)
TEST np.zeros((pad_dim,int(features)) (60, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 52, 16, 2, 2]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 6
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (52, 4)
TEST np.zeros((pad_dim,int(features)) (12, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (16, 4)
TEST np.zeros((pad_dim,int(features)) (48, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (2, 4)
TEST np.zeros((pad_dim,int(features)) (62, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (2, 4)
TEST np.zeros((pad_dim,int(features)) (62, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 42, 20, 8]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 5
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (42, 4)
TEST np.zeros((pad_dim,int(features)) (22, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (20, 4)
TEST np.zeros((pad_dim,int(features)) (44, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (8, 4)
TEST np.zeros((pad_dim,int(features)) (56, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 42, 6, 2]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 5
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (42, 4)
TEST np.zeros((pad_dim,int(features)) (22, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (6, 4)
TEST np.zeros((pad_dim,int(features)) (58, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (2, 4)
TEST np.zeros((pad_dim,int(features)) (62, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 36, 6]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 4
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (36, 4)
TEST np.zeros((pad_dim,int(features)) (28, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (6, 4)
TEST np.zeros((pad_dim,int(features)) (58, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 48, 14, 2]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 5
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (48, 4)
TEST np.zeros((pad_dim,int(features)) (16, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
--------------------------------------------------------------------------------
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (14, 4)
subjets per level= [32, 64, 44, 6, 2]
--------------------------------------------------------------------------------
TEST np.zeros((pad_dim,int(features)) (50, 4)
--------------------------------------------------------------------------------
Number of levels= 5
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level amax_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
nd len(levels[i])= 64 64
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST contents[i].shape= (2, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (44, 4)
TEST np.zeros((pad_dim,int(features)) (62, 4)
TEST np.zeros((pad_dim,int(features)) (20, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 42, 12]
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (6, 4)
--------------------------------------------------------------------------------
TEST np.zeros((pad_dim,int(features)) (58, 4)
Number of levels= 4
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (2, 4)
TEST np.zeros((pad_dim,int(features)) (62, 4)
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (42, 4)
TEST np.zeros((pad_dim,int(features)) (22, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (12, 4)
TEST np.zeros((pad_dim,int(features)) (52, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 44, 6, 2]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 5
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
subjets per level= [32, 64, 44, 10]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 4
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
max_n_level= 64
TEST contents[i].shape= (32, 4)
--------------------------------------------------------------------------------
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
////////////////////////////////////////////////////////////////////////////////////////////////////
TEST contents[i].shape= (32, 4)
max_n_level and len(levels[i])= 64 64
TEST np.zeros((pad_dim,int(features)) (32, 4)
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
max_n_level and len(levels[i])= 64 64
--------------------------------------------------------------------------------
TEST contents[i].shape= (44, 4)
subjets per level= [32, 64, 46, 16, 4, 4]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
TEST np.zeros((pad_dim,int(features)) (0, 4)
Number of levels= 6
--------------------------------------------------------------------------------
TEST np.zeros((pad_dim,int(features)) (20, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (6, 4)
max_n_level= 64
////////////////////////////////////////////////////////////////////////////////////////////////////
--------------------------------------------------------------------------------
TEST np.zeros((pad_dim,int(features)) (58, 4)
max_n_level and len(levels[i])= 64 64
////////////////////////////////////////////////////////////////////////////////////////////////////
TEST contents[i].shape= (44, 4)
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (2, 4)
TEST np.zeros((pad_dim,int(features)) (20, 4)
TEST np.zeros((pad_dim,int(features)) (62, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (10, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
TEST np.zeros((pad_dim,int(features)) (54, 4)
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (46, 4)
TEST np.zeros((pad_dim,int(features)) (18, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (16, 4)
TEST np.zeros((pad_dim,int(features)) (48, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (4, 4)
TEST np.zeros((pad_dim,int(features)) (60, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (4, 4)
TEST np.zeros((pad_dim,int(features)) (60, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 36, 10, 2, 2]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 6
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (36, 4)
TEST np.zeros((pad_dim,int(features)) (28, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (10, 4)
TEST np.zeros((pad_dim,int(features)) (54, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (2, 4)
TEST np.zeros((pad_dim,int(features)) (62, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (2, 4)
TEST np.zeros((pad_dim,int(features)) (62, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 48, 8]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 4
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (48, 4)
TEST np.zeros((pad_dim,int(features)) (16, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (8, 4)
TEST np.zeros((pad_dim,int(features)) (56, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 50, 12, 2]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 5
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (50, 4)
TEST np.zeros((pad_dim,int(features)) (14, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (12, 4)
TEST np.zeros((pad_dim,int(features)) (52, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (2, 4)
TEST np.zeros((pad_dim,int(features)) (62, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 60, 18]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 4
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (60, 4)
TEST np.zeros((pad_dim,int(features)) (4, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (18, 4)
TEST np.zeros((pad_dim,int(features)) (46, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 44, 8]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 4
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (44, 4)
TEST np.zeros((pad_dim,int(features)) (20, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (8, 4)
TEST np.zeros((pad_dim,int(features)) (56, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 50, 10]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 4
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (50, 4)
TEST np.zeros((pad_dim,int(features)) (14, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (10, 4)
TEST np.zeros((pad_dim,int(features)) (54, 4)
train.py:220: RuntimeWarning: divide by zero encountered in true_divide
  inv_fpr = interp(base_tpr, tpr, 1. / fpr)[125]
- Eval metrics : accuracy: 0.4766 ; loss: 0.7025
- Found new best bg rejection = 3.4210526315789473
Epoch 5/30
  0%|                                                                                          | 0/37 [00:00<?, ?it/s]

 41%|███████████████████████████▉                                         | 15/37 [00:16<00:17,  1.26it/s, loss=0.688]
--------------------------------------------------------------------------------
subjets per level= [32, 64, 46, 14, 2]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 5
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (46, 4)
TEST np.zeros((pad_dim,int(features)) (18, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 44, 10]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 4
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (14, 4)
TEST np.zeros((pad_dim,int(features)) (50, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level= 64
--------------------------------------------------------------------------------
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (2, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
TEST np.zeros((pad_dim,int(features)) (62, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (44, 4)
TEST np.zeros((pad_dim,int(features)) (20, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 42, 14]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
Number of levels= 4
--------------------------------------------------------------------------------
max_n_level and len(levels[i])= 64 64
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
TEST contents[i].shape= (10, 4)
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (54, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (42, 4)
TEST np.zeros((pad_dim,int(features)) (22, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (14, 4)
TEST np.zeros((pad_dim,int(features)) (50, 4)
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
subjets per level= [32, 64, 44, 12]
subjets per level= [32, 64, 44, 10]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 4
Number of levels= 4
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
subjets per level= [32, 64, 40, 12, 4]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
max_n_level= 64
Number of levels= 5
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
max_n_level= 64
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
max_n_level and len(levels[i])= 64 64
////////////////////////////////////////////////////////////////////////////////////////////////////
TEST contents[i].shape= (64, 4)
max_n_level and len(levels[i])= 64 64
TEST np.zeros((pad_dim,int(features)) (0, 4)
--------------------------------------------------------------------------------
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (44, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
TEST np.zeros((pad_dim,int(features)) (20, 4)
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST np.zeros((pad_dim,int(features)) (32, 4)
TEST contents[i].shape= (10, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
TEST np.zeros((pad_dim,int(features)) (54, 4)
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (40, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
TEST np.zeros((pad_dim,int(features)) (24, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (44, 4)
TEST contents[i].shape= (12, 4)
TEST np.zeros((pad_dim,int(features)) (52, 4)
TEST np.zeros((pad_dim,int(features)) (20, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (12, 4)
TEST contents[i].shape= (4, 4)
TEST np.zeros((pad_dim,int(features)) (60, 4)
TEST np.zeros((pad_dim,int(features)) (52, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 44, 10, 2]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 5
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (44, 4)
TEST np.zeros((pad_dim,int(features)) (20, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (10, 4)
TEST np.zeros((pad_dim,int(features)) (54, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (2, 4)
TEST np.zeros((pad_dim,int(features)) (62, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 36, 6, 2]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 5
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (36, 4)
TEST np.zeros((pad_dim,int(features)) (28, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (6, 4)
TEST np.zeros((pad_dim,int(features)) (58, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (2, 4)
TEST np.zeros((pad_dim,int(features)) (62, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 30, 4]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 4
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (30, 4)
TEST np.zeros((pad_dim,int(features)) (34, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (4, 4)
TEST np.zeros((pad_dim,int(features)) (60, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 44, 10, 4]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 5
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (44, 4)
TEST np.zeros((pad_dim,int(features)) (20, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (10, 4)
TEST np.zeros((pad_dim,int(features)) (54, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (4, 4)
TEST np.zeros((pad_dim,int(features)) (60, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 46, 10]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 4
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (46, 4)
TEST np.zeros((pad_dim,int(features)) (18, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (10, 4)
TEST np.zeros((pad_dim,int(features)) (54, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 46, 10, 2]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 5
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (46, 4)
TEST np.zeros((pad_dim,int(features)) (18, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (10, 4)
TEST np.zeros((pad_dim,int(features)) (54, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (2, 4)
TEST np.zeros((pad_dim,int(features)) (62, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 48, 12, 2]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 5
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (48, 4)
TEST np.zeros((pad_dim,int(features)) (16, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (12, 4)
TEST np.zeros((pad_dim,int(features)) (52, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (2, 4)
TEST np.zeros((pad_dim,int(features)) (62, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 40, 12]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 4
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (40, 4)
TEST np.zeros((pad_dim,int(features)) (24, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (12, 4)
TEST np.zeros((pad_dim,int(features)) (52, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 56, 10]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 4
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (56, 4)
TEST np.zeros((pad_dim,int(features)) (8, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (10, 4)
TEST np.zeros((pad_dim,int(features)) (54, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 38, 2]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 4
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (38, 4)
TEST np.zeros((pad_dim,int(features)) (26, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (2, 4)
TEST np.zeros((pad_dim,int(features)) (62, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 40, 12, 4, 2]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 6
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (40, 4)
TEST np.zeros((pad_dim,int(features)) (24, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (12, 4)
TEST np.zeros((pad_dim,int(features)) (52, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (4, 4)
TEST np.zeros((pad_dim,int(features)) (60, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (2, 4)
TEST np.zeros((pad_dim,int(features)) (62, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 38, 8]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 4
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (38, 4)
TEST np.zeros((pad_dim,int(features)) (26, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (8, 4)
TEST np.zeros((pad_dim,int(features)) (56, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 48, 4]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 4
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (48, 4)
TEST np.zeros((pad_dim,int(features)) (16, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (4, 4)
TEST np.zeros((pad_dim,int(features)) (60, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 42, 14]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 4
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (42, 4)
TEST np.zeros((pad_dim,int(features)) (22, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (14, 4)
TEST np.zeros((pad_dim,int(features)) (50, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 42, 14, 2]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 5
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (42, 4)
TEST np.zeros((pad_dim,int(features)) (22, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (14, 4)
TEST np.zeros((pad_dim,int(features)) (50, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (2, 4)
TEST np.zeros((pad_dim,int(features)) (62, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 42, 12, 2]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 5
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (42, 4)
TEST np.zeros((pad_dim,int(features)) (22, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (12, 4)
TEST np.zeros((pad_dim,int(features)) (52, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (2, 4)
TEST np.zeros((pad_dim,int(features)) (62, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 50, 14, 4]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 5
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (50, 4)
TEST np.zeros((pad_dim,int(features)) (14, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (14, 4)
TEST np.zeros((pad_dim,int(features)) (50, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (4, 4)
TEST np.zeros((pad_dim,int(features)) (60, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 44, 8, 2]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 5
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (44, 4)
TEST np.zeros((pad_dim,int(features)) (20, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (8, 4)
TEST np.zeros((pad_dim,int(features)) (56, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (2, 4)
TEST np.zeros((pad_dim,int(features)) (62, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 48, 10, 2]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 5
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (48, 4)
TEST np.zeros((pad_dim,int(features)) (16, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (10, 4)
TEST np.zeros((pad_dim,int(features)) (54, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (2, 4)
TEST np.zeros((pad_dim,int(features)) (62, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 44, 14, 4]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 5
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (44, 4)
TEST np.zeros((pad_dim,int(features)) (20, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (14, 4)
TEST np.zeros((pad_dim,int(features)) (50, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (4, 4)
TEST np.zeros((pad_dim,int(features)) (60, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 38, 12, 2]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 5
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (38, 4)
TEST np.zeros((pad_dim,int(features)) (26, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (12, 4)
TEST np.zeros((pad_dim,int(features)) (52, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (2, 4)
TEST np.zeros((pad_dim,int(features)) (62, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 44, 16, 2]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 5
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (44, 4)
TEST np.zeros((pad_dim,int(features)) (20, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (16, 4)
TEST np.zeros((pad_dim,int(features)) (48, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (2, 4)
TEST np.zeros((pad_dim,int(features)) (62, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 40, 14, 2]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 5
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (40, 4)
TEST np.zeros((pad_dim,int(features)) (24, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (14, 4)
TEST np.zeros((pad_dim,int(features)) (50, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (2, 4)
TEST np.zeros((pad_dim,int(features)) (62, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 40, 16, 2]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 5
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (40, 4)
TEST np.zeros((pad_dim,int(features)) (24, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (16, 4)
TEST np.zeros((pad_dim,int(features)) (48, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (2, 4)
TEST np.zeros((pad_dim,int(features)) (62, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 38, 14, 4]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 5
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (38, 4)
TEST np.zeros((pad_dim,int(features)) (26, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (14, 4)
TEST np.zeros((pad_dim,int(features)) (50, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (4, 4)
TEST np.zeros((pad_dim,int(features)) (60, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 40, 10]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 4
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (40, 4)
TEST np.zeros((pad_dim,int(features)) (24, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (10, 4)
TEST np.zeros((pad_dim,int(features)) (54, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 50, 12, 4]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 5
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (50, 4)
TEST np.zeros((pad_dim,int(features)) (14, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (12, 4)
TEST np.zeros((pad_dim,int(features)) (52, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (4, 4)
TEST np.zeros((pad_dim,int(features)) (60, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 52, 16, 2, 2]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 6
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (52, 4)
TEST np.zeros((pad_dim,int(features)) (12, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (16, 4)
TEST np.zeros((pad_dim,int(features)) (48, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (2, 4)
TEST np.zeros((pad_dim,int(features)) (62, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (2, 4)
TEST np.zeros((pad_dim,int(features)) (62, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 42, 20, 8]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 5
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (42, 4)
TEST np.zeros((pad_dim,int(features)) (22, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (20, 4)
TEST np.zeros((pad_dim,int(features)) (44, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (8, 4)
TEST np.zeros((pad_dim,int(features)) (56, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 42, 6, 2]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 5
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (42, 4)
TEST np.zeros((pad_dim,int(features)) (22, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (6, 4)
TEST np.zeros((pad_dim,int(features)) (58, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (2, 4)
TEST np.zeros((pad_dim,int(features)) (62, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 36, 6]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 4
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (36, 4)
TEST np.zeros((pad_dim,int(features)) (28, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (6, 4)
100%|█████████████████████████████████████████████████████████████████████| 37/37 [00:16<00:00,  2.18it/s, loss=0.690]
- Train metrics: accuracy: 0.5395 ; loss: 0.6914
--------------------------------------------------------------------------------
subjets per level= [32, 64, 48, 14, 2]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 5
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
///////////////////////////////////////////////////////////////////////////////////////////////--------------------------------------------------------------------------------
subjets per level= [32, 64, 44, 6, 2]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 5
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
/////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (44, 4)
--------------------------------------------------------------------------------
TEST np.zeros((pad_dim,int(features)) (20, 4)
max_n_level and len(levels[i])= 64 64
subjets per level= [32, 64, 42, 12]
TEST contents[i].shape= (48, 4)
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 4
TEST np.zeros((pad_dim,int(features)) (16, 4)
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (6, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
TEST np.zeros((pad_dim,int(features)) (58, 4)
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (1max_n_level= 64
4, 4)
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////////////////////////
TEST np.zeros((pad_dim,int(features)) (50, 4)
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (2, 4)
TEST np.zeros((pad_dim,int(features)) (62, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
max_n_level and len(levels[i])= 64 64
TEST np.zeros((pad_dim,int(features)) (0, 4)
TEST contents[i].shape= (2, 4)
TEST np.zeros((pad_dim,int(features)) (62, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (42, 4)
TEST np.zeros((pad_dim,int(features)) (22, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (12, 4)
TEST np.zeros((pad_dim,int(features)) (52, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 44, 10]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 4
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (44, 4)
--------------------------------------------------------------------------------
TEST np.zeros((pad_dim,int(features)) (20, 4)
subjets per level= [32, 64, 46, 16, 4, 4]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 6
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (10, 4)
TEST np.zeros((pad_dim,int(features)) (54, 4)
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((--------------------------------------------------------------------------------
pad_dim,int(features)) (32, 4)
subjets per level= [32, 64, 44, 6, 2]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 5
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (46, 4)
TEST np.zeros((pad_dim,int(features)) (18, 4)
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (16, 4)
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (48, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (4, 4)
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (60, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
max_n_level and len(levels[i])= 64 64
--------------------------------------------------------------------------------
TEST contents[i].shape= (44, 4)
TEST contents[i].shape= (4, 4)
subjets per level= [32, 64, 36, 10, 2, 2]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 6
--------------------------------------------------------------------------------
TEST np.zeros((pad_dim,int(features)) (60, 4)
TEST np.zeros((pad_dim,int(features)) (20, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (6, 4)
TEST np.zeros((pad_dim,int(features)) (58, 4)
max_n_level= 64
////////////////////////////////////////////////////////////////////////////////////////////////////
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (2, 4)
TEST np.zeros((pad_dim,int(features)) (62, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (36, 4)
TEST np.zeros((pad_dim,int(features)) (28, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (10, 4)
TEST np.zeros((pad_dim,int(features)) (54, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (2, 4)
TEST np.zeros((pad_dim,int(features)) (62, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (2, 4)
TEST np.zeros((pad_dim,int(features)) (62, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 48, 8]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 4
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (48, 4)
TEST np.zeros((pad_dim,int(features)) (16, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (8, 4)
TEST np.zeros((pad_dim,int(features)) (56, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 60, 18]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 4
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (60, 4)
TEST np.zeros((pad_dim,int(features)) (4, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (18, 4)
TEST np.zeros((pad_dim,int(features)) (46, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 50, 12, 2]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 5
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (50, 4)
TEST np.zeros((pad_dim,int(features)) (14, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (12, 4)
TEST np.zeros((pad_dim,int(features)) (52, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (2, 4)
TEST np.zeros((pad_dim,int(features)) (62, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 44, 8]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 4
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (44, 4)
TEST np.zeros((pad_dim,int(features)) (20, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (8, 4)
TEST np.zeros((pad_dim,int(features)) (56, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 50, 10]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 4
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (50, 4)
TEST np.zeros((pad_dim,int(features)) (14, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (10, 4)
TEST np.zeros((pad_dim,int(features)) (54, 4)
train.py:220: RuntimeWarning: divide by zero encountered in true_divide
  inv_fpr = interp(base_tpr, tpr, 1. / fpr)[125]
- Eval metrics : accuracy: 0.4844 ; loss: 0.7047
- Found new best bg rejection = 3.5454545454545454
Epoch 6/30
  0%|                                                                                          | 0/37 [00:00<?, ?it/s]

  3%|█▉                                                                    | 1/37 [00:16<09:43, 16.22s/it, loss=0.666]
--------------------------------------------------------------------------------
subjets per level= [32, 64, 46, 14, 2]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 5
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
subjets per level= [32, 64, 44, 10]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 4
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
////////////////////////////////////////////////////////////////////////////////////////////////////
TEST contents[i].shamax_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (46, 4)
TEST np.zeros((pad_dim,int(features)) (18, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (14, 4)
TEST np.zeros((pad_dim,int(features)) (50, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (2, 4)
TEST np.zeros((pad_dim,int(features)) (62, 4)
pe= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (44, 4)
TEST np.zeros((pad_dim,int(features)) (20, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (10, 4)
TEST np.zeros((pad_dim,int(features)) (54, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 42, 14]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 4
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (42, 4)
TEST np.zeros((pad_dim,int(features)) (22, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (14, 4)
TEST np.zeros((pad_dim,int(features)) (50, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 44, 12]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 4
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (44, 4)
TEST np.zeros((pad_dim,int(features)) (20, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (12, 4)
TEST np.zeros((pad_dim,int(features)) (52, 4)
subjets per level= [32, 64, 40, 12, 4]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 5
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (40, 4)
TEST np.zeros((pad_dim,int(features)) (24, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (12, 4)
TEST np.zeros((pad_dim,int(features)) (52, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (4, 4)
TEST np.zeros((pad_dim,int(features)) (60, 4)
subjets per level= [32, 64, 44, 10]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 4
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (44, 4)
TEST np.zeros((pad_dim,int(features)) (20, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (10, 4)
TEST np.zeros((pad_dim,int(features)) (54, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 44, 10, 2]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 5
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (44, 4)
TEST np.zeros((pad_dim,int(features)) (20, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (10, 4)
TEST np.zeros((pad_dim,int(features)) (54, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (2, 4)
TEST np.zeros((pad_dim,int(features)) (62, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 36, 6, 2]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 5
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (36, 4)
TEST np.zeros((pad_dim,int(features)) (28, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (6, 4)
TEST np.zeros((pad_dim,int(features)) (58, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (2, 4)
TEST np.zeros((pad_dim,int(features)) (62, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 30, 4]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 4
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (30, 4)
TEST np.zeros((pad_dim,int(features)) (34, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (4, 4)
TEST np.zeros((pad_dim,int(features)) (60, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 44, 10, 4]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 5
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (44, 4)
TEST np.zeros((pad_dim,int(features)) (20, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (10, 4)
TEST np.zeros((pad_dim,int(features)) (54, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (4, 4)
TEST np.zeros((pad_dim,int(features)) (60, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 46, 10]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 4
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (46, 4)
TEST np.zeros((pad_dim,int(features)) (18, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (10, 4)
TEST np.zeros((pad_dim,int(features)) (54, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 46, 10, 2]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 5
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (46, 4)
TEST np.zeros((pad_dim,int(features)) (18, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (10, 4)
TEST np.zeros((pad_dim,int(features)) (54, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (2, 4)
TEST np.zeros((pad_dim,int(features)) (62, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 48, 12, 2]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 5
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (48, 4)
TEST np.zeros((pad_dim,int(features)) (16, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (12, 4)
TEST np.zeros((pad_dim,int(features)) (52, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (2, 4)
TEST np.zeros((pad_dim,int(features)) (62, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 40, 12]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 4
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (40, 4)
TEST np.zeros((pad_dim,int(features)) (24, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (12, 4)
TEST np.zeros((pad_dim,int(features)) (52, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 56, 10]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 4
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (56, 4)
TEST np.zeros((pad_dim,int(features)) (8, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (10, 4)
TEST np.zeros((pad_dim,int(features)) (54, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 38, 2]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 4
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (38, 4)
TEST np.zeros((pad_dim,int(features)) (26, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (2, 4)
TEST np.zeros((pad_dim,int(features)) (62, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 40, 12, 4, 2]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 6
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (40, 4)
TEST np.zeros((pad_dim,int(features)) (24, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (12, 4)
TEST np.zeros((pad_dim,int(features)) (52, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (4, 4)
TEST np.zeros((pad_dim,int(features)) (60, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (2, 4)
TEST np.zeros((pad_dim,int(features)) (62, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 38, 8]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 4
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (38, 4)
TEST np.zeros((pad_dim,int(features)) (26, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (8, 4)
TEST np.zeros((pad_dim,int(features)) (56, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 48, 4]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 4
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (48, 4)
TEST np.zeros((pad_dim,int(features)) (16, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (4, 4)
TEST np.zeros((pad_dim,int(features)) (60, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 42, 14]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 4
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (42, 4)
TEST np.zeros((pad_dim,int(features)) (22, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (14, 4)
TEST np.zeros((pad_dim,int(features)) (50, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 42, 14, 2]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 5
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (42, 4)
TEST np.zeros((pad_dim,int(features)) (22, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (14, 4)
TEST np.zeros((pad_dim,int(features)) (50, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (2, 4)
TEST np.zeros((pad_dim,int(features)) (62, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 42, 12, 2]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 5
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (42, 4)
TEST np.zeros((pad_dim,int(features)) (22, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (12, 4)
TEST np.zeros((pad_dim,int(features)) (52, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (2, 4)
TEST np.zeros((pad_dim,int(features)) (62, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 50, 14, 4]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 5
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (50, 4)
TEST np.zeros((pad_dim,int(features)) (14, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (14, 4)
TEST np.zeros((pad_dim,int(features)) (50, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (4, 4)
TEST np.zeros((pad_dim,int(features)) (60, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 44, 8, 2]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 5
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (44, 4)
TEST np.zeros((pad_dim,int(features)) (20, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (8, 4)
TEST np.zeros((pad_dim,int(features)) (56, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (2, 4)
TEST np.zeros((pad_dim,int(features)) (62, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 48, 10, 2]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 5
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (48, 4)
TEST np.zeros((pad_dim,int(features)) (16, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (10, 4)
TEST np.zeros((pad_dim,int(features)) (54, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (2, 4)
TEST np.zeros((pad_dim,int(features)) (62, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 44, 14, 4]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 5
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (44, 4)
TEST np.zeros((pad_dim,int(features)) (20, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (14, 4)
TEST np.zeros((pad_dim,int(features)) (50, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (4, 4)
TEST np.zeros((pad_dim,int(features)) (60, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 38, 12, 2]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 5
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (38, 4)
TEST np.zeros((pad_dim,int(features)) (26, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (12, 4)
TEST np.zeros((pad_dim,int(features)) (52, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (2, 4)
TEST np.zeros((pad_dim,int(features)) (62, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 44, 16, 2]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 5
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (44, 4)
TEST np.zeros((pad_dim,int(features)) (20, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (16, 4)
TEST np.zeros((pad_dim,int(features)) (48, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (2, 4)
TEST np.zeros((pad_dim,int(features)) (62, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 40, 14, 2]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 5
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (40, 4)
TEST np.zeros((pad_dim,int(features)) (24, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (14, 4)
TEST np.zeros((pad_dim,int(features)) (50, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (2, 4)
TEST np.zeros((pad_dim,int(features)) (62, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 40, 16, 2]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 5
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (40, 4)
TEST np.zeros((pad_dim,int(features)) (24, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (16, 4)
TEST np.zeros((pad_dim,int(features)) (48, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (2, 4)
TEST np.zeros((pad_dim,int(features)) (62, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 38, 14, 4]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 5
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (38, 4)
TEST np.zeros((pad_dim,int(features)) (26, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (14, 4)
TEST np.zeros((pad_dim,int(features)) (50, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (4, 4)
TEST np.zeros((pad_dim,int(features)) (60, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 40, 10]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 4
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (40, 4)
TEST np.zeros((pad_dim,int(features)) (24, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (10, 4)
TEST np.zeros((pad_dim,int(features)) (54, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 50, 12, 4]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 5
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (50, 4)
TEST np.zeros((pad_dim,int(features)) (14, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (12, 4)
TEST np.zeros((pad_dim,int(features)) (52, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (4, 4)
TEST np.zeros((pad_dim,int(features)) (60, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 52, 16, 2, 2]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 6
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (52, 4)
TEST np.zeros((pad_dim,int(features)) (12, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (16, 4)
TEST np.zeros((pad_dim,int(features)) (48, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (2, 4)
TEST np.zeros((pad_dim,int(features)) (62, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (2, 4)
TEST np.zeros((pad_dim,int(features)) (62, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 42, 20, 8]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 5
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (42, 4)
TEST np.zeros((pad_dim,int(features)) (22, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (20, 4)
TEST np.zeros((pad_dim,int(features)) (44, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (8, 4)
TEST np.zeros((pad_dim,int(features)) (56, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 42, 6, 2]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 5
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (42, 4)
TEST np.zeros((pad_dim,int(features)) (22, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (6, 4)
TEST np.zeros((pad_dim,int(features)) (58, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (2, 4)
TEST np.zeros((pad_dim,int(features)) (62, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 36, 6]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 4
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (36, 4)
TEST np.zeros((pad_dim,int(features)) (28, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (6, 4)
100%|█████████████████████████████████████████████████████████████████████| 37/37 [00:16<00:00,  2.24it/s, loss=0.690]
- Train metrics: accuracy: 0.5428 ; loss: 0.6897
train.py:220: RuntimeWarning: divide by zero encountered in true_divide
  inv_fpr = interp(base_tpr, tpr, 1. / fpr)[125]
- Eval metrics : accuracy: 0.4922 ; loss: 0.7021
--------------------------------------------------------------------------------
subjets per level= [32, 64, 44, 6, 2]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 5
subjets per level= [32, 64, 48, 14, 2]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 5
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
subjets per level= [32, 64, 42, 12]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 4
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
max_n_level= 64
////////////////////////////////////////////////////////////////////////////////////////////////////
--------------------------------------------------------------------------------
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (48, 4)
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (16, 4)
max_n_level and len(levels[i])= 64 64
TEST np.zeros((pad_dim,int(features)) (32, 4)
TEST contents[i].shape= (44, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST np.zeros((pad_dim,int(features)) (20, 4)
TEST contents[i].shape= (14, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST np.zeros((pad_dim,int(features)) (50, 4)
TEST contents[i].shape= (64, 4)
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (6, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
TEST np.zeros((pad_dim,int(features)) (58, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
////////////////////////////////////////////////////////////////////////////////////////////////////
TEST contents[i].shape= (42, 4)
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (2, 4)
TEST np.zeros((pad_dim,int(features)) (22, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
TEST np.zeros((pad_dim,int(features)) (62, 4)
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (2, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (12, 4)
TEST np.zeros((pad_dim,int(features)) (52, 4)
TEST np.zeros((pad_dim,int(features)) (62, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 46, 16, 4, 4]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 6
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (46, 4)
TEST np.zeros((pad_dim,int(features)) (18, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (16, 4)
TEST np.zeros((pad_dim,int(features)) (48, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (4, 4)
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
subjets per level= [32, 64, 44, 6, 2]
TEST np.zeros((pad_dim,int(features)) (60, 4)
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
subjets per level= [32, 64, 44, 10]
Number of levels= 5
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 4
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level= 64
max_n_level= 64
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (4, 4)
TEST np.zeros((pad_dim,int(features)) (60, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (44, 4)
TEST np.zeros((pad_dim,int(features)) (20, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (6, 4)
TEST np.zeros((pad_dim,int(features)) (58, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (2, 4)
TEST np.zeros((pad_dim,int(features)) (62, 4)
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (44, 4)
TEST np.zeros((pad_dim,int(features)) (20, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (10, 4)
TEST np.zeros((pad_dim,int(features)) (54, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 36, 10, 2, 2]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 6
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (36, 4)
TEST np.zeros((pad_dim,int(features)) (28, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (10, 4)
TEST np.zeros((pad_dim,int(features)) (54, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (2, 4)
TEST np.zeros((pad_dim,int(features)) (62, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (2, 4)
TEST np.zeros((pad_dim,int(features)) (62, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 48, 8]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 4
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (48, 4)
TEST np.zeros((pad_dim,int(features)) (16, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (8, 4)
TEST np.zeros((pad_dim,int(features)) (56, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 60, 18]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 4
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (60, 4)
TEST np.zeros((pad_dim,int(features)) (4, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (18, 4)
TEST np.zeros((pad_dim,int(features)) (46, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 50, 12, 2]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 5
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (50, 4)
TEST np.zeros((pad_dim,int(features)) (14, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (12, 4)
TEST np.zeros((pad_dim,int(features)) (52, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (2, 4)
TEST np.zeros((pad_dim,int(features)) (62, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 44, 8]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 4
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (44, 4)
TEST np.zeros((pad_dim,int(features)) (20, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (8, 4)
TEST np.zeros((pad_dim,int(features)) (56, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 50, 10]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 4
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (50, 4)
TEST np.zeros((pad_dim,int(features)) (14, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (10, 4)
TEST np.zeros((pad_dim,int(features)) (54, 4)
Checkpoint Directory exists!
- Found new best bg rejection = 3.8235294117647056
Epoch 7/30
  0%|                                                                                          | 0/37 [00:00<?, ?it/s]
--------------------------------------------------------------------------------
subjets per level= [32, 64, 46, 14, 2]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 5
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (46, 4)
TEST np.zeros((pad_dim,int(features)) (18, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (14, 4)
TEST np.zeros((pad_dim,int(features)) (50, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (2, 4)
TEST np.zeros((pad_dim,int(features)) (62, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 44, 10]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 4
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (44, 4)
TEST np.zeros((pad_dim,int(features)) (20, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (10, 4)
TEST np.zeros((pad_dim,int(features)) (54, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 42, 14]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 4
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (42, 4)
TEST np.zeros((pad_dim,int(features)) (22, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (14, 4)
TEST np.zeros((pad_dim,int(features)) (50, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 40, 12, 4]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 5
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
subjets per level= [32, 64, 44, 10]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 4
////////////////////////////////////////////////////////////////////////////////////////////////////
--------------------------------------------------------------------------------
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level= 64
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
subjets per level= [32, 64, 44, 12]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 4
--------------------------------------------------------------------------------
max_n_level and len(levels[i])= 64 64
////////////////////////////////////////////////////////////////////////////////////////////////////
TEST contents[i].shape= (64, 4)
max_n_level and len(levels[i])= 64 64
TEST np.zeros((pad_dim,int(features)) (0, 4)
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (40, 4)
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (24, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (12, 4)
TEST np.zeros((pad_dim,int(features)) (52, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (4, 4)
TEST np.zeros((pad_dim,int(features)) (60, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
TEST np.zeros((pad_dim,int(features)) (0, 4)
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (44, 4)
TEST np.zeros((pad_dim,int(features)) (20, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (10, 4)
max_n_level and len(levels[i])= 64 64
TEST np.zeros((pad_dim,int(features)) (54, 4)
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64

 35%|████████████████████████▏                                            | 13/37 [00:18<00:24,  1.03s/it, loss=0.689]
TEST np.zeros((pad_dim,int(features)) (20, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (12, 4)
TEST np.zeros((pad_dim,int(features)) (52, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 44, 10, 2]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 5
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (44, 4)
TEST np.zeros((pad_dim,int(features)) (20, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (10, 4)
TEST np.zeros((pad_dim,int(features)) (54, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (2, 4)
TEST np.zeros((pad_dim,int(features)) (62, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 36, 6, 2]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 5
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (36, 4)
TEST np.zeros((pad_dim,int(features)) (28, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (6, 4)
TEST np.zeros((pad_dim,int(features)) (58, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (2, 4)
TEST np.zeros((pad_dim,int(features)) (62, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 30, 4]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 4
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (30, 4)
TEST np.zeros((pad_dim,int(features)) (34, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (4, 4)
TEST np.zeros((pad_dim,int(features)) (60, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 44, 10, 4]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 5
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (44, 4)
TEST np.zeros((pad_dim,int(features)) (20, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (10, 4)
TEST np.zeros((pad_dim,int(features)) (54, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (4, 4)
TEST np.zeros((pad_dim,int(features)) (60, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 46, 10]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 4
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (46, 4)
TEST np.zeros((pad_dim,int(features)) (18, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (10, 4)
TEST np.zeros((pad_dim,int(features)) (54, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 46, 10, 2]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 5
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (46, 4)
TEST np.zeros((pad_dim,int(features)) (18, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (10, 4)
TEST np.zeros((pad_dim,int(features)) (54, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (2, 4)
TEST np.zeros((pad_dim,int(features)) (62, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 48, 12, 2]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 5
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (48, 4)
TEST np.zeros((pad_dim,int(features)) (16, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (12, 4)
TEST np.zeros((pad_dim,int(features)) (52, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (2, 4)
TEST np.zeros((pad_dim,int(features)) (62, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 40, 12]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 4
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (40, 4)
TEST np.zeros((pad_dim,int(features)) (24, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (12, 4)
TEST np.zeros((pad_dim,int(features)) (52, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 56, 10]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 4
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (56, 4)
TEST np.zeros((pad_dim,int(features)) (8, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (10, 4)
TEST np.zeros((pad_dim,int(features)) (54, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 38, 2]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 4
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (38, 4)
TEST np.zeros((pad_dim,int(features)) (26, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (2, 4)
TEST np.zeros((pad_dim,int(features)) (62, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 40, 12, 4, 2]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 6
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (40, 4)
TEST np.zeros((pad_dim,int(features)) (24, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (12, 4)
TEST np.zeros((pad_dim,int(features)) (52, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (4, 4)
TEST np.zeros((pad_dim,int(features)) (60, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (2, 4)
TEST np.zeros((pad_dim,int(features)) (62, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 38, 8]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 4
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (38, 4)
TEST np.zeros((pad_dim,int(features)) (26, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (8, 4)
TEST np.zeros((pad_dim,int(features)) (56, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 48, 4]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 4
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (48, 4)
TEST np.zeros((pad_dim,int(features)) (16, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (4, 4)
TEST np.zeros((pad_dim,int(features)) (60, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 42, 14]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 4
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (42, 4)
TEST np.zeros((pad_dim,int(features)) (22, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (14, 4)
TEST np.zeros((pad_dim,int(features)) (50, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 42, 14, 2]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 5
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (42, 4)
TEST np.zeros((pad_dim,int(features)) (22, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (14, 4)
TEST np.zeros((pad_dim,int(features)) (50, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (2, 4)
TEST np.zeros((pad_dim,int(features)) (62, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 42, 12, 2]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 5
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (42, 4)
TEST np.zeros((pad_dim,int(features)) (22, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (12, 4)
TEST np.zeros((pad_dim,int(features)) (52, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (2, 4)
TEST np.zeros((pad_dim,int(features)) (62, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 50, 14, 4]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 5
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (50, 4)
TEST np.zeros((pad_dim,int(features)) (14, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (14, 4)
TEST np.zeros((pad_dim,int(features)) (50, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (4, 4)
TEST np.zeros((pad_dim,int(features)) (60, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 44, 8, 2]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 5
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (44, 4)
TEST np.zeros((pad_dim,int(features)) (20, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (8, 4)
TEST np.zeros((pad_dim,int(features)) (56, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (2, 4)
TEST np.zeros((pad_dim,int(features)) (62, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 48, 10, 2]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 5
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (48, 4)
TEST np.zeros((pad_dim,int(features)) (16, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (10, 4)
TEST np.zeros((pad_dim,int(features)) (54, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (2, 4)
TEST np.zeros((pad_dim,int(features)) (62, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 44, 14, 4]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 5
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (44, 4)
TEST np.zeros((pad_dim,int(features)) (20, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (14, 4)
TEST np.zeros((pad_dim,int(features)) (50, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (4, 4)
TEST np.zeros((pad_dim,int(features)) (60, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 38, 12, 2]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 5
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (38, 4)
TEST np.zeros((pad_dim,int(features)) (26, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (12, 4)
TEST np.zeros((pad_dim,int(features)) (52, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (2, 4)
TEST np.zeros((pad_dim,int(features)) (62, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 44, 16, 2]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 5
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (44, 4)
TEST np.zeros((pad_dim,int(features)) (20, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (16, 4)
TEST np.zeros((pad_dim,int(features)) (48, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (2, 4)
TEST np.zeros((pad_dim,int(features)) (62, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 40, 14, 2]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 5
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (40, 4)
TEST np.zeros((pad_dim,int(features)) (24, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (14, 4)
TEST np.zeros((pad_dim,int(features)) (50, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (2, 4)
TEST np.zeros((pad_dim,int(features)) (62, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 40, 16, 2]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 5
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (40, 4)
TEST np.zeros((pad_dim,int(features)) (24, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (16, 4)
TEST np.zeros((pad_dim,int(features)) (48, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (2, 4)
TEST np.zeros((pad_dim,int(features)) (62, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 38, 14, 4]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 5
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (38, 4)
TEST np.zeros((pad_dim,int(features)) (26, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (14, 4)
TEST np.zeros((pad_dim,int(features)) (50, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (4, 4)
TEST np.zeros((pad_dim,int(features)) (60, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 40, 10]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 4
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (40, 4)
TEST np.zeros((pad_dim,int(features)) (24, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (10, 4)
TEST np.zeros((pad_dim,int(features)) (54, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 50, 12, 4]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 5
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (50, 4)
TEST np.zeros((pad_dim,int(features)) (14, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (12, 4)
TEST np.zeros((pad_dim,int(features)) (52, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (4, 4)
TEST np.zeros((pad_dim,int(features)) (60, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 52, 16, 2, 2]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 6
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (52, 4)
TEST np.zeros((pad_dim,int(features)) (12, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (16, 4)
TEST np.zeros((pad_dim,int(features)) (48, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (2, 4)
TEST np.zeros((pad_dim,int(features)) (62, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (2, 4)
TEST np.zeros((pad_dim,int(features)) (62, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 42, 20, 8]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 5
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (42, 4)
TEST np.zeros((pad_dim,int(features)) (22, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (20, 4)
TEST np.zeros((pad_dim,int(features)) (44, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (8, 4)
TEST np.zeros((pad_dim,int(features)) (56, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 42, 6, 2]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 5
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (42, 4)
TEST np.zeros((pad_dim,int(features)) (22, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (6, 4)
TEST np.zeros((pad_dim,int(features)) (58, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (2, 4)
TEST np.zeros((pad_dim,int(features)) (62, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 36, 6]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 4
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (36, 4)
TEST np.zeros((pad_dim,int(features)) (28, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (6, 4)
100%|█████████████████████████████████████████████████████████████████████| 37/37 [00:19<00:00,  1.93it/s, loss=0.688]
- Train metrics: accuracy: 0.5395 ; loss: 0.6867
--------------------------------------------------------------------------------
subjets per level= [32, 64, 48, 14, 2]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 5
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (48, 4)
TEST np.zeros((pad_dim,int(features)) (16, 4)
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
subjets per level= [32, 64, 44, 6, 2]
--------------------------------------------------------------------------------
max_n_level and len(levels[i])= 64 64
--------------------------------------------------------------------------------
TEST contents[i].shape= (14, 4)
Number of levels= 5
--------------------------------------------------------------------------------
TEST np.zeros((pad_di--------------------------------------------------------------------------------
m,int(features)) (50, 4)
subjets per level= [32, 64, 42, 12]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 4
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (2, 4)
TEST np.zeros((pad_dim,int(features)) (62, 4)
max_n_level= 64
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
TEST np.zeros((pad_dim,int(features)) (0, 4)
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (42, 4)
TEST np.zeros((pad_dim,int(features)) (22, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (44, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST np.zeros((pad_dim,int(features)) (20, 4)
TEST contents[i].shape= (12, 4)
TEST np.zeros((pad_dim,int(features)) (52, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (6, 4)
TEST np.zeros((pad_dim,int(features)) (58, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (2, 4)
TEST np.zeros((pad_dim,int(features)) (62, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 44, 6, 2]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 5
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (44, 4)
TEST np.zeros((pad_dim,int(features)) (20, 4)
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
subjets per level= [32, 64, 44, 10]
subjets per level= [32, 64, 46, 16, 4, 4]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 4
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (6, 4)
TEST np.zeros((pad_dim,int(features)) (58, 4)
max_n_level= 64
---------------------------------------------------------------------////////////////////////////////////////////////////////////////////////////////////////////////////
-----------
Number of levels= 6
max_n_level and len(levels[i])= 64 64
--------------------------------------------------------------------------------
TEST contents[i].shape= (2, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
TEST np.zeros((pad_dim,int(features)) (62, 4)
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dTEST np.zeros((pad_dim,int(features)) (32, 4)
im,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
TEST np.zeros((pad_dim,int(features)) (0, 4)
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (44, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
TEST np.zeros((pad_dim,int(features)) (20, 4)
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (46, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
TEST np.zeros((pad_dim,int(features)) (18, 4)
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (10, 4)
TEST np.zeros((pad_dim,int(features)) (54, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (16, 4)
TEST np.zeros((pad_dim,int(features)) (48, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (4, 4)
TEST np.zeros((pad_dim,int(features)) (60, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (4, 4)
TEST np.zeros((pad_dim,int(features)) (60, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 36, 10, 2, 2]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 6
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (36, 4)
TEST np.zeros((pad_dim,int(features)) (28, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (10, 4)
TEST np.zeros((pad_dim,int(features)) (54, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (2, 4)
TEST np.zeros((pad_dim,int(features)) (62, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (2, 4)
TEST np.zeros((pad_dim,int(features)) (62, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 48, 8]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 4
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (48, 4)
TEST np.zeros((pad_dim,int(features)) (16, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (8, 4)
TEST np.zeros((pad_dim,int(features)) (56, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 60, 18]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 4
train.py:220: RuntimeWarning: divide by zero encountered in true_divide
  inv_fpr = interp(base_tpr, tpr, 1. / fpr)[125]
- Eval metrics : accuracy: 0.4922 ; loss: 0.7013
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (60, 4)
TEST np.zeros((pad_dim,int(features)) (4, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (18, 4)
TEST np.zeros((pad_dim,int(features)) (46, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 50, 12, 2]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 5
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (50, 4)
TEST np.zeros((pad_dim,int(features)) (14, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (12, 4)
TEST np.zeros((pad_dim,int(features)) (52, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (2, 4)
TEST np.zeros((pad_dim,int(features)) (62, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 44, 8]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 4
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (44, 4)
TEST np.zeros((pad_dim,int(features)) (20, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (8, 4)
TEST np.zeros((pad_dim,int(features)) (56, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 50, 10]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 4
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (50, 4)
TEST np.zeros((pad_dim,int(features)) (14, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (10, 4)
TEST np.zeros((pad_dim,int(features)) (54, 4)
Checkpoint Directory exists!
- Found new best bg rejection = 4.148936170212766
Epoch 8/30
100%|█████████████████████████████████████████████████████████████████████| 37/37 [00:24<00:00,  1.48it/s, loss=0.687]
- Train metrics: accuracy: 0.5493 ; loss: 0.6845
--------------------------------------------------------------------------------
subjets per level= [32, 64, 46, 14, 2]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 5
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
///////////////////////////////////////////////////////////////////////////////////////////////--------------------------------------------------------------------------------
subjets per level= [32, 64, 42, 14]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 4
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
/////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (46, 4)
TEST np.zeros((pad_dim,int(features)) (18, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (14, 4)
TEST np.zeros((pad_dim,int(features)) (50, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (2, 4)
TEST np.zeros((pad_dim,int(features)) (62, 4)
--------------------------------------------------------------------------------
TEST contents[i].shape= (42, 4)
TEST np.zeros((pad_dim,int(features)) (22, 4)
subjets per level= [32, 64, 44, 10]
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
--------------------------------------------------------------------------------
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (14, 4)
TEST np.zeros((pad_dim,int(features)) (50, 4)
Number of levels= 4
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (44, 4)
TEST np.zeros((pad_dim,int(features)) (20, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (10, 4)
TEST np.zeros((pad_dim,int(features)) (54, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 44, 12]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 4
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (44, 4)
TEST np.zeros((pad_dim,int(features)) (20, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (12, 4)
TEST np.zeros((pad_dim,int(features)) (52, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 40, 12, 4]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 5
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (40, 4)
TEST np.zeros((pad_dim,int(features)) (24, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (12, 4)
TEST np.zeros((pad_dim,int(features)) (52, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (4, 4)
TEST np.zeros((pad_dim,int(features)) (60, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 44, 10]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 4
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (44, 4)
TEST np.zeros((pad_dim,int(features)) (20, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (10, 4)
TEST np.zeros((pad_dim,int(features)) (54, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 44, 10, 2]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 5
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (44, 4)
TEST np.zeros((pad_dim,int(features)) (20, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (10, 4)
TEST np.zeros((pad_dim,int(features)) (54, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (2, 4)
TEST np.zeros((pad_dim,int(features)) (62, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 36, 6, 2]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 5
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (36, 4)
TEST np.zeros((pad_dim,int(features)) (28, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (6, 4)
TEST np.zeros((pad_dim,int(features)) (58, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (2, 4)
TEST np.zeros((pad_dim,int(features)) (62, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 30, 4]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 4
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (30, 4)
TEST np.zeros((pad_dim,int(features)) (34, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (4, 4)
TEST np.zeros((pad_dim,int(features)) (60, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 44, 10, 4]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 5
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (44, 4)
TEST np.zeros((pad_dim,int(features)) (20, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (10, 4)
TEST np.zeros((pad_dim,int(features)) (54, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (4, 4)
TEST np.zeros((pad_dim,int(features)) (60, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 46, 10]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 4
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (46, 4)
TEST np.zeros((pad_dim,int(features)) (18, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (10, 4)
TEST np.zeros((pad_dim,int(features)) (54, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 46, 10, 2]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 5
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (46, 4)
TEST np.zeros((pad_dim,int(features)) (18, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (10, 4)
TEST np.zeros((pad_dim,int(features)) (54, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (2, 4)
TEST np.zeros((pad_dim,int(features)) (62, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 48, 12, 2]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 5
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (48, 4)
TEST np.zeros((pad_dim,int(features)) (16, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (12, 4)
TEST np.zeros((pad_dim,int(features)) (52, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (2, 4)
TEST np.zeros((pad_dim,int(features)) (62, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 40, 12]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 4
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (40, 4)
TEST np.zeros((pad_dim,int(features)) (24, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (12, 4)
TEST np.zeros((pad_dim,int(features)) (52, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 56, 10]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 4
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (56, 4)
TEST np.zeros((pad_dim,int(features)) (8, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (10, 4)
TEST np.zeros((pad_dim,int(features)) (54, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 38, 2]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 4
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (38, 4)
TEST np.zeros((pad_dim,int(features)) (26, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (2, 4)
TEST np.zeros((pad_dim,int(features)) (62, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 40, 12, 4, 2]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 6
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (40, 4)
TEST np.zeros((pad_dim,int(features)) (24, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (12, 4)
TEST np.zeros((pad_dim,int(features)) (52, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (4, 4)
TEST np.zeros((pad_dim,int(features)) (60, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (2, 4)
TEST np.zeros((pad_dim,int(features)) (62, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 38, 8]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 4
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (38, 4)
TEST np.zeros((pad_dim,int(features)) (26, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (8, 4)
TEST np.zeros((pad_dim,int(features)) (56, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 48, 4]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 4
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (48, 4)
TEST np.zeros((pad_dim,int(features)) (16, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (4, 4)
TEST np.zeros((pad_dim,int(features)) (60, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 42, 14]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 4
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (42, 4)
TEST np.zeros((pad_dim,int(features)) (22, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (14, 4)
TEST np.zeros((pad_dim,int(features)) (50, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 42, 14, 2]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 5
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (42, 4)
TEST np.zeros((pad_dim,int(features)) (22, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (14, 4)
TEST np.zeros((pad_dim,int(features)) (50, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (2, 4)
TEST np.zeros((pad_dim,int(features)) (62, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 42, 12, 2]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 5
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (42, 4)
TEST np.zeros((pad_dim,int(features)) (22, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (12, 4)
TEST np.zeros((pad_dim,int(features)) (52, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (2, 4)
TEST np.zeros((pad_dim,int(features)) (62, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 50, 14, 4]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 5
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (50, 4)
TEST np.zeros((pad_dim,int(features)) (14, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (14, 4)
TEST np.zeros((pad_dim,int(features)) (50, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (4, 4)
TEST np.zeros((pad_dim,int(features)) (60, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 44, 8, 2]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 5
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (44, 4)
TEST np.zeros((pad_dim,int(features)) (20, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (8, 4)
TEST np.zeros((pad_dim,int(features)) (56, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (2, 4)
TEST np.zeros((pad_dim,int(features)) (62, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 48, 10, 2]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 5
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (48, 4)
TEST np.zeros((pad_dim,int(features)) (16, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (10, 4)
TEST np.zeros((pad_dim,int(features)) (54, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (2, 4)
TEST np.zeros((pad_dim,int(features)) (62, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 44, 14, 4]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 5
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (44, 4)
TEST np.zeros((pad_dim,int(features)) (20, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (14, 4)
TEST np.zeros((pad_dim,int(features)) (50, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (4, 4)
TEST np.zeros((pad_dim,int(features)) (60, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 38, 12, 2]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 5
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (38, 4)
TEST np.zeros((pad_dim,int(features)) (26, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (12, 4)
TEST np.zeros((pad_dim,int(features)) (52, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (2, 4)
TEST np.zeros((pad_dim,int(features)) (62, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 44, 16, 2]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 5
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (44, 4)
TEST np.zeros((pad_dim,int(features)) (20, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (16, 4)
TEST np.zeros((pad_dim,int(features)) (48, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (2, 4)
TEST np.zeros((pad_dim,int(features)) (62, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 40, 14, 2]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 5
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (40, 4)
TEST np.zeros((pad_dim,int(features)) (24, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (14, 4)
TEST np.zeros((pad_dim,int(features)) (50, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (2, 4)
TEST np.zeros((pad_dim,int(features)) (62, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 40, 16, 2]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 5
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (40, 4)
TEST np.zeros((pad_dim,int(features)) (24, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (16, 4)
TEST np.zeros((pad_dim,int(features)) (48, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (2, 4)
TEST np.zeros((pad_dim,int(features)) (62, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 38, 14, 4]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 5
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (38, 4)
TEST np.zeros((pad_dim,int(features)) (26, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (14, 4)
TEST np.zeros((pad_dim,int(features)) (50, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (4, 4)
TEST np.zeros((pad_dim,int(features)) (60, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 40, 10]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 4
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (40, 4)
TEST np.zeros((pad_dim,int(features)) (24, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (10, 4)
TEST np.zeros((pad_dim,int(features)) (54, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 50, 12, 4]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 5
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (50, 4)
TEST np.zeros((pad_dim,int(features)) (14, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (12, 4)
TEST np.zeros((pad_dim,int(features)) (52, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (4, 4)
TEST np.zeros((pad_dim,int(features)) (60, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 52, 16, 2, 2]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 6
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (52, 4)
TEST np.zeros((pad_dim,int(features)) (12, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (16, 4)
TEST np.zeros((pad_dim,int(features)) (48, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (2, 4)
TEST np.zeros((pad_dim,int(features)) (62, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (2, 4)
TEST np.zeros((pad_dim,int(features)) (62, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 42, 20, 8]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 5
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (42, 4)
TEST np.zeros((pad_dim,int(features)) (22, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (20, 4)
TEST np.zeros((pad_dim,int(features)) (44, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (8, 4)
TEST np.zeros((pad_dim,int(features)) (56, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 42, 6, 2]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 5
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (42, 4)
TEST np.zeros((pad_dim,int(features)) (22, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (6, 4)
TEST np.zeros((pad_dim,int(features)) (58, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (2, 4)
TEST np.zeros((pad_dim,int(features)) (62, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 36, 6]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 4
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (36, 4)
TEST np.zeros((pad_dim,int(features)) (28, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (6, 4)
TEST np.zeros((pad_dim,int(features)) (58, 4)
train.py:220: RuntimeWarning: divide by zero encountered in true_divide
  inv_fpr = interp(base_tpr, tpr, 1. / fpr)[125]
- Eval metrics : accuracy: 0.4974 ; loss: 0.6998
--------------------------------------------------------------------------------
subjets per level= [32, 64, 48, 14, 2]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 5
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (48, 4)
TEST np.zeros((pad_dim,int(features)) (16, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (14, 4)
TEST np.zeros((pad_dim,int(features)) (50, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
--------------------------------------------------------------------------------
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (2, 4)
subjets per level= [32, 64, 44, 6, 2]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 5
--------------------------------------------------------------------------------
TEST np.zeros((pad_dim,int(features)) (62, 4)
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
subjets per level= [32, 64, 42, 12]
max_n_level and len(levels[i])= 64 64
--------------------------------------------------------------------------------
TEST contents[i].shape= (64, 4)
------------------------------------TEST np.zeros((pad_dim,int(features)) (0, 4)
--------------------------------------------
Number of levels= 4
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (44, 4)
TEST np.zeros((pad_dim,int(features)) (20, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (6, 4)
TEST np.zeros((pad_dim,int(features)) (58, 4)
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (2, 4)
TEST np.zeros((pad_dim,int(features)) (62, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (42, 4)
TEST np.zeros((pad_dim,int(features)) (22, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (12, 4)
TEST np.zeros((pad_dim,int(features)) (52, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 44, 10]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 4
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
//////////////////////////////////////////////////////////////////////////////////////////////////--------------------------------------------------------------------------------
subjets per level= [32, 64, 46, 16, 4, 4]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 6
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
//
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (44, 4)
TEST np.zeros((pad_dim,int(features)) (20, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
////////////////////////////////////////////////////////////////////////////////////////////////////
TEST contents[i].shape= (32, 4)
max_n_level and len(levels[i])= 64 64
TEST np.zeros((pad_dim,int(features)) (32, 4)
TEST contents[i].shape= (10, 4)
TEST np.zeros((pad_dim,int(features)) (54, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
--------------------------------------------------------------------------------
max_n_level and len(levels[i])= 64 64
subjets per level= [32, 64, 44, 6, 2]
TEST contents[i].shape= (64, 4)
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 5
--------------------------------------------------------------------------------
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (46, 4)
max_n_level= 64
TEST np.zeros((pad_dim,int(features)) (18, 4)
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (16, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
TEST np.zeros((pad_dim,int(features)) (48, 4)
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (4, 4)
TEST np.zeros((pad_dim,int(features)) (60, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (4, 4)
TEST np.zeros((pad_dim,int(features)) (60, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (44, 4)
TEST np.zeros((pad_dim,int(features)) (20, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (6, 4)
TEST np.zeros((pad_dim,int(features)) (58, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (2, 4)
TEST np.zeros((pad_dim,int(features)) (62, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 36, 10, 2, 2]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 6
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (36, 4)
TEST np.zeros((pad_dim,int(features)) (28, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (10, 4)
TEST np.zeros((pad_dim,int(features)) (54, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (2, 4)
TEST np.zeros((pad_dim,int(features)) (62, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (2, 4)
TEST np.zeros((pad_dim,int(features)) (62, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 48, 8]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 4
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (48, 4)
TEST np.zeros((pad_dim,int(features)) (16, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (8, 4)
TEST np.zeros((pad_dim,int(features)) (56, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 60, 18]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 4
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (60, 4)
TEST np.zeros((pad_dim,int(features)) (4, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (18, 4)
TEST np.zeros((pad_dim,int(features)) (46, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 50, 12, 2]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 5
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (50, 4)
TEST np.zeros((pad_dim,int(features)) (14, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (12, 4)
TEST np.zeros((pad_dim,int(features)) (52, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (2, 4)
TEST np.zeros((pad_dim,int(features)) (62, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 44, 8]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 4
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (44, 4)
TEST np.zeros((pad_dim,int(features)) (20, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (8, 4)
TEST np.zeros((pad_dim,int(features)) (56, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 50, 10]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 4
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (50, 4)
TEST np.zeros((pad_dim,int(features)) (14, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (10, 4)
TEST np.zeros((pad_dim,int(features)) (54, 4)
Checkpoint Directory exists!
- Found new best bg rejection = 4.148936170212766
Epoch 9/30

 38%|██████████████████████████                                           | 14/37 [00:19<00:22,  1.01it/s, loss=0.684]
--------------------------------------------------------------------------------
subjets per level= [32, 64, 46, 14, 2]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 5
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (46, 4)
TEST np.zeros((pad_dim,int(features)) (18, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (14, 4)
TEST np.zeros((pad_dim,int(features)) (50, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (2, 4)
TEST np.zeros((pad_dim,int(features)) (62, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 44, 10]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 4
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
--------------------------------------------------------------------------------
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
subjets per level= [32, 64, 42, 14]
--------------------------------------------------------------------------------
TEST np.zeros((pad_dim,int(features)) (32, 4)
--------------------------------------------------------------------------------
Number of levels= 4
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
max_n_level= 64
TEST np.zeros((pad_dim,int(features)) (0, 4)
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST contents[i].shape= (44, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
TEST np.zeros((pad_dim,int(features)) (20, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (10, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
TEST np.zeros((pad_dim,int(features)) (54, 4)
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (42, 4)
TEST np.zeros((pad_dim,int(features)) (22, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (14, 4)
TEST np.zeros((pad_dim,int(features)) (50, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 44, 12]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 4
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
//////////////////////////////////////////////////////////////////////////////////////////////////--------------------------------------------------------------------------------
subjets per level= [32, 64, 40, 12, 4]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 5
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
//
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (44, 4)
TEST np.zeros((pad_dim,int(features)) (20, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
TEST contents[i].shape= (64, 4)
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (12, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
TEST np.zeros((pad_dim,int(features)) (52, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (40, 4)
TEST np.zeros((pad_dim,int(features)) (24, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (12, 4)
TEST np.zeros((pad_dim,int(features)) (52, 4)
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
subjets per level= [32, 64, 44, 10]
TEST contents[i].shape= (4, 4)
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 4
--------------------------------------------------------------------------------
TEST np.zeros((pad_dim,int(features)) (60, 4)
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (44, 4)
TEST np.zeros((pad_dim,int(features)) (20, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (10, 4)
TEST np.zeros((pad_dim,int(features)) (54, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 44, 10, 2]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 5
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (44, 4)
TEST np.zeros((pad_dim,int(features)) (20, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (10, 4)
TEST np.zeros((pad_dim,int(features)) (54, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (2, 4)
TEST np.zeros((pad_dim,int(features)) (62, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 36, 6, 2]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 5
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (36, 4)
TEST np.zeros((pad_dim,int(features)) (28, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (6, 4)
TEST np.zeros((pad_dim,int(features)) (58, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (2, 4)
TEST np.zeros((pad_dim,int(features)) (62, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 30, 4]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 4
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (30, 4)
TEST np.zeros((pad_dim,int(features)) (34, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (4, 4)
TEST np.zeros((pad_dim,int(features)) (60, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 44, 10, 4]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 5
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (44, 4)
TEST np.zeros((pad_dim,int(features)) (20, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (10, 4)
TEST np.zeros((pad_dim,int(features)) (54, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (4, 4)
TEST np.zeros((pad_dim,int(features)) (60, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 46, 10]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 4
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (46, 4)
TEST np.zeros((pad_dim,int(features)) (18, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (10, 4)
TEST np.zeros((pad_dim,int(features)) (54, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 46, 10, 2]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 5
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (46, 4)
TEST np.zeros((pad_dim,int(features)) (18, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (10, 4)
TEST np.zeros((pad_dim,int(features)) (54, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (2, 4)
TEST np.zeros((pad_dim,int(features)) (62, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 48, 12, 2]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 5
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (48, 4)
TEST np.zeros((pad_dim,int(features)) (16, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (12, 4)
TEST np.zeros((pad_dim,int(features)) (52, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (2, 4)
TEST np.zeros((pad_dim,int(features)) (62, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 40, 12]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 4
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (40, 4)
TEST np.zeros((pad_dim,int(features)) (24, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (12, 4)
TEST np.zeros((pad_dim,int(features)) (52, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 56, 10]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 4
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (56, 4)
TEST np.zeros((pad_dim,int(features)) (8, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (10, 4)
TEST np.zeros((pad_dim,int(features)) (54, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 38, 2]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 4
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (38, 4)
TEST np.zeros((pad_dim,int(features)) (26, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (2, 4)
TEST np.zeros((pad_dim,int(features)) (62, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 40, 12, 4, 2]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 6
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (40, 4)
TEST np.zeros((pad_dim,int(features)) (24, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (12, 4)
TEST np.zeros((pad_dim,int(features)) (52, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (4, 4)
TEST np.zeros((pad_dim,int(features)) (60, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (2, 4)
TEST np.zeros((pad_dim,int(features)) (62, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 38, 8]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 4
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (38, 4)
TEST np.zeros((pad_dim,int(features)) (26, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (8, 4)
TEST np.zeros((pad_dim,int(features)) (56, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 48, 4]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 4
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (48, 4)
TEST np.zeros((pad_dim,int(features)) (16, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (4, 4)
TEST np.zeros((pad_dim,int(features)) (60, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 42, 14]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 4
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (42, 4)
TEST np.zeros((pad_dim,int(features)) (22, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (14, 4)
TEST np.zeros((pad_dim,int(features)) (50, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 42, 14, 2]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 5
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (42, 4)
TEST np.zeros((pad_dim,int(features)) (22, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (14, 4)
TEST np.zeros((pad_dim,int(features)) (50, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (2, 4)
TEST np.zeros((pad_dim,int(features)) (62, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 42, 12, 2]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 5
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (42, 4)
TEST np.zeros((pad_dim,int(features)) (22, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (12, 4)
TEST np.zeros((pad_dim,int(features)) (52, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (2, 4)
TEST np.zeros((pad_dim,int(features)) (62, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 50, 14, 4]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 5
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (50, 4)
TEST np.zeros((pad_dim,int(features)) (14, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (14, 4)
TEST np.zeros((pad_dim,int(features)) (50, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (4, 4)
TEST np.zeros((pad_dim,int(features)) (60, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 44, 8, 2]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 5
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (44, 4)
TEST np.zeros((pad_dim,int(features)) (20, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (8, 4)
TEST np.zeros((pad_dim,int(features)) (56, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (2, 4)
TEST np.zeros((pad_dim,int(features)) (62, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 48, 10, 2]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 5
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (48, 4)
TEST np.zeros((pad_dim,int(features)) (16, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (10, 4)
TEST np.zeros((pad_dim,int(features)) (54, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (2, 4)
TEST np.zeros((pad_dim,int(features)) (62, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 44, 14, 4]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 5
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (44, 4)
TEST np.zeros((pad_dim,int(features)) (20, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (14, 4)
TEST np.zeros((pad_dim,int(features)) (50, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (4, 4)
TEST np.zeros((pad_dim,int(features)) (60, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 38, 12, 2]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 5
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (38, 4)
TEST np.zeros((pad_dim,int(features)) (26, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (12, 4)
TEST np.zeros((pad_dim,int(features)) (52, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (2, 4)
TEST np.zeros((pad_dim,int(features)) (62, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 44, 16, 2]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 5
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (44, 4)
TEST np.zeros((pad_dim,int(features)) (20, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (16, 4)
TEST np.zeros((pad_dim,int(features)) (48, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (2, 4)
TEST np.zeros((pad_dim,int(features)) (62, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 40, 14, 2]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 5
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (40, 4)
TEST np.zeros((pad_dim,int(features)) (24, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (14, 4)
TEST np.zeros((pad_dim,int(features)) (50, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (2, 4)
TEST np.zeros((pad_dim,int(features)) (62, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 40, 16, 2]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 5
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (40, 4)
TEST np.zeros((pad_dim,int(features)) (24, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (16, 4)
TEST np.zeros((pad_dim,int(features)) (48, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (2, 4)
TEST np.zeros((pad_dim,int(features)) (62, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 38, 14, 4]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 5
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (38, 4)
TEST np.zeros((pad_dim,int(features)) (26, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (14, 4)
TEST np.zeros((pad_dim,int(features)) (50, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (4, 4)
TEST np.zeros((pad_dim,int(features)) (60, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 40, 10]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 4
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (40, 4)
TEST np.zeros((pad_dim,int(features)) (24, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (10, 4)
TEST np.zeros((pad_dim,int(features)) (54, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 50, 12, 4]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 5
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (50, 4)
TEST np.zeros((pad_dim,int(features)) (14, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (12, 4)
TEST np.zeros((pad_dim,int(features)) (52, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (4, 4)
TEST np.zeros((pad_dim,int(features)) (60, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 52, 16, 2, 2]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 6
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (52, 4)
TEST np.zeros((pad_dim,int(features)) (12, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (16, 4)
TEST np.zeros((pad_dim,int(features)) (48, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (2, 4)
TEST np.zeros((pad_dim,int(features)) (62, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (2, 4)
TEST np.zeros((pad_dim,int(features)) (62, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 42, 20, 8]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 5
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (42, 4)
TEST np.zeros((pad_dim,int(features)) (22, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (20, 4)
TEST np.zeros((pad_dim,int(features)) (44, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (8, 4)
TEST np.zeros((pad_dim,int(features)) (56, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 42, 6, 2]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 5
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (42, 4)
TEST np.zeros((pad_dim,int(features)) (22, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (6, 4)
TEST np.zeros((pad_dim,int(features)) (58, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (2, 4)
TEST np.zeros((pad_dim,int(features)) (62, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 36, 6]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 4
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (36, 4)
TEST np.zeros((pad_dim,int(features)) (28, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (6, 4)
100%|█████████████████████████████████████████████████████████████████████| 37/37 [00:19<00:00,  1.87it/s, loss=0.685]
- Train metrics: accuracy: 0.5609 ; loss: 0.6823
train.py:220: RuntimeWarning: divide by zero encountered in true_divide
  inv_fpr = interp(base_tpr, tpr, 1. / fpr)[125]
- Eval metrics : accuracy: 0.5156 ; loss: 0.6983
--------------------------------------------------------------------------------
subjets per level= [32, 64, 48, 14, 2]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 5
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
///////////////////////////////////////////////////////////////////////////////////////////////--------------------------------------------------------------------------------
subjets per level= [32, 64, 44, 6, 2]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 5
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (44, 4)
TEST np.zeros((pad_dim,int(features)) (20, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (6, 4)
TEST np.zeros((pad_dim,int(features)) (58, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (2, 4)
TEST np.zeros((pad_dim,int(features)) (62, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 42, 12]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 4
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
/////
max_n_level and len(levels[i])= 64 64
////////////////////////////////////////////////////////////////////////////////////////////////////
TEST contents[i].shape= (48, 4)
max_n_level and len(levels[i])= 64 64
TEST np.zeros((pad_dim,int(features)) (16, 4)
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (14, 4)
TEST np.zeros((pad_dim,int(features)) (50, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (2, 4)
TEST np.zeros((pad_dim,int(features)) (62, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (42, 4)
TEST np.zeros((pad_dim,int(features)) (22, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (12, 4)
TEST np.zeros((pad_dim,int(features)) (52, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 44, 6, 2]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 5
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 44, 10]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 4
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
--------------------------------------------------------------------------------
subjets per level= [32, 64, 46, 16, 4, 4]
max_n_level and len(levels[i])= 64 64
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
TEST contents[i].shape= (44, 4)
Number of levels= 6
--------------------------------------------------------------------------------
TEST np.zeros((pad_dim,int(features)) (20, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (10, 4)
max_n_level= 64
TEST np.zeros((pad_dim,int(features)) (54, 4)
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (46, 4)
TEST np.zeros((pad_dim,int(features)) (18, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (16, 4)
TEST np.zeros((pad_dim,int(features)) (48, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (4, 4)
TEST np.zeros((pad_dim,int(features)) (60, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (4, 4)
TEST np.zeros((pad_dim,int(features)) (60, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (44, 4)
TEST np.zeros((pad_dim,int(features)) (20, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (6, 4)
TEST np.zeros((pad_dim,int(features)) (58, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (2, 4)
TEST np.zeros((pad_dim,int(features)) (62, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 36, 10, 2, 2]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 6
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (36, 4)
TEST np.zeros((pad_dim,int(features)) (28, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (10, 4)
TEST np.zeros((pad_dim,int(features)) (54, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (2, 4)
TEST np.zeros((pad_dim,int(features)) (62, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (2, 4)
TEST np.zeros((pad_dim,int(features)) (62, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 48, 8]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 4
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (48, 4)
TEST np.zeros((pad_dim,int(features)) (16, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (8, 4)
TEST np.zeros((pad_dim,int(features)) (56, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 60, 18]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 4
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (60, 4)
TEST np.zeros((pad_dim,int(features)) (4, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (18, 4)
TEST np.zeros((pad_dim,int(features)) (46, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 50, 12, 2]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 5
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (50, 4)
TEST np.zeros((pad_dim,int(features)) (14, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (12, 4)
TEST np.zeros((pad_dim,int(features)) (52, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (2, 4)
TEST np.zeros((pad_dim,int(features)) (62, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 44, 8]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 4
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (44, 4)
TEST np.zeros((pad_dim,int(features)) (20, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (8, 4)
TEST np.zeros((pad_dim,int(features)) (56, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 50, 10]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 4
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (50, 4)
TEST np.zeros((pad_dim,int(features)) (14, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (10, 4)
TEST np.zeros((pad_dim,int(features)) (54, 4)
- Found new best bg rejection = 4.333333333333333
Epoch 10/30
  0%|                                                                                          | 0/37 [00:00<?, ?it/s]
Checkpoint Directory exists!
--------------------------------------------------------------------------------
subjets per level= [32, 64, 46, 14, 2]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 5
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
--------------------------------------------------------------------------------
TEST np.zeros((pad_dim,int(features)) (32, 4)
subjets per level= [32, 64, 44, 10]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 4
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (46, 4)
max_n_level= 64
TEST np.zeros((pad_dim,int(features)) (18, 4)
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
////////////////////////////////////////////////////////////////////////////////////////////////////
TEST contents[i].shape= (14, 4)
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (50, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
////////////////////////////////////////////////////////////////////////////////////////////////////
TEST contents[i].shape= (2, 4)
TEST np.zeros((pad_dim,int(features)) (62, 4)
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (44, 4)
TEST np.zeros((pad_dim,int(features)) (20, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (10, 4)
TEST np.zeros((pad_dim,int(features)) (54, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 42, 14]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 4
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (42, 4)
TEST np.zeros((pad_dim,int(features)) (22, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (14, 4)
TEST np.zeros((pad_dim,int(features)) (50, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 44, 12]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 4
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
subjets per level= [32, 64, 44, 10]
--------------------------------------------------------------------------------
TEST contents[i].shape= (32, 4)
--------------------------------------------------------------------------------
Number of levels= 4
--------------------------------------------------------------------------------
TEST np.zeros((pad_dim,int(features)) (32, 4)
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
subjets per level= [32, 64, 40, 12, 4]
max_n_level and len(levels[i])= 64 64
TEST np.zeros((pad_dim,int(features)) (0, 4)
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
TEST contents[i].shape= (64, 4)
Number of levels= 5
--------------------------------------------------------------------------------
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (44, 4)
TEST np.zeros((pad_dim,int(features)) (20, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (44, 4)
TEST np.zeros((pad_dim,int(features)) (20, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (12, 4)
max_n_level and len(levels[i])= 64 64
TEST np.zeros((pad_dim,int(features)) (52, 4)
max_n_level= 64
TEST contents[i].shape= (10, 4)
--------------------------------------------------------------------------------
TEST np.zeros((pad_dim,int(features)) (54, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (40, 4)
TEST np.zeros((pad_dim,int(features)) (24, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (12, 4)
TEST np.zeros((pad_dim,int(features)) (52, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (4, 4)
TEST np.zeros((pad_dim,int(features)) (60, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 44, 10, 2]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 5
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (44, 4)
TEST np.zeros((pad_dim,int(features)) (20, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (10, 4)
TEST np.zeros((pad_dim,int(features)) (54, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (2, 4)
TEST np.zeros((pad_dim,int(features)) (62, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 36, 6, 2]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 5
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (36, 4)
TEST np.zeros((pad_dim,int(features)) (28, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (6, 4)
TEST np.zeros((pad_dim,int(features)) (58, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (2, 4)
TEST np.zeros((pad_dim,int(features)) (62, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 30, 4]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 4
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (30, 4)
TEST np.zeros((pad_dim,int(features)) (34, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (4, 4)
TEST np.zeros((pad_dim,int(features)) (60, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 44, 10, 4]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 5
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (44, 4)
TEST np.zeros((pad_dim,int(features)) (20, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (10, 4)
TEST np.zeros((pad_dim,int(features)) (54, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (4, 4)
TEST np.zeros((pad_dim,int(features)) (60, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 46, 10]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 4
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (46, 4)
TEST np.zeros((pad_dim,int(features)) (18, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (10, 4)
TEST np.zeros((pad_dim,int(features)) (54, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 46, 10, 2]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 5
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (46, 4)
TEST np.zeros((pad_dim,int(features)) (18, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (10, 4)
TEST np.zeros((pad_dim,int(features)) (54, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (2, 4)
TEST np.zeros((pad_dim,int(features)) (62, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 48, 12, 2]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 5
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (48, 4)
TEST np.zeros((pad_dim,int(features)) (16, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (12, 4)
TEST np.zeros((pad_dim,int(features)) (52, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (2, 4)
TEST np.zeros((pad_dim,int(features)) (62, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 40, 12]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 4
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (40, 4)
TEST np.zeros((pad_dim,int(features)) (24, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (12, 4)
TEST np.zeros((pad_dim,int(features)) (52, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 56, 10]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 4
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (56, 4)
TEST np.zeros((pad_dim,int(features)) (8, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (10, 4)
TEST np.zeros((pad_dim,int(features)) (54, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 38, 2]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 4
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (38, 4)
TEST np.zeros((pad_dim,int(features)) (26, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (2, 4)
TEST np.zeros((pad_dim,int(features)) (62, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 40, 12, 4, 2]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 6
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (40, 4)
TEST np.zeros((pad_dim,int(features)) (24, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (12, 4)
TEST np.zeros((pad_dim,int(features)) (52, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (4, 4)
TEST np.zeros((pad_dim,int(features)) (60, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (2, 4)
TEST np.zeros((pad_dim,int(features)) (62, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 38, 8]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 4
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (38, 4)
TEST np.zeros((pad_dim,int(features)) (26, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (8, 4)
TEST np.zeros((pad_dim,int(features)) (56, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 48, 4]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 4
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (48, 4)
TEST np.zeros((pad_dim,int(features)) (16, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (4, 4)
TEST np.zeros((pad_dim,int(features)) (60, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 42, 14]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 4
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (42, 4)
TEST np.zeros((pad_dim,int(features)) (22, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (14, 4)
TEST np.zeros((pad_dim,int(features)) (50, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 42, 14, 2]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 5
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (42, 4)
TEST np.zeros((pad_dim,int(features)) (22, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (14, 4)
TEST np.zeros((pad_dim,int(features)) (50, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (2, 4)
TEST np.zeros((pad_dim,int(features)) (62, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 42, 12, 2]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 5
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (42, 4)
TEST np.zeros((pad_dim,int(features)) (22, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (12, 4)
TEST np.zeros((pad_dim,int(features)) (52, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (2, 4)
TEST np.zeros((pad_dim,int(features)) (62, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 50, 14, 4]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 5
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (50, 4)
TEST np.zeros((pad_dim,int(features)) (14, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (14, 4)
TEST np.zeros((pad_dim,int(features)) (50, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (4, 4)
TEST np.zeros((pad_dim,int(features)) (60, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 44, 8, 2]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 5
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (44, 4)
TEST np.zeros((pad_dim,int(features)) (20, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (8, 4)
TEST np.zeros((pad_dim,int(features)) (56, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (2, 4)
TEST np.zeros((pad_dim,int(features)) (62, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 48, 10, 2]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 5
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (48, 4)
TEST np.zeros((pad_dim,int(features)) (16, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (10, 4)
TEST np.zeros((pad_dim,int(features)) (54, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (2, 4)
TEST np.zeros((pad_dim,int(features)) (62, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 44, 14, 4]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 5
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (44, 4)
TEST np.zeros((pad_dim,int(features)) (20, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (14, 4)
TEST np.zeros((pad_dim,int(features)) (50, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (4, 4)
TEST np.zeros((pad_dim,int(features)) (60, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 38, 12, 2]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 5
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (38, 4)
TEST np.zeros((pad_dim,int(features)) (26, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (12, 4)
TEST np.zeros((pad_dim,int(features)) (52, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (2, 4)
TEST np.zeros((pad_dim,int(features)) (62, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 44, 16, 2]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 5
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (44, 4)
TEST np.zeros((pad_dim,int(features)) (20, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (16, 4)
TEST np.zeros((pad_dim,int(features)) (48, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (2, 4)
TEST np.zeros((pad_dim,int(features)) (62, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 40, 14, 2]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 5
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (40, 4)
TEST np.zeros((pad_dim,int(features)) (24, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (14, 4)
TEST np.zeros((pad_dim,int(features)) (50, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (2, 4)
TEST np.zeros((pad_dim,int(features)) (62, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 40, 16, 2]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 5
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (40, 4)
TEST np.zeros((pad_dim,int(features)) (24, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (16, 4)
TEST np.zeros((pad_dim,int(features)) (48, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (2, 4)
TEST np.zeros((pad_dim,int(features)) (62, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 38, 14, 4]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 5
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (38, 4)
TEST np.zeros((pad_dim,int(features)) (26, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (14, 4)
TEST np.zeros((pad_dim,int(features)) (50, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (4, 4)
TEST np.zeros((pad_dim,int(features)) (60, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 40, 10]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 4
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (40, 4)
TEST np.zeros((pad_dim,int(features)) (24, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (10, 4)
100%|█████████████████████████████████████████████████████████████████████| 37/37 [00:17<00:00,  2.09it/s, loss=0.684]
- Train metrics: accuracy: 0.5757 ; loss: 0.6802
--------------------------------------------------------------------------------
subjets per level= [32, 64, 48, 14, 2]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 5
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (48, 4)
TEST np.zeros((pad_dim,int(features)) (16, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (14, 4)
TEST np.zeros((pad_dim,int(features)) (50, 4)
//////////////////////////////////////////--------------------------------------------------------------------------------
//////////////////////////////////////////////////////////
subjets per level= [32, 64, 44, 6, 2]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 5
--------------------------------------------------------------------------------
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (2, 4)
TEST np.zeros((pad_dim,int(features)) (62, 4)
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
--------------------------------------------------------------------------------
TEST np.zeros((pad_dim,int(features)) (0, 4)
subjets per level= [32, 64, 42, 12]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 4
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (44, 4)
TEST np.zeros((pad_dim,int(features)) (20, 4)
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
////////////////////////////////////////////////////////////////////////////////////////////////////
TEST contents[i].shape= (6, 4)
max_n_level and len(levels[i])= 64 64
TEST np.zeros((pad_dim,int(features)) (58, 4)
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (2, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
TEST np.zeros((pad_dim,int(features)) (62, 4)
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (42, 4)
TEST np.zeros((pad_dim,int(features)) (22, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (12, 4)
TEST np.zeros((pad_dim,int(features)) (52, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 44, 6, 2]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 5
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
--------------------------------------------------------------------------------
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (44, 4)
TEST np.zeros((pad_dim,int(features)) (20, 4)
subjets per level= [32, 64, 44, 10]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 4
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (6, 4)
TEST np.zeros((pad_dim,int(features)) (58, 4)
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (2, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
TEST np.zeros((pad_dim,int(features)) (62, 4)
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 46, 16, 4, 4]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 6
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (44, 4)
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (20, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (10, 4)
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (54, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (46, 4)
TEST np.zeros((pad_dim,int(features)) (18, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (16, 4)
TEST np.zeros((pad_dim,int(features)) (48, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (4, 4)
TEST np.zeros((pad_dim,int(features)) (60, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (4, 4)
TEST np.zeros((pad_dim,int(features)) (60, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 36, 10, 2, 2]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 6
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (36, 4)
TEST np.zeros((pad_dim,int(features)) (28, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (10, 4)
TEST np.zeros((pad_dim,int(features)) (54, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (2, 4)
TEST np.zeros((pad_dim,int(features)) (62, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (2, 4)
TEST np.zeros((pad_dim,int(features)) (62, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 48, 8]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 4
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (48, 4)
TEST np.zeros((pad_dim,int(features)) (16, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (8, 4)
TEST np.zeros((pad_dim,int(features)) (56, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 60, 18]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 4
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (60, 4)
TEST np.zeros((pad_dim,int(features)) (4, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (18, 4)
TEST np.zeros((pad_dim,int(features)) (46, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 50, 12, 2]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 5
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (50, 4)
TEST np.zeros((pad_dim,int(features)) (14, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (12, 4)
TEST np.zeros((pad_dim,int(features)) (52, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (2, 4)
TEST np.zeros((pad_dim,int(features)) (62, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 44, 8]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 4
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (44, 4)
TEST np.zeros((pad_dim,int(features)) (20, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (8, 4)
TEST np.zeros((pad_dim,int(features)) (56, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 50, 10]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 4
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (50, 4)
TEST np.zeros((pad_dim,int(features)) (14, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (10, 4)
TEST np.zeros((pad_dim,int(features)) (54, 4)
train.py:220: RuntimeWarning: divide by zero encountered in true_divide
  inv_fpr = interp(base_tpr, tpr, 1. / fpr)[125]
- Eval metrics : accuracy: 0.5286 ; loss: 0.6985
Checkpoint Directory exists!
- Found new best bg rejection = 4.333333333333333
Epoch 11/30
  0%|                                                                                          | 0/37 [00:00<?, ?it/s]
--------------------------------------------------------------------------------
subjets per level= [32, 64, 46, 14, 2]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 5
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
subjets per level= [32, 64, 44, 10]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 4
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
max_n_level= 64
TEST contents[i].shape= (32, 4)
--------------------------------------------------------------------------------
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST np.zeros((pad_dim,int(features)) (32, 4)
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST contents[i].shape= (46, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
TEST np.zeros((pad_dim,int(features)) (18, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (14, 4)
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (44, 4)
TEST np.zeros((pad_dim,int(features)) (50, 4)
TEST np.zeros((pad_dim,int(features)) (20, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (2, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
TEST np.zeros((pad_dim,int(features)) (62, 4)
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (10, 4)
TEST np.zeros((pad_dim,int(features)) (54, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 42, 14]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 4
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (42, 4)
TEST np.zeros((pad_dim,int(features)) (22, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (14, 4)
TEST np.zeros((pad_dim,int(features)) (50, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 40, 12, 4]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 5
--------------------------------------------------------------------------------
subjets per level= [32, 64, 44, 12]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 4
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
TEST contents[i].shape= (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST np.zeros((pad_dim,int(features)) (32, 4)
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (44, 4)
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (20, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (40, 4)
TEST np.zeros((pad_dim,int(features)) (24, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (12, 4)
TEST np.zeros((pad_dim,int(features)) (52, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (4, 4)
max_n_level and len(levels[i])= 64 64
TEST np.zeros((pad_dim,int(features)) (60, 4)
TEST contents[i].shape= (12, 4)
TEST np.zeros((pad_dim,int(features)) (52, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 44, 10]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 4
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (44, 4)
TEST np.zeros((pad_dim,int(features)) (20, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (10, 4)
TEST np.zeros((pad_dim,int(features)) (54, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 44, 10, 2]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 5
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (44, 4)
TEST np.zeros((pad_dim,int(features)) (20, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (10, 4)
TEST np.zeros((pad_dim,int(features)) (54, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (2, 4)
TEST np.zeros((pad_dim,int(features)) (62, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 36, 6, 2]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 5
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (36, 4)
TEST np.zeros((pad_dim,int(features)) (28, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (6, 4)
TEST np.zeros((pad_dim,int(features)) (58, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (2, 4)
TEST np.zeros((pad_dim,int(features)) (62, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 30, 4]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 4
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (30, 4)
TEST np.zeros((pad_dim,int(features)) (34, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (4, 4)
TEST np.zeros((pad_dim,int(features)) (60, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 44, 10, 4]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 5
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (44, 4)
TEST np.zeros((pad_dim,int(features)) (20, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (10, 4)
TEST np.zeros((pad_dim,int(features)) (54, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (4, 4)
TEST np.zeros((pad_dim,int(features)) (60, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 46, 10]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 4
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (46, 4)
TEST np.zeros((pad_dim,int(features)) (18, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (10, 4)
TEST np.zeros((pad_dim,int(features)) (54, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 46, 10, 2]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 5
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (46, 4)
TEST np.zeros((pad_dim,int(features)) (18, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (10, 4)
TEST np.zeros((pad_dim,int(features)) (54, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (2, 4)
TEST np.zeros((pad_dim,int(features)) (62, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 48, 12, 2]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 5
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (48, 4)
TEST np.zeros((pad_dim,int(features)) (16, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (12, 4)
TEST np.zeros((pad_dim,int(features)) (52, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (2, 4)
TEST np.zeros((pad_dim,int(features)) (62, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 40, 12]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 4
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (40, 4)
TEST np.zeros((pad_dim,int(features)) (24, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (12, 4)
TEST np.zeros((pad_dim,int(features)) (52, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 56, 10]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 4
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (56, 4)
TEST np.zeros((pad_dim,int(features)) (8, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (10, 4)
TEST np.zeros((pad_dim,int(features)) (54, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 38, 2]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 4
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (38, 4)
TEST np.zeros((pad_dim,int(features)) (26, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (2, 4)
TEST np.zeros((pad_dim,int(features)) (62, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 40, 12, 4, 2]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 6
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (40, 4)
TEST np.zeros((pad_dim,int(features)) (24, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (12, 4)
TEST np.zeros((pad_dim,int(features)) (52, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (4, 4)
TEST np.zeros((pad_dim,int(features)) (60, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (2, 4)
TEST np.zeros((pad_dim,int(features)) (62, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 38, 8]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 4
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (38, 4)
TEST np.zeros((pad_dim,int(features)) (26, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (8, 4)
TEST np.zeros((pad_dim,int(features)) (56, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 48, 4]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 4
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (48, 4)
TEST np.zeros((pad_dim,int(features)) (16, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (4, 4)
TEST np.zeros((pad_dim,int(features)) (60, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 42, 14]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 4
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (42, 4)
TEST np.zeros((pad_dim,int(features)) (22, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (14, 4)
TEST np.zeros((pad_dim,int(features)) (50, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 42, 14, 2]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 5
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (42, 4)
TEST np.zeros((pad_dim,int(features)) (22, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (14, 4)
TEST np.zeros((pad_dim,int(features)) (50, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (2, 4)
TEST np.zeros((pad_dim,int(features)) (62, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 42, 12, 2]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 5
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (42, 4)
TEST np.zeros((pad_dim,int(features)) (22, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (12, 4)
TEST np.zeros((pad_dim,int(features)) (52, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (2, 4)
TEST np.zeros((pad_dim,int(features)) (62, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 50, 14, 4]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 5
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (50, 4)
TEST np.zeros((pad_dim,int(features)) (14, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (14, 4)
TEST np.zeros((pad_dim,int(features)) (50, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (4, 4)
TEST np.zeros((pad_dim,int(features)) (60, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 44, 8, 2]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 5
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (44, 4)
TEST np.zeros((pad_dim,int(features)) (20, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (8, 4)
TEST np.zeros((pad_dim,int(features)) (56, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (2, 4)
TEST np.zeros((pad_dim,int(features)) (62, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 48, 10, 2]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 5
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (48, 4)
TEST np.zeros((pad_dim,int(features)) (16, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (10, 4)
TEST np.zeros((pad_dim,int(features)) (54, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (2, 4)
TEST np.zeros((pad_dim,int(features)) (62, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 44, 14, 4]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 5
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (44, 4)
TEST np.zeros((pad_dim,int(features)) (20, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (14, 4)
TEST np.zeros((pad_dim,int(features)) (50, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (4, 4)
TEST np.zeros((pad_dim,int(features)) (60, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 38, 12, 2]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 5
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (38, 4)
TEST np.zeros((pad_dim,int(features)) (26, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (12, 4)
TEST np.zeros((pad_dim,int(features)) (52, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (2, 4)
TEST np.zeros((pad_dim,int(features)) (62, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 44, 16, 2]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 5
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (44, 4)
TEST np.zeros((pad_dim,int(features)) (20, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (16, 4)
TEST np.zeros((pad_dim,int(features)) (48, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (2, 4)
TEST np.zeros((pad_dim,int(features)) (62, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 40, 14, 2]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 5
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (40, 4)
TEST np.zeros((pad_dim,int(features)) (24, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (14, 4)
TEST np.zeros((pad_dim,int(features)) (50, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (2, 4)
TEST np.zeros((pad_dim,int(features)) (62, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 40, 16, 2]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 5
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (40, 4)
TEST np.zeros((pad_dim,int(features)) (24, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (16, 4)
TEST np.zeros((pad_dim,int(features)) (48, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (2, 4)
TEST np.zeros((pad_dim,int(features)) (62, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 38, 14, 4]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 5
--------------------------------------------------------------------------------

100%|█████████████████████████████████████████████████████████████████████| 37/37 [00:18<00:00,  2.05it/s, loss=0.681]
- Train metrics: accuracy: 0.5839 ; loss: 0.6776
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (38, 4)
TEST np.zeros((pad_dim,int(features)) (26, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (14, 4)
TEST np.zeros((pad_dim,int(features)) (50, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (4, 4)
TEST np.zeros((pad_dim,int(features)) (60, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 40, 10]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 4
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (40, 4)
TEST np.zeros((pad_dim,int(features)) (24, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (10, 4)
TEST np.zeros((pad_dim,int(features)) (54, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 50, 12, 4]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 5
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (50, 4)
TEST np.zeros((pad_dim,int(features)) (14, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (12, 4)
TEST np.zeros((pad_dim,int(features)) (52, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (4, 4)
TEST np.zeros((pad_dim,int(features)) (60, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 52, 16, 2, 2]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 6
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (52, 4)
TEST np.zeros((pad_dim,int(features)) (12, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (16, 4)
TEST np.zeros((pad_dim,int(features)) (48, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (2, 4)
TEST np.zeros((pad_dim,int(features)) (62, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (2, 4)
TEST np.zeros((pad_dim,int(features)) (62, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 42, 20, 8]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 5
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (42, 4)
TEST np.zeros((pad_dim,int(features)) (22, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (20, 4)
TEST np.zeros((pad_dim,int(features)) (44, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (8, 4)
TEST np.zeros((pad_dim,int(features)) (56, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 42, 6, 2]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 5
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (42, 4)
TEST np.zeros((pad_dim,int(features)) (22, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (6, 4)
TEST np.zeros((pad_dim,int(features)) (58, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (2, 4)
TEST np.zeros((pad_dim,int(features)) (62, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 36, 6]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 4
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (36, 4)
TEST np.zeros((pad_dim,int(features)) (28, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (6, 4)
TEST np.zeros((pad_dim,int(features)) (58, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 48, 14, 2]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 5
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
///////////////////////////////////////////////////////////////////////////////////////////////--------------------------------------------------------------------------------
subjets per level= [32, 64, 44, 6, 2]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 5
--------------------------------------------------------------------------------
/////
max_n_level and len(levels[i])= 64 64
max_n_level= 64
--------------------------------------------------------------------------------
TEST contents[i].shape= (48, 4)
TEST np.zeros((pad_dim,int(features)) (16, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
TEST np.zeros((pad_dim,int(features)) (32, 4)
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (14, 4)
TEST np.zeros((pad_dim,int(features)) (50, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (2, 4)
TEST np.zeros((pad_dim,int(features)) (62, 4)
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 42, 12]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
Number of levels= 4
--------------------------------------------------------------------------------
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (44, 4)
max_n_level= 64
--------------------------------------------------------------------------------
TEST np.zeros((pad_dim,int(features)) (20, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST contents[i].shape= (6, 4)
TEST np.zeros((pad_dim,int(features)) (58, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
////////////////////////////////////////////////////////////////////////////////////////////////////
TEST contents[i].shape= (2, 4)
TEST np.zeros((pad_dim,int(features)) (62, 4)
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (42, 4)
TEST np.zeros((pad_dim,int(features)) (22, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (12, 4)
TEST np.zeros((pad_dim,int(features)) (52, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 46, 16, 4, 4]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 6
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (46, 4)
TEST np.zeros((pad_dim,int(features)) (18, 4)
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
subjets per level= [32, 64, 44, 10]
--------------------------------------------------------------------------------
subjets per level= [32, 64, 44, 6, 2]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 4
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
Number of levels= 5
--------------------------------------------------------------------------------
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (16, 4)
TEST np.zeros((pad_dim,int(features)) (48, 4)
max_n_level= 64
max_n_level= 64
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
max_n_level and len(levels[i])= 64 64
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST contents[i].shape= (4, 4)
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (60, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (4, 4)
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (60, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
////////////////////////////////////////////////////////////////////////////////////////////////////
TEST contents[i].shape= (64, 4)
max_n_level and len(levels[i])= 64 64
TEST np.zeros((pad_dim,int(features)) (0, 4)
TEST contents[i].shape= (44, 4)
TEST np.zeros((pad_dim,int(features)) (20, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
////////////////////////////////////////////////////////////////////////////////////////////////////
TEST contents[i].shape= (6, 4)
max_n_level and len(levels[i])= 64 64
TEST np.zeros((pad_dim,int(features)) (58, 4)
TEST contents[i].shape= (44, 4)
TEST np.zeros((pad_dim,int(features)) (20, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (2, 4)
TEST contents[i].shape= (10, 4)
TEST np.zeros((pad_dim,int(features)) (62, 4)
TEST np.zeros((pad_dim,int(features)) (54, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 36, 10, 2, 2]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 6
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (36, 4)
TEST np.zeros((pad_dim,int(features)) (28, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (10, 4)
TEST np.zeros((pad_dim,int(features)) (54, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (2, 4)
TEST np.zeros((pad_dim,int(features)) (62, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (2, 4)
TEST np.zeros((pad_dim,int(features)) (62, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 48, 8]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 4
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (48, 4)
TEST np.zeros((pad_dim,int(features)) (16, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (8, 4)
TEST np.zeros((pad_dim,int(features)) (56, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 60, 18]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 4
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (60, 4)
TEST np.zeros((pad_dim,int(features)) (4, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (18, 4)
TEST np.zeros((pad_dim,int(features)) (46, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 50, 12, 2]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 5
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (50, 4)
TEST np.zeros((pad_dim,int(features)) (14, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (12, 4)
TEST np.zeros((pad_dim,int(features)) (52, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (2, 4)
TEST np.zeros((pad_dim,int(features)) (62, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 44, 8]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 4
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (44, 4)
TEST np.zeros((pad_dim,int(features)) (20, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (8, 4)
TEST np.zeros((pad_dim,int(features)) (56, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 50, 10]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 4
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (50, 4)
TEST np.zeros((pad_dim,int(features)) (14, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (10, 4)
TEST np.zeros((pad_dim,int(features)) (54, 4)
train.py:220: RuntimeWarning: divide by zero encountered in true_divide
  inv_fpr = interp(base_tpr, tpr, 1. / fpr)[125]
- Eval metrics : accuracy: 0.5339 ; loss: 0.6990
- Found new best bg rejection = 4.333333333333333
Epoch 12/30
  0%|                                                                                          | 0/37 [00:00<?, ?it/s]
Checkpoint Directory exists!
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
subjets per level= [32, 64, 46, 14, 2]
--------------------------------------------------------------------------------
subjets per level= [32, 64, 44, 10]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 5
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 4
--------------------------------------------------------------------------------
max_n_level= 64
max_n_level= 64
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
TEST np.zeros((pad_dim,int(features)) (0, 4)
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
TEST np.zeros((pad_dim,int(features)) (0, 4)
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (44, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
TEST np.zeros((pad_dim,int(features)) (20, 4)
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (46, 4)
TEST np.zeros((pad_dim,int(features)) (18, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (14, 4)
TEST np.zeros((pad_dim,int(features)) (50, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
////////////////////////////////////////////////////////////////////////////////////////////////////
TEST contents[i].shape= (10, 4)
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (2, 4)
TEST np.zeros((pad_dim,int(features)) (54, 4)
TEST np.zeros((pad_dim,int(features)) (62, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 42, 14]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 4
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (42, 4)
TEST np.zeros((pad_dim,int(features)) (22, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (14, 4)
TEST np.zeros((pad_dim,int(features)) (50, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 44, 10]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 4
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
//////////////////////////////////////////////////////////////////////////////////////////////////--------------------------------------------------------------------------------
//
subjets per level= [32, 64, 44, 12]
--------------------------------------------------------------------------------
max_n_level and len(levels[i])= 64 64
--------------------------------------------------------------------------------
Number of levels= 4
TEST contents[i].shape= (44, 4)
--------------------------------------------------------------------------------
TEST np.zeros((pad_dim,int(features)) (20, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (10, 4)
max_n_level= 64
--------------------------------------------------------------------------------
TEST np.zeros((pad_dim,int(features)) (54, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 40, 12, 4]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 5
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
max_n_level= 64
////////////////////////////////////////////////////////////////////////////////////////////////////
--------------------------------------------------------------------------------
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (44, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
TEST np.zeros((pad_dim,int(features)) (20, 4)
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (12, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
TEST np.zeros((pad_dim,int(features)) (52, 4)
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (40, 4)
TEST np.zeros((pad_dim,int(features)) (24, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (12, 4)
TEST np.zeros((pad_dim,int(features)) (52, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (4, 4)
TEST np.zeros((pad_dim,int(features)) (60, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 44, 10, 2]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 5
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (44, 4)
TEST np.zeros((pad_dim,int(features)) (20, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (10, 4)
TEST np.zeros((pad_dim,int(features)) (54, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (2, 4)
TEST np.zeros((pad_dim,int(features)) (62, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 36, 6, 2]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 5
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (36, 4)
TEST np.zeros((pad_dim,int(features)) (28, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (6, 4)
TEST np.zeros((pad_dim,int(features)) (58, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (2, 4)
TEST np.zeros((pad_dim,int(features)) (62, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 30, 4]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 4
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (30, 4)
TEST np.zeros((pad_dim,int(features)) (34, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (4, 4)
TEST np.zeros((pad_dim,int(features)) (60, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 44, 10, 4]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 5
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (44, 4)
TEST np.zeros((pad_dim,int(features)) (20, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (10, 4)
TEST np.zeros((pad_dim,int(features)) (54, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (4, 4)
TEST np.zeros((pad_dim,int(features)) (60, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 46, 10]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 4
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (46, 4)
TEST np.zeros((pad_dim,int(features)) (18, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (10, 4)
TEST np.zeros((pad_dim,int(features)) (54, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 46, 10, 2]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 5
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (46, 4)
TEST np.zeros((pad_dim,int(features)) (18, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (10, 4)
TEST np.zeros((pad_dim,int(features)) (54, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (2, 4)
TEST np.zeros((pad_dim,int(features)) (62, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 48, 12, 2]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 5
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (48, 4)
TEST np.zeros((pad_dim,int(features)) (16, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (12, 4)
TEST np.zeros((pad_dim,int(features)) (52, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (2, 4)
TEST np.zeros((pad_dim,int(features)) (62, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 40, 12]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 4
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (40, 4)
TEST np.zeros((pad_dim,int(features)) (24, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (12, 4)
TEST np.zeros((pad_dim,int(features)) (52, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 56, 10]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 4
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (56, 4)
TEST np.zeros((pad_dim,int(features)) (8, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (10, 4)
TEST np.zeros((pad_dim,int(features)) (54, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 38, 2]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 4
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (38, 4)
TEST np.zeros((pad_dim,int(features)) (26, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (2, 4)
TEST np.zeros((pad_dim,int(features)) (62, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 40, 12, 4, 2]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 6
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (40, 4)
TEST np.zeros((pad_dim,int(features)) (24, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (12, 4)
TEST np.zeros((pad_dim,int(features)) (52, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (4, 4)
TEST np.zeros((pad_dim,int(features)) (60, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (2, 4)
TEST np.zeros((pad_dim,int(features)) (62, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 38, 8]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 4
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (38, 4)
TEST np.zeros((pad_dim,int(features)) (26, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (8, 4)
TEST np.zeros((pad_dim,int(features)) (56, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 48, 4]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 4
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (48, 4)
TEST np.zeros((pad_dim,int(features)) (16, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (4, 4)
TEST np.zeros((pad_dim,int(features)) (60, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 42, 14]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 4
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (42, 4)
TEST np.zeros((pad_dim,int(features)) (22, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (14, 4)
TEST np.zeros((pad_dim,int(features)) (50, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 42, 14, 2]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 5
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (42, 4)
TEST np.zeros((pad_dim,int(features)) (22, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (14, 4)
TEST np.zeros((pad_dim,int(features)) (50, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (2, 4)
TEST np.zeros((pad_dim,int(features)) (62, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 42, 12, 2]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 5
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (42, 4)
TEST np.zeros((pad_dim,int(features)) (22, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (12, 4)
TEST np.zeros((pad_dim,int(features)) (52, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (2, 4)
TEST np.zeros((pad_dim,int(features)) (62, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 50, 14, 4]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 5
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (50, 4)
TEST np.zeros((pad_dim,int(features)) (14, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (14, 4)
TEST np.zeros((pad_dim,int(features)) (50, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (4, 4)
TEST np.zeros((pad_dim,int(features)) (60, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 44, 8, 2]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 5
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (44, 4)
TEST np.zeros((pad_dim,int(features)) (20, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (8, 4)
TEST np.zeros((pad_dim,int(features)) (56, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (2, 4)
TEST np.zeros((pad_dim,int(features)) (62, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 48, 10, 2]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 5
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (48, 4)
TEST np.zeros((pad_dim,int(features)) (16, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (10, 4)
TEST np.zeros((pad_dim,int(features)) (54, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (2, 4)
TEST np.zeros((pad_dim,int(features)) (62, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 44, 14, 4]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 5
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (44, 4)
TEST np.zeros((pad_dim,int(features)) (20, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (14, 4)
TEST np.zeros((pad_dim,int(features)) (50, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (4, 4)
TEST np.zeros((pad_dim,int(features)) (60, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 38, 12, 2]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 5
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (38, 4)
TEST np.zeros((pad_dim,int(features)) (26, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (12, 4)
TEST np.zeros((pad_dim,int(features)) (52, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (2, 4)
TEST np.zeros((pad_dim,int(features)) (62, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 44, 16, 2]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 5
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (44, 4)
TEST np.zeros((pad_dim,int(features)) (20, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (16, 4)
TEST np.zeros((pad_dim,int(features)) (48, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (2, 4)
TEST np.zeros((pad_dim,int(features)) (62, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 40, 14, 2]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 5
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (40, 4)
TEST np.zeros((pad_dim,int(features)) (24, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (14, 4)
TEST np.zeros((pad_dim,int(features)) (50, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (2, 4)
TEST np.zeros((pad_dim,int(features)) (62, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 40, 16, 2]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 5
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (40, 4)
TEST np.zeros((pad_dim,int(features)) (24, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (16, 4)
TEST np.zeros((pad_dim,int(features)) (48, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (2, 4)
TEST np.zeros((pad_dim,int(features)) (62, 4)
--------------------------------------------------------------------------------
100%|█████████████████████████████████████████████████████████████████████| 37/37 [00:17<00:00,  2.13it/s, loss=0.679]
- Train metrics: accuracy: 0.5872 ; loss: 0.6754
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (38, 4)
TEST np.zeros((pad_dim,int(features)) (26, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (14, 4)
TEST np.zeros((pad_dim,int(features)) (50, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (4, 4)
TEST np.zeros((pad_dim,int(features)) (60, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 40, 10]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 4
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (40, 4)
TEST np.zeros((pad_dim,int(features)) (24, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (10, 4)
TEST np.zeros((pad_dim,int(features)) (54, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 50, 12, 4]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 5
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (50, 4)
TEST np.zeros((pad_dim,int(features)) (14, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (12, 4)
TEST np.zeros((pad_dim,int(features)) (52, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (4, 4)
TEST np.zeros((pad_dim,int(features)) (60, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 52, 16, 2, 2]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 6
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (52, 4)
TEST np.zeros((pad_dim,int(features)) (12, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (16, 4)
TEST np.zeros((pad_dim,int(features)) (48, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (2, 4)
TEST np.zeros((pad_dim,int(features)) (62, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (2, 4)
TEST np.zeros((pad_dim,int(features)) (62, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 42, 20, 8]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 5
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (42, 4)
TEST np.zeros((pad_dim,int(features)) (22, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (20, 4)
TEST np.zeros((pad_dim,int(features)) (44, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (8, 4)
TEST np.zeros((pad_dim,int(features)) (56, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 42, 6, 2]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 5
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (42, 4)
TEST np.zeros((pad_dim,int(features)) (22, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (6, 4)
TEST np.zeros((pad_dim,int(features)) (58, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (2, 4)
TEST np.zeros((pad_dim,int(features)) (62, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 36, 6]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 4
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (36, 4)
TEST np.zeros((pad_dim,int(features)) (28, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (6, 4)
TEST np.zeros((pad_dim,int(features)) (58, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 48, 14, 2]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 5
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 44, 6, 2]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 5
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level= 64
max_n_level and len(levels[i])= 64 64
--------------------------------------------------------------------------------
TEST contents[i].shape= (48, 4)
TEST np.zeros((pad_dim,int(features)) (16, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST contents[i].shape= (14, 4)
TEST np.zeros((pad_dim,int(features)) (50, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].sh--------------------------------------------------------------------------------
subjets per level= [32, 64, 42, 12]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 4
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
ape= (2, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST np.zeros((pad_dim,int(features)) (62, 4)
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST contents[i].shape= (42, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
TEST np.zeros((pad_dim,int(features)) (22, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (12, 4)
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (44, 4)
TEST np.zeros((pad_dim,int(features)) (52, 4)
TEST np.zeros((pad_dim,int(features)) (20, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (6, 4)
TEST np.zeros((pad_dim,int(features)) (58, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (2, 4)
TEST np.zeros((pad_dim,int(features)) (62, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 46, 16, 4, 4]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 6
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
subjets per level= [32, 64, 44, 6, 2]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 5
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
subjets per level= [32, 64, 44, 10]
--------------------------max_n_level= 64
------------------------------------------------------
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
--------------------------------------------------------------------------------
TEST contents[i].shape= (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
Number of levels= 4
--------------------------------------------------------------------------------
max_n_level and len(levels[i])= 64 64
TEST np.zeros((pad_dim,int(features)) (32, 4)
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
TEST np.zeros((pad_dim,int(features)) (0, 4)
max_n_level= 64
--------------------------------------------------------------------------------
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////////////////////////
TEST np.zeros((pad_dim,int(features)) (0, 4)
max_n_level and len(levels[i])= 64 64
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST contents[i].shape= (46, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
TEST np.zeros((pad_dim,int(features)) (18, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (44, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST np.zeros((pad_dim,int(features)) (20, 4)
TEST contents[i].shape= (16, 4)
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (48, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (6, 4)
TEST contents[i].shape= (4, 4)
TEST np.zeros((pad_dim,int(features)) (58, 4)
TEST np.zeros((pad_dim,int(features)) (60, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (2, 4)
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (4, 4)
TEST np.zeros((pad_dim,int(features)) (62, 4)
TEST np.zeros((pad_dim,int(features)) (60, 4)
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (44, 4)
TEST np.zeros((pad_dim,int(features)) (20, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (10, 4)
TEST np.zeros((pad_dim,int(features)) (54, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 36, 10, 2, 2]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 6
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (36, 4)
TEST np.zeros((pad_dim,int(features)) (28, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (10, 4)
TEST np.zeros((pad_dim,int(features)) (54, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (2, 4)
TEST np.zeros((pad_dim,int(features)) (62, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (2, 4)
TEST np.zeros((pad_dim,int(features)) (62, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 48, 8]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 4
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (48, 4)
TEST np.zeros((pad_dim,int(features)) (16, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (8, 4)
TEST np.zeros((pad_dim,int(features)) (56, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 60, 18]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 4
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (60, 4)
TEST np.zeros((pad_dim,int(features)) (4, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (18, 4)
TEST np.zeros((pad_dim,int(features)) (46, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 50, 12, 2]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 5
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (50, 4)
TEST np.zeros((pad_dim,int(features)) (14, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (12, 4)
TEST np.zeros((pad_dim,int(features)) (52, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (2, 4)
TEST np.zeros((pad_dim,int(features)) (62, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 44, 8]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 4
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (44, 4)
TEST np.zeros((pad_dim,int(features)) (20, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (8, 4)
TEST np.zeros((pad_dim,int(features)) (56, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 50, 10]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 4
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (50, 4)
TEST np.zeros((pad_dim,int(features)) (14, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (10, 4)
TEST np.zeros((pad_dim,int(features)) (54, 4)
train.py:220: RuntimeWarning: divide by zero encountered in true_divide
  inv_fpr = interp(base_tpr, tpr, 1. / fpr)[125]
- Eval metrics : accuracy: 0.5286 ; loss: 0.6994
Checkpoint Directory exists!
- Found new best bg rejection = 4.333333333333333
Epoch 13/30
100%|█████████████████████████████████████████████████████████████████████| 37/37 [00:16<00:00,  2.26it/s, loss=0.677]
- Train metrics: accuracy: 0.5970 ; loss: 0.6733
--------------------------------------------------------------------------------
subjets per level= [32, 64, 46, 14, 2]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 5
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
subjets per level= [32, 64, 44, 10]
max_n_level and len(levels[i])= 64 64
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
TEST contents[i].shape= (32, 4)
Number of levels= 4
--------------------------------------------------------------------------------
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
max_n_level= 64
TEST contents[i].shape= (46, 4)
--------------------------------------------------------------------------------
TEST np.zeros((pad_dim,int(features)) (18, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
max_n_level and len(levels[i])= 64 64
--------------------------------------------------------------------------------
TEST contents[i].shape= (32, 4)
TEST contents[i].shape= (14, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
TEST np.zeros((pad_dim,int(features)) (50, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
subjets per level= [32, 64, 42, 14]
max_n_level and len(levels[i])= 64 64
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
Number of levels= 4
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (2, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
TEST np.zeros((pad_dim,int(features)) (62, 4)
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (44, 4)
TEST np.zeros((pad_dim,int(features)) (20, 4)
max_n_level= 64
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (10, 4)
TEST np.zeros((pad_dim,int(features)) (54, 4)
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (42, 4)
TEST np.zeros((pad_dim,int(features)) (22, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (14, 4)
TEST np.zeros((pad_dim,int(features)) (50, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 44, 12]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 4
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
subjets per level= [32, 64, 40, 12, 4]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 5
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
--------------------------------------------------------------------------------
subjets per level= [32, 64, 44, 10]
max_n_level and len(levels[i])= 64 64
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
TEST contents[i].shape= (32, 4)
Number of levels= 4
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (44, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
TEST np.zeros((pad_dim,int(features)) (20, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
////////////////////////////////////////////////////////////////////////////////////////////////////
TEST contents[i].shape= (40, 4)
max_n_level and len(levels[i])= 64 64
TEST np.zeros((pad_dim,int(features)) (24, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST np.zeros((pad_dim,int(features)) (0, 4)
TEST contents[i].shape= (12, 4)
TEST np.zeros((pad_dim,int(features)) (52, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
////////////////////////////////////////////////////////////////////////////////////////////////////
TEST contents[i].shape= (10, 4)
TEST contents[i].shape= (4, 4)
TEST np.zeros((pad_dim,int(features)) (60, 4)
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (44, 4)
TEST np.zeros((pad_dim,int(features)) (54, 4)
TEST np.zeros((pad_dim,int(features)) (20, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (12, 4)
TEST np.zeros((pad_dim,int(features)) (52, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 44, 10, 2]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 5
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (44, 4)
TEST np.zeros((pad_dim,int(features)) (20, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (10, 4)
TEST np.zeros((pad_dim,int(features)) (54, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (2, 4)
TEST np.zeros((pad_dim,int(features)) (62, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 36, 6, 2]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 5
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (36, 4)
TEST np.zeros((pad_dim,int(features)) (28, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (6, 4)
TEST np.zeros((pad_dim,int(features)) (58, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (2, 4)
TEST np.zeros((pad_dim,int(features)) (62, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 30, 4]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 4
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (30, 4)
TEST np.zeros((pad_dim,int(features)) (34, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (4, 4)
TEST np.zeros((pad_dim,int(features)) (60, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 44, 10, 4]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 5
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (44, 4)
TEST np.zeros((pad_dim,int(features)) (20, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (10, 4)
TEST np.zeros((pad_dim,int(features)) (54, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (4, 4)
TEST np.zeros((pad_dim,int(features)) (60, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 46, 10]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 4
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (46, 4)
TEST np.zeros((pad_dim,int(features)) (18, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (10, 4)
TEST np.zeros((pad_dim,int(features)) (54, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 46, 10, 2]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 5
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (46, 4)
TEST np.zeros((pad_dim,int(features)) (18, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (10, 4)
TEST np.zeros((pad_dim,int(features)) (54, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (2, 4)
TEST np.zeros((pad_dim,int(features)) (62, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 48, 12, 2]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 5
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (48, 4)
TEST np.zeros((pad_dim,int(features)) (16, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (12, 4)
TEST np.zeros((pad_dim,int(features)) (52, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (2, 4)
TEST np.zeros((pad_dim,int(features)) (62, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 40, 12]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 4
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (40, 4)
TEST np.zeros((pad_dim,int(features)) (24, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (12, 4)
TEST np.zeros((pad_dim,int(features)) (52, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 56, 10]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 4
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (56, 4)
TEST np.zeros((pad_dim,int(features)) (8, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (10, 4)
TEST np.zeros((pad_dim,int(features)) (54, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 38, 2]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 4
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (38, 4)
TEST np.zeros((pad_dim,int(features)) (26, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (2, 4)
TEST np.zeros((pad_dim,int(features)) (62, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 40, 12, 4, 2]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 6
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (40, 4)
TEST np.zeros((pad_dim,int(features)) (24, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (12, 4)
TEST np.zeros((pad_dim,int(features)) (52, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (4, 4)
TEST np.zeros((pad_dim,int(features)) (60, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (2, 4)
TEST np.zeros((pad_dim,int(features)) (62, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 38, 8]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 4
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (38, 4)
TEST np.zeros((pad_dim,int(features)) (26, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (8, 4)
TEST np.zeros((pad_dim,int(features)) (56, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 48, 4]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 4
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (48, 4)
TEST np.zeros((pad_dim,int(features)) (16, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (4, 4)
TEST np.zeros((pad_dim,int(features)) (60, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 42, 14]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 4
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (42, 4)
TEST np.zeros((pad_dim,int(features)) (22, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (14, 4)
TEST np.zeros((pad_dim,int(features)) (50, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 42, 14, 2]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 5
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (42, 4)
TEST np.zeros((pad_dim,int(features)) (22, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (14, 4)
TEST np.zeros((pad_dim,int(features)) (50, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (2, 4)
TEST np.zeros((pad_dim,int(features)) (62, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 42, 12, 2]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 5
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (42, 4)
TEST np.zeros((pad_dim,int(features)) (22, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (12, 4)
TEST np.zeros((pad_dim,int(features)) (52, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (2, 4)
TEST np.zeros((pad_dim,int(features)) (62, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 50, 14, 4]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 5
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (50, 4)
TEST np.zeros((pad_dim,int(features)) (14, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (14, 4)
TEST np.zeros((pad_dim,int(features)) (50, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (4, 4)
TEST np.zeros((pad_dim,int(features)) (60, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 44, 8, 2]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 5
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (44, 4)
TEST np.zeros((pad_dim,int(features)) (20, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (8, 4)
TEST np.zeros((pad_dim,int(features)) (56, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (2, 4)
TEST np.zeros((pad_dim,int(features)) (62, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 48, 10, 2]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 5
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (48, 4)
TEST np.zeros((pad_dim,int(features)) (16, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (10, 4)
TEST np.zeros((pad_dim,int(features)) (54, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (2, 4)
TEST np.zeros((pad_dim,int(features)) (62, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 44, 14, 4]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 5
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (44, 4)
TEST np.zeros((pad_dim,int(features)) (20, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (14, 4)
TEST np.zeros((pad_dim,int(features)) (50, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (4, 4)
TEST np.zeros((pad_dim,int(features)) (60, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 38, 12, 2]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 5
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (38, 4)
TEST np.zeros((pad_dim,int(features)) (26, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (12, 4)
TEST np.zeros((pad_dim,int(features)) (52, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (2, 4)
TEST np.zeros((pad_dim,int(features)) (62, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 44, 16, 2]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 5
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (44, 4)
TEST np.zeros((pad_dim,int(features)) (20, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (16, 4)
TEST np.zeros((pad_dim,int(features)) (48, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (2, 4)
TEST np.zeros((pad_dim,int(features)) (62, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 40, 14, 2]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 5
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (40, 4)
TEST np.zeros((pad_dim,int(features)) (24, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (14, 4)
TEST np.zeros((pad_dim,int(features)) (50, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (2, 4)
TEST np.zeros((pad_dim,int(features)) (62, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 40, 16, 2]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 5
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (40, 4)
TEST np.zeros((pad_dim,int(features)) (24, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (16, 4)
TEST np.zeros((pad_dim,int(features)) (48, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (2, 4)
TEST np.zeros((pad_dim,int(features)) (62, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 38, 14, 4]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 5
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (38, 4)
TEST np.zeros((pad_dim,int(features)) (26, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (14, 4)
TEST np.zeros((pad_dim,int(features)) (50, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (4, 4)
TEST np.zeros((pad_dim,int(features)) (60, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 40, 10]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 4
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (40, 4)
TEST np.zeros((pad_dim,int(features)) (24, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (10, 4)
TEST np.zeros((pad_dim,int(features)) (54, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 50, 12, 4]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 5
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (50, 4)
TEST np.zeros((pad_dim,int(features)) (14, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (12, 4)
TEST np.zeros((pad_dim,int(features)) (52, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (4, 4)
TEST np.zeros((pad_dim,int(features)) (60, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 52, 16, 2, 2]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 6
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (52, 4)
TEST np.zeros((pad_dim,int(features)) (12, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (16, 4)
TEST np.zeros((pad_dim,int(features)) (48, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (2, 4)
TEST np.zeros((pad_dim,int(features)) (62, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (2, 4)
TEST np.zeros((pad_dim,int(features)) (62, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 42, 20, 8]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 5
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (42, 4)
TEST np.zeros((pad_dim,int(features)) (22, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (20, 4)
TEST np.zeros((pad_dim,int(features)) (44, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (8, 4)
TEST np.zeros((pad_dim,int(features)) (56, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 42, 6, 2]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 5
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (42, 4)
TEST np.zeros((pad_dim,int(features)) (22, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (6, 4)
TEST np.zeros((pad_dim,int(features)) (58, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (2, 4)
TEST np.zeros((pad_dim,int(features)) (62, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 36, 6]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 4
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (36, 4)
TEST np.zeros((pad_dim,int(features)) (28, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (6, 4)
TEST np.zeros((pad_dim,int(features)) (58, 4)
train.py:220: RuntimeWarning: divide by zero encountered in true_divide
  inv_fpr = interp(base_tpr, tpr, 1. / fpr)[125]
- Eval metrics : accuracy: 0.5260 ; loss: 0.7005
--------------------------------------------------------------------------------
subjets per level= [32, 64, 48, 14, 2]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 5
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (48, 4)
TEST np.zeros((pad_dim,int(features)) (16, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (14, 4)
TEST np.zeros((pad_dim,int(features)) (50, 4)
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (2, 4)
TEST np.zeros((pad_dim,int(features)) (62, 4)
subjets per level= [32, 64, 44, 6, 2]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 5
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (44, 4)
TEST np.zeros((pad_dim,int(features)) (20, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (6, 4)
TEST np.zeros((pad_dim,int(features)) (58, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (2, 4)
TEST np.zeros((pad_dim,int(features)) (62, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 42, 12]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 4
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (42, 4)
TEST np.zeros((pad_dim,int(features)) (22, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (12, 4)
TEST np.zeros((pad_dim,int(features)) (52, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 44, 10]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 4
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
max_n_level= 64
subjets per level= [32, 64, 46, 16, 4, 4]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 6
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
////////////////////////////////////////////////////////////////////////////////////////////////////
TEST contents[i].shape= (64, 4)
max_n_level and len(levels[i])= 64 64
TEST np.zeros((pad_dim,int(features)) (0, 4)
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
////////////////////////////////////////////////////////////////////////////////////////////////////
TEST contents[i].shape= (44, 4)
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (20, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
--------------------------------------------------------------------------------
subjets per level= [32, 64, 44, 6, 2]
max_n_level and len(levels[i])= 64 64
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
TEST contents[i].shape= (10, 4)
Number of levels= 5
--------------------------------------------------------------------------------
TEST np.zeros((pad_dim,int(features)) (54, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (46, 4)
TEST np.zeros((pad_dim,int(features)) (18, 4)
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (16, 4)
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
TEST np.zeros((pad_dim,int(features)) (48, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
////////////////////////////////////////////////////////////////////////////////////////////////////
TEST contents[i].shape= (64, 4)
max_n_level and len(levels[i])= 64 64
TEST np.zeros((pad_dim,int(features)) (0, 4)
TEST contents[i].shape= (4, 4)
TEST np.zeros((pad_dim,int(features)) (60, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (4, 4)
TEST np.zeros((pad_dim,int(features)) (60, 4)
TEST contents[i].shape= (44, 4)
TEST np.zeros((pad_dim,int(features)) (20, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (6, 4)
TEST np.zeros((pad_dim,int(features)) (58, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (2, 4)
TEST np.zeros((pad_dim,int(features)) (62, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 36, 10, 2, 2]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 6
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (36, 4)
TEST np.zeros((pad_dim,int(features)) (28, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (10, 4)
TEST np.zeros((pad_dim,int(features)) (54, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (2, 4)
TEST np.zeros((pad_dim,int(features)) (62, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (2, 4)
TEST np.zeros((pad_dim,int(features)) (62, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 48, 8]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 4
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (48, 4)
TEST np.zeros((pad_dim,int(features)) (16, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (8, 4)
TEST np.zeros((pad_dim,int(features)) (56, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 60, 18]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 4
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (60, 4)
TEST np.zeros((pad_dim,int(features)) (4, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (18, 4)
TEST np.zeros((pad_dim,int(features)) (46, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 50, 12, 2]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 5
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (50, 4)
TEST np.zeros((pad_dim,int(features)) (14, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (12, 4)
TEST np.zeros((pad_dim,int(features)) (52, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (2, 4)
TEST np.zeros((pad_dim,int(features)) (62, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 44, 8]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 4
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (44, 4)
TEST np.zeros((pad_dim,int(features)) (20, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (8, 4)
TEST np.zeros((pad_dim,int(features)) (56, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 50, 10]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 4
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (50, 4)
TEST np.zeros((pad_dim,int(features)) (14, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (10, 4)
TEST np.zeros((pad_dim,int(features)) (54, 4)
- Found new best bg rejection = 4.333333333333333
Epoch 14/30
  0%|                                                                                          | 0/37 [00:00<?, ?it/s]
100%|█████████████████████████████████████████████████████████████████████| 37/37 [00:16<00:00,  2.23it/s, loss=0.675]
- Train metrics: accuracy: 0.5905 ; loss: 0.6713
--------------------------------------------------------------------------------
subjets per level= [32, 64, 46, 14, 2]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 5
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (46, 4)
TEST np.zeros((pad_dim,int(features)) (18, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (14, 4)
TEST np.zeros((pad_dim,int(features)) (50, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (2, 4)
TEST np.zeros((pad_dim,int(features)) (62, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 44, 10]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 4
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (44, 4)
TEST np.zeros((pad_dim,int(features)) (20, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (10, 4)
TEST np.zeros((pad_dim,int(features)) (54, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 42, 14]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 4
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (42, 4)
TEST np.zeros((pad_dim,int(features)) (22, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (14, 4)
TEST np.zeros((pad_dim,int(features)) (50, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 40, 12, 4]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 5
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (40, 4)
TEST np.zeros((pad_dim,int(features)) (24, 4)
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
subjets per level= [32, 64, 44, 12]
subjets per level= [32, 64, 44, 10]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
--------------------------------------------------------------------------------
Number of levels= 4
--------------------------------------------------------------------------------
Number of levels= 4
--------------------------------------------------------------------------------
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (12, 4)
TEST np.zeros((pad_dim,int(features)) (52, 4)
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (4, 4)
TEST np.zeros((pad_dim,int(features)) (60, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level= 64
--------------------------------------------------------------------------------
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
////////////////////////////////////////////////////////////////////////////////////////////////////
TEST contents[i].shape= (32, 4)
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (44, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
TEST np.zeros((pad_dim,int(features)) (20, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (10, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
TEST np.zeros((pad_dim,int(features)) (54, 4)
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (44, 4)
TEST np.zeros((pad_dim,int(features)) (20, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (12, 4)
TEST np.zeros((pad_dim,int(features)) (52, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 44, 10, 2]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 5
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (44, 4)
TEST np.zeros((pad_dim,int(features)) (20, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (10, 4)
TEST np.zeros((pad_dim,int(features)) (54, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (2, 4)
TEST np.zeros((pad_dim,int(features)) (62, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 36, 6, 2]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 5
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (36, 4)
TEST np.zeros((pad_dim,int(features)) (28, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (6, 4)
TEST np.zeros((pad_dim,int(features)) (58, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (2, 4)
TEST np.zeros((pad_dim,int(features)) (62, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 30, 4]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 4
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (30, 4)
TEST np.zeros((pad_dim,int(features)) (34, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (4, 4)
TEST np.zeros((pad_dim,int(features)) (60, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 44, 10, 4]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 5
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (44, 4)
TEST np.zeros((pad_dim,int(features)) (20, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (10, 4)
TEST np.zeros((pad_dim,int(features)) (54, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (4, 4)
TEST np.zeros((pad_dim,int(features)) (60, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 46, 10]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 4
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (46, 4)
TEST np.zeros((pad_dim,int(features)) (18, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (10, 4)
TEST np.zeros((pad_dim,int(features)) (54, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 46, 10, 2]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 5
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (46, 4)
TEST np.zeros((pad_dim,int(features)) (18, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (10, 4)
TEST np.zeros((pad_dim,int(features)) (54, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (2, 4)
TEST np.zeros((pad_dim,int(features)) (62, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 48, 12, 2]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 5
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (48, 4)
TEST np.zeros((pad_dim,int(features)) (16, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (12, 4)
TEST np.zeros((pad_dim,int(features)) (52, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (2, 4)
TEST np.zeros((pad_dim,int(features)) (62, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 40, 12]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 4
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (40, 4)
TEST np.zeros((pad_dim,int(features)) (24, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (12, 4)
TEST np.zeros((pad_dim,int(features)) (52, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 56, 10]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 4
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (56, 4)
TEST np.zeros((pad_dim,int(features)) (8, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (10, 4)
TEST np.zeros((pad_dim,int(features)) (54, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 38, 2]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 4
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (38, 4)
TEST np.zeros((pad_dim,int(features)) (26, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (2, 4)
TEST np.zeros((pad_dim,int(features)) (62, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 40, 12, 4, 2]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 6
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (40, 4)
TEST np.zeros((pad_dim,int(features)) (24, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (12, 4)
TEST np.zeros((pad_dim,int(features)) (52, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (4, 4)
TEST np.zeros((pad_dim,int(features)) (60, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (2, 4)
TEST np.zeros((pad_dim,int(features)) (62, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 38, 8]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 4
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (38, 4)
TEST np.zeros((pad_dim,int(features)) (26, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (8, 4)
TEST np.zeros((pad_dim,int(features)) (56, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 48, 4]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 4
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (48, 4)
TEST np.zeros((pad_dim,int(features)) (16, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (4, 4)
TEST np.zeros((pad_dim,int(features)) (60, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 42, 14]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 4
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (42, 4)
TEST np.zeros((pad_dim,int(features)) (22, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (14, 4)
TEST np.zeros((pad_dim,int(features)) (50, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 42, 14, 2]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 5
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (42, 4)
TEST np.zeros((pad_dim,int(features)) (22, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (14, 4)
TEST np.zeros((pad_dim,int(features)) (50, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (2, 4)
TEST np.zeros((pad_dim,int(features)) (62, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 42, 12, 2]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 5
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (42, 4)
TEST np.zeros((pad_dim,int(features)) (22, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (12, 4)
TEST np.zeros((pad_dim,int(features)) (52, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (2, 4)
TEST np.zeros((pad_dim,int(features)) (62, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 50, 14, 4]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 5
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (50, 4)
TEST np.zeros((pad_dim,int(features)) (14, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (14, 4)
TEST np.zeros((pad_dim,int(features)) (50, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (4, 4)
TEST np.zeros((pad_dim,int(features)) (60, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 44, 8, 2]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 5
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (44, 4)
TEST np.zeros((pad_dim,int(features)) (20, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (8, 4)
TEST np.zeros((pad_dim,int(features)) (56, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (2, 4)
TEST np.zeros((pad_dim,int(features)) (62, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 48, 10, 2]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 5
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (48, 4)
TEST np.zeros((pad_dim,int(features)) (16, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (10, 4)
TEST np.zeros((pad_dim,int(features)) (54, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (2, 4)
TEST np.zeros((pad_dim,int(features)) (62, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 44, 14, 4]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 5
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (44, 4)
TEST np.zeros((pad_dim,int(features)) (20, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (14, 4)
TEST np.zeros((pad_dim,int(features)) (50, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (4, 4)
TEST np.zeros((pad_dim,int(features)) (60, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 38, 12, 2]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 5
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (38, 4)
TEST np.zeros((pad_dim,int(features)) (26, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (12, 4)
TEST np.zeros((pad_dim,int(features)) (52, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (2, 4)
TEST np.zeros((pad_dim,int(features)) (62, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 44, 16, 2]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 5
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (44, 4)
TEST np.zeros((pad_dim,int(features)) (20, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (16, 4)
TEST np.zeros((pad_dim,int(features)) (48, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (2, 4)
TEST np.zeros((pad_dim,int(features)) (62, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 40, 14, 2]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 5
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (40, 4)
TEST np.zeros((pad_dim,int(features)) (24, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (14, 4)
TEST np.zeros((pad_dim,int(features)) (50, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (2, 4)
TEST np.zeros((pad_dim,int(features)) (62, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 40, 16, 2]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 5
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (40, 4)
TEST np.zeros((pad_dim,int(features)) (24, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (16, 4)
TEST np.zeros((pad_dim,int(features)) (48, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (2, 4)
TEST np.zeros((pad_dim,int(features)) (62, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 38, 14, 4]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 5
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (38, 4)
TEST np.zeros((pad_dim,int(features)) (26, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (14, 4)
TEST np.zeros((pad_dim,int(features)) (50, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (4, 4)
TEST np.zeros((pad_dim,int(features)) (60, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 40, 10]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 4
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (40, 4)
TEST np.zeros((pad_dim,int(features)) (24, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (10, 4)
TEST np.zeros((pad_dim,int(features)) (54, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 50, 12, 4]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 5
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (50, 4)
TEST np.zeros((pad_dim,int(features)) (14, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (12, 4)
TEST np.zeros((pad_dim,int(features)) (52, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (4, 4)
TEST np.zeros((pad_dim,int(features)) (60, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 52, 16, 2, 2]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 6
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (52, 4)
TEST np.zeros((pad_dim,int(features)) (12, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (16, 4)
TEST np.zeros((pad_dim,int(features)) (48, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (2, 4)
TEST np.zeros((pad_dim,int(features)) (62, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (2, 4)
TEST np.zeros((pad_dim,int(features)) (62, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 42, 20, 8]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 5
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (42, 4)
TEST np.zeros((pad_dim,int(features)) (22, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (20, 4)
TEST np.zeros((pad_dim,int(features)) (44, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (8, 4)
TEST np.zeros((pad_dim,int(features)) (56, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 42, 6, 2]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 5
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (42, 4)
TEST np.zeros((pad_dim,int(features)) (22, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (6, 4)
TEST np.zeros((pad_dim,int(features)) (58, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (2, 4)
TEST np.zeros((pad_dim,int(features)) (62, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 36, 6]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 4
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (36, 4)
TEST np.zeros((pad_dim,int(features)) (28, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (6, 4)
TEST np.zeros((pad_dim,int(features)) (58, 4)
train.py:220: RuntimeWarning: divide by zero encountered in true_divide
  inv_fpr = interp(base_tpr, tpr, 1. / fpr)[125]
- Eval metrics : accuracy: 0.5260 ; loss: 0.7022
--------------------------------------------------------------------------------
subjets per level= [32, 64, 48, 14, 2]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 5
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (48, 4)
TEST np.zeros((pad_dim,int(features)) (16, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
--------------------------------------------------------------------------------
TEST contents[i].shape= (14, 4)
subjets per level= [32, 64, 44, 6, 2]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
TEST np.zeros((pad_dim,int(features)) (50, 4)
Number of levels= 5
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (2, 4)
TEST np.zeros((pad_dim,int(features)) (62, 4)
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
--------------------------------------------------------------------------------
subjets per level= [32, 64, 42, 12]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 4
--------------------------------------------------------------------------------
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (44, 4)
max_n_level= 64
TEST np.zeros((pad_dim,int(features)) (20, 4)
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
////////////////////////////////////////////////////////////////////////////////////////////////////
TEST contents[i].shape= (32, 4)
max_n_level and len(levels[i])= 64 64
TEST np.zeros((pad_dim,int(features)) (32, 4)
TEST contents[i].shape= (6, 4)
TEST np.zeros((pad_dim,int(features)) (58, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST contents[i].shape= (2, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
TEST np.zeros((pad_dim,int(features)) (62, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (42, 4)
TEST np.zeros((pad_dim,int(features)) (22, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (12, 4)
TEST np.zeros((pad_dim,int(features)) (52, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 44, 10]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 4
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
//////////////////////////////////////////////////////////////////////////////////////////////////--------------------------------------------------------------------------------
subjets per level= [32, 64, 44, 6, 2]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 5
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
subjets per level= [32, 64, 46, 16, 4, 4]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 6
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level= 64
max_n_level and len(levels[i])= 64 64
--------------------------------------------------------------------------------
//
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
max_n_level and len(levels[i])= 64 64
////////////////////////////////////////////////////////////////////////////////////////////////////
TEST contents[i].shape= (44, 4)
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
TEST np.zeros((pad_dim,int(features)) (20, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
////////////////////////////////////////////////////////////////////////////////////////////////////
TEST contents[i].shape= (46, 4)
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (10, 4)
TEST np.zeros((pad_dim,int(features)) (18, 4)
TEST np.zeros((pad_dim,int(features)) (54, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (16, 4)
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (48, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
TEST np.zeros((pad_dim,int(features)) (32, 4)
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (4, 4)
TEST np.zeros((pad_dim,int(features)) (60, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (4, 4)
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (60, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (44, 4)
TEST np.zeros((pad_dim,int(features)) (20, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (6, 4)
TEST np.zeros((pad_dim,int(features)) (58, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (2, 4)
TEST np.zeros((pad_dim,int(features)) (62, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 36, 10, 2, 2]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 6
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (36, 4)
TEST np.zeros((pad_dim,int(features)) (28, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (10, 4)
TEST np.zeros((pad_dim,int(features)) (54, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (2, 4)
TEST np.zeros((pad_dim,int(features)) (62, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (2, 4)
TEST np.zeros((pad_dim,int(features)) (62, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 48, 8]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 4
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (48, 4)
TEST np.zeros((pad_dim,int(features)) (16, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (8, 4)
TEST np.zeros((pad_dim,int(features)) (56, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 60, 18]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 4
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (60, 4)
TEST np.zeros((pad_dim,int(features)) (4, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (18, 4)
TEST np.zeros((pad_dim,int(features)) (46, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 50, 12, 2]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 5
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (50, 4)
TEST np.zeros((pad_dim,int(features)) (14, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (12, 4)
TEST np.zeros((pad_dim,int(features)) (52, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (2, 4)
TEST np.zeros((pad_dim,int(features)) (62, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 44, 8]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 4
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (44, 4)
TEST np.zeros((pad_dim,int(features)) (20, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (8, 4)
TEST np.zeros((pad_dim,int(features)) (56, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 50, 10]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 4
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (50, 4)
TEST np.zeros((pad_dim,int(features)) (14, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (10, 4)
TEST np.zeros((pad_dim,int(features)) (54, 4)
Epoch 15/30
  0%|                                                                                          | 0/37 [00:00<?, ?it/s]
100%|█████████████████████████████████████████████████████████████████████| 37/37 [00:16<00:00,  2.24it/s, loss=0.673]
- Train metrics: accuracy: 0.5888 ; loss: 0.6692
--------------------------------------------------------------------------------
subjets per level= [32, 64, 46, 14, 2]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 5
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
subjets per level= [32, 64, 44, 10]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 4
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
////////////////////////////////////////////////////////////////////////////////////////////////////
TEST contents[i].shape= (32, 4)
max_n_level and len(levels[i])= 64 64
TEST np.zeros((pad_dim,int(features)) (32, 4)
TEST contents[i].shape= (46, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 42, 14]
TEST np.zeros((pad_dim,int(features)) (18, 4)
----------------------------------------------------------------////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (14, 4)
TEST np.zeros((pad_dim,int(features)) (50, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
----------------
TEST contents[i].shape= (2, 4)
--------------------------------------------------------------------------------
TEST np.zeros((pad_dim,int(features)) (62, 4)
Number of levels= 4
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
max_n_level= 64
TEST contents[i].shape= (44, 4)
--------------------------------------------------------------------------------
TEST np.zeros((pad_dim,int(features)) (20, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
TEST np.zeros((pad_dim,int(features)) (32, 4)
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (10, 4)
TEST np.zeros((pad_dim,int(features)) (54, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (42, 4)
TEST np.zeros((pad_dim,int(features)) (22, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (14, 4)
TEST np.zeros((pad_dim,int(features)) (50, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 44, 12]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 4
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (44, 4)
TEST np.zeros((pad_dim,int(features)) (20, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (12, 4)
TEST np.zeros((pad_dim,int(features)) (52, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 44, 10]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 4
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
subjets per level= [32, 64, 40, 12, 4]
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
--------------------------------------------------------------------------------
TEST contents[i].shape= (32, 4)
Number of levels= 5
--------------------------------------------------------------------------------
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
max_n_level= 64
TEST np.zeros((pad_dim,int(features)) (0, 4)
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (44, 4)
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (20, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (10, 4)
TEST np.zeros((pad_dim,int(features)) (54, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (40, 4)
TEST np.zeros((pad_dim,int(features)) (24, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (12, 4)
TEST np.zeros((pad_dim,int(features)) (52, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (4, 4)
TEST np.zeros((pad_dim,int(features)) (60, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 44, 10, 2]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 5
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (44, 4)
TEST np.zeros((pad_dim,int(features)) (20, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (10, 4)
TEST np.zeros((pad_dim,int(features)) (54, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (2, 4)
TEST np.zeros((pad_dim,int(features)) (62, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 36, 6, 2]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 5
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (36, 4)
TEST np.zeros((pad_dim,int(features)) (28, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (6, 4)
TEST np.zeros((pad_dim,int(features)) (58, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (2, 4)
TEST np.zeros((pad_dim,int(features)) (62, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 30, 4]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 4
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (30, 4)
TEST np.zeros((pad_dim,int(features)) (34, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (4, 4)
TEST np.zeros((pad_dim,int(features)) (60, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 44, 10, 4]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 5
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (44, 4)
TEST np.zeros((pad_dim,int(features)) (20, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (10, 4)
TEST np.zeros((pad_dim,int(features)) (54, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (4, 4)
TEST np.zeros((pad_dim,int(features)) (60, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 46, 10]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 4
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (46, 4)
TEST np.zeros((pad_dim,int(features)) (18, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (10, 4)
TEST np.zeros((pad_dim,int(features)) (54, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 46, 10, 2]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 5
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (46, 4)
TEST np.zeros((pad_dim,int(features)) (18, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (10, 4)
TEST np.zeros((pad_dim,int(features)) (54, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (2, 4)
TEST np.zeros((pad_dim,int(features)) (62, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 48, 12, 2]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 5
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (48, 4)
TEST np.zeros((pad_dim,int(features)) (16, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (12, 4)
TEST np.zeros((pad_dim,int(features)) (52, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (2, 4)
TEST np.zeros((pad_dim,int(features)) (62, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 40, 12]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 4
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (40, 4)
TEST np.zeros((pad_dim,int(features)) (24, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (12, 4)
TEST np.zeros((pad_dim,int(features)) (52, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 56, 10]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 4
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (56, 4)
TEST np.zeros((pad_dim,int(features)) (8, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (10, 4)
TEST np.zeros((pad_dim,int(features)) (54, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 38, 2]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 4
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (38, 4)
TEST np.zeros((pad_dim,int(features)) (26, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (2, 4)
TEST np.zeros((pad_dim,int(features)) (62, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 40, 12, 4, 2]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 6
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (40, 4)
TEST np.zeros((pad_dim,int(features)) (24, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (12, 4)
TEST np.zeros((pad_dim,int(features)) (52, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (4, 4)
TEST np.zeros((pad_dim,int(features)) (60, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (2, 4)
TEST np.zeros((pad_dim,int(features)) (62, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 38, 8]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 4
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (38, 4)
TEST np.zeros((pad_dim,int(features)) (26, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (8, 4)
TEST np.zeros((pad_dim,int(features)) (56, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 48, 4]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 4
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (48, 4)
TEST np.zeros((pad_dim,int(features)) (16, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (4, 4)
TEST np.zeros((pad_dim,int(features)) (60, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 42, 14]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 4
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (42, 4)
TEST np.zeros((pad_dim,int(features)) (22, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (14, 4)
TEST np.zeros((pad_dim,int(features)) (50, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 42, 14, 2]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 5
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (42, 4)
TEST np.zeros((pad_dim,int(features)) (22, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (14, 4)
TEST np.zeros((pad_dim,int(features)) (50, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (2, 4)
TEST np.zeros((pad_dim,int(features)) (62, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 42, 12, 2]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 5
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (42, 4)
TEST np.zeros((pad_dim,int(features)) (22, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (12, 4)
TEST np.zeros((pad_dim,int(features)) (52, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (2, 4)
TEST np.zeros((pad_dim,int(features)) (62, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 50, 14, 4]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 5
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (50, 4)
TEST np.zeros((pad_dim,int(features)) (14, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (14, 4)
TEST np.zeros((pad_dim,int(features)) (50, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (4, 4)
TEST np.zeros((pad_dim,int(features)) (60, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 44, 8, 2]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 5
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (44, 4)
TEST np.zeros((pad_dim,int(features)) (20, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (8, 4)
TEST np.zeros((pad_dim,int(features)) (56, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (2, 4)
TEST np.zeros((pad_dim,int(features)) (62, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 48, 10, 2]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 5
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (48, 4)
TEST np.zeros((pad_dim,int(features)) (16, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (10, 4)
TEST np.zeros((pad_dim,int(features)) (54, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (2, 4)
TEST np.zeros((pad_dim,int(features)) (62, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 44, 14, 4]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 5
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (44, 4)
TEST np.zeros((pad_dim,int(features)) (20, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (14, 4)
TEST np.zeros((pad_dim,int(features)) (50, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (4, 4)
TEST np.zeros((pad_dim,int(features)) (60, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 38, 12, 2]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 5
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (38, 4)
TEST np.zeros((pad_dim,int(features)) (26, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (12, 4)
TEST np.zeros((pad_dim,int(features)) (52, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (2, 4)
TEST np.zeros((pad_dim,int(features)) (62, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 44, 16, 2]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 5
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (44, 4)
TEST np.zeros((pad_dim,int(features)) (20, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (16, 4)
TEST np.zeros((pad_dim,int(features)) (48, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (2, 4)
TEST np.zeros((pad_dim,int(features)) (62, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 40, 14, 2]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 5
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (40, 4)
TEST np.zeros((pad_dim,int(features)) (24, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (14, 4)
TEST np.zeros((pad_dim,int(features)) (50, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (2, 4)
TEST np.zeros((pad_dim,int(features)) (62, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 40, 16, 2]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 5
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (40, 4)
TEST np.zeros((pad_dim,int(features)) (24, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (16, 4)
TEST np.zeros((pad_dim,int(features)) (48, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (2, 4)
TEST np.zeros((pad_dim,int(features)) (62, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 38, 14, 4]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 5
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (38, 4)
TEST np.zeros((pad_dim,int(features)) (26, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (14, 4)
TEST np.zeros((pad_dim,int(features)) (50, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (4, 4)
TEST np.zeros((pad_dim,int(features)) (60, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 40, 10]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 4
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (40, 4)
TEST np.zeros((pad_dim,int(features)) (24, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (10, 4)
TEST np.zeros((pad_dim,int(features)) (54, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 50, 12, 4]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 5
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (50, 4)
TEST np.zeros((pad_dim,int(features)) (14, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (12, 4)
TEST np.zeros((pad_dim,int(features)) (52, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (4, 4)
TEST np.zeros((pad_dim,int(features)) (60, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 52, 16, 2, 2]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 6
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (52, 4)
TEST np.zeros((pad_dim,int(features)) (12, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (16, 4)
TEST np.zeros((pad_dim,int(features)) (48, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (2, 4)
TEST np.zeros((pad_dim,int(features)) (62, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (2, 4)
TEST np.zeros((pad_dim,int(features)) (62, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 42, 20, 8]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 5
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (42, 4)
TEST np.zeros((pad_dim,int(features)) (22, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (20, 4)
TEST np.zeros((pad_dim,int(features)) (44, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (8, 4)
TEST np.zeros((pad_dim,int(features)) (56, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 42, 6, 2]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 5
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (42, 4)
TEST np.zeros((pad_dim,int(features)) (22, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (6, 4)
TEST np.zeros((pad_dim,int(features)) (58, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (2, 4)
TEST np.zeros((pad_dim,int(features)) (62, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 36, 6]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 4
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (36, 4)
TEST np.zeros((pad_dim,int(features)) (28, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (6, 4)
TEST np.zeros((pad_dim,int(features)) (58, 4)
train.py:220: RuntimeWarning: divide by zero encountered in true_divide
  inv_fpr = interp(base_tpr, tpr, 1. / fpr)[125]
- Eval metrics : accuracy: 0.5469 ; loss: 0.7033
Epoch 16/30
  0%|                                                                                          | 0/37 [00:00<?, ?it/s]
--------------------------------------------------------------------------------
subjets per level= [32, 64, 48, 14, 2]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 5
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (48, 4)
TEST np.zeros((pad_dim,int(features)) (16, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (14, 4)
TEST np.zeros((pad_dim,int(features)) (50, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (2, 4)
TEST np.zeros((pad_dim,int(features)) (62, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 44, 6, 2]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 5
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
subjets per level= [32, 64, 42, 12]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 4
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
////////////////////////////////////////////////////////////////////////////////////////////////////
TEST contents[i].shape= (32, 4)
max_n_level and len(levels[i])= 64 64
TEST np.zeros((pad_dim,int(features)) (32, 4)
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (44, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST np.zeros((pad_dim,int(features)) (20, 4)
TEST contents[i].shape= (42, 4)
TEST np.zeros((pad_dim,int(features)) (22, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (12, 4)
TEST contents[i].shape= (6, 4)
TEST np.zeros((pad_dim,int(features)) (52, 4)
TEST np.zeros((pad_dim,int(features)) (58, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (2, 4)
TEST np.zeros((pad_dim,int(features)) (62, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 46, 16, 4, 4]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 6
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (46, 4)
TEST np.zeros((pad_dim,int(features)) (18, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (16, 4)
TEST np.zeros((pad_dim,int(features)) (48, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (4, 4)
TEST np.zeros((pad_dim,int(features)) (60, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
T--------------------------------------------------------------------------------
EST contents[i].shape= (4, 4)
subjets per level= [32, 64, 44, 6, 2]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
TEST np.zeros((pad_dim,int(features)) (60, 4)
--------------------------------------------------------------------------------
Number of levels= 5
--------------------------------------------------------------------------------
subjets per level= [32, 64, 44, 10]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 4
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
max_n_level= 64
////////////////////////////////////////////////////////////////////////////////////////////////////
--------------------------------------------------------------------------------
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
TEST np.zeros((pad_dim,int(features)) (32, 4)
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST np.zeros((pad_dim,int(features)) (32, 4)
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST contents[i].shape= (44, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
TEST np.zeros((pad_dim,int(features)) (20, 4)
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (44, 4)
TEST np.zeros((pad_dim,int(features)) (20, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (6, 4)
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (10, 4)
TEST np.zeros((pad_dim,int(features)) (58, 4)
TEST np.zeros((pad_dim,int(features)) (54, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (2, 4)
TEST np.zeros((pad_dim,int(features)) (62, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 36, 10, 2, 2]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 6
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (36, 4)
TEST np.zeros((pad_dim,int(features)) (28, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (10, 4)
TEST np.zeros((pad_dim,int(features)) (54, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (2, 4)
TEST np.zeros((pad_dim,int(features)) (62, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (2, 4)
TEST np.zeros((pad_dim,int(features)) (62, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 48, 8]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 4
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (48, 4)
TEST np.zeros((pad_dim,int(features)) (16, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (8, 4)
TEST np.zeros((pad_dim,int(features)) (56, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 60, 18]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 4
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (60, 4)
TEST np.zeros((pad_dim,int(features)) (4, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (18, 4)
TEST np.zeros((pad_dim,int(features)) (46, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 50, 12, 2]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 5
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (50, 4)
TEST np.zeros((pad_dim,int(features)) (14, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (12, 4)
TEST np.zeros((pad_dim,int(features)) (52, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (2, 4)
TEST np.zeros((pad_dim,int(features)) (62, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 44, 8]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 4
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (44, 4)
TEST np.zeros((pad_dim,int(features)) (20, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (8, 4)
TEST np.zeros((pad_dim,int(features)) (56, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 50, 10]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 4
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (50, 4)
TEST np.zeros((pad_dim,int(features)) (14, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (10, 4)
TEST np.zeros((pad_dim,int(features)) (54, 4)
Checkpoint Directory exists!
--------------------------------------------------------------------------------
subjets per level= [32, 64, 46, 14, 2]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 5
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
///////////////////////////////////////////////////////////////////////////////////////////////--------------------------------------------------------------------------------
subjets per level= [32, 64, 42, 14]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 4
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 44, 10]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 4
--------------------------------------------------------------------------------
TEST np.zeros((pad_dim,int(features)) (32, 4)
/////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (46, 4)
TEST np.zeros((pad_dim,int(features)) (18, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
max_n_level= 64
////////////////////////////////////////////////////////////////////////////////////////////////////
--------------------------------------------------------------------------------
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (14, 4)
TEST np.zeros((pad_dim,int(features)) (50, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
////////////////////////////////////////////////////////////////////////////////////////////////////
TEST contents[i].shape= (32, 4)
max_n_level an////////////////////////////////////////////////////////////////////////////////////////////////////
TEST np.zeros((pad_dim,int(features)) (32, 4)
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (42, 4)
TEST np.zeros((pad_dim,int(features)) (22, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
TEST np.zeros((pad_dim,int(features)) (0, 4)
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (14, 4)
TEST np.zeros((pad_dim,int(features)) (50, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (44, 4)
TEST np.zeros((pad_dim,int(features)) (20, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
d len(levels[i])= 64 64
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (10, 4)
TEST contents[i].shape= (2, 4)
TEST np.zeros((pad_dim,int(features)) (54, 4)
TEST np.zeros((pad_dim,int(features)) (62, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 40, 12, 4]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 5
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 44, 12]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 4
////////////////////////////////////////////////////////////////////////////////////////////////////
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
subjets per level= [32, 64, 44, 10]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 4
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (44, 4)
TEST np.zeros((pad_dim,int(features)) (20, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (10, 4)
TEST np.zeros((pad_dim,int(features)) (54, 4)
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (40, 4)
max_n_level= 64
--------------------------------------------------------------------------------
TEST np.zeros((pad_dim,int(features)) (24, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST contents[i].shape= (12, 4)
TEST np.zeros((pad_dim,int(features)) (52, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (44, 4)
max_n_level and len(levels[i])= 64 64
TEST np.zeros((pad_dim,int(features)) (20, 4)
TEST contents[i].shape= (4, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (12, 4)
TEST np.zeros((pad_dim,int(features)) (52, 4)
TEST np.zeros((pad_dim,int(features)) (60, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 44, 10, 2]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 5
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (44, 4)
TEST np.zeros((pad_dim,int(features)) (20, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (10, 4)
TEST np.zeros((pad_dim,int(features)) (54, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (2, 4)
TEST np.zeros((pad_dim,int(features)) (62, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 36, 6, 2]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 5
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (36, 4)
TEST np.zeros((pad_dim,int(features)) (28, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (6, 4)
TEST np.zeros((pad_dim,int(features)) (58, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (2, 4)
TEST np.zeros((pad_dim,int(features)) (62, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 30, 4]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 4
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (30, 4)
TEST np.zeros((pad_dim,int(features)) (34, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (4, 4)
TEST np.zeros((pad_dim,int(features)) (60, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 44, 10, 4]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 5
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (44, 4)
TEST np.zeros((pad_dim,int(features)) (20, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (10, 4)
TEST np.zeros((pad_dim,int(features)) (54, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (4, 4)
TEST np.zeros((pad_dim,int(features)) (60, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 46, 10]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 4
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (46, 4)
TEST np.zeros((pad_dim,int(features)) (18, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (10, 4)
TEST np.zeros((pad_dim,int(features)) (54, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 46, 10, 2]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 5
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (46, 4)
TEST np.zeros((pad_dim,int(features)) (18, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (10, 4)
TEST np.zeros((pad_dim,int(features)) (54, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (2, 4)
TEST np.zeros((pad_dim,int(features)) (62, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 48, 12, 2]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 5
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (48, 4)
TEST np.zeros((pad_dim,int(features)) (16, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (12, 4)
TEST np.zeros((pad_dim,int(features)) (52, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (2, 4)
TEST np.zeros((pad_dim,int(features)) (62, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 40, 12]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 4
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (40, 4)
TEST np.zeros((pad_dim,int(features)) (24, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (12, 4)
TEST np.zeros((pad_dim,int(features)) (52, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 56, 10]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 4
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (56, 4)
TEST np.zeros((pad_dim,int(features)) (8, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (10, 4)
100%|█████████████████████████████████████████████████████████████████████| 37/37 [00:20<00:00,  1.78it/s, loss=0.670]
- Train metrics: accuracy: 0.5905 ; loss: 0.6669
100%|█████████████████████████████████████████████████████████████████████| 37/37 [00:20<00:00,  1.78it/s, loss=0.670]
TEST np.zeros((pad_dim,int(features)) (26, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (2, 4)
TEST np.zeros((pad_dim,int(features)) (62, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 40, 12, 4, 2]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 6
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (40, 4)
TEST np.zeros((pad_dim,int(features)) (24, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (12, 4)
TEST np.zeros((pad_dim,int(features)) (52, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (4, 4)
TEST np.zeros((pad_dim,int(features)) (60, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (2, 4)
TEST np.zeros((pad_dim,int(features)) (62, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 38, 8]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 4
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (38, 4)
TEST np.zeros((pad_dim,int(features)) (26, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (8, 4)
TEST np.zeros((pad_dim,int(features)) (56, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 48, 4]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 4
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (48, 4)
TEST np.zeros((pad_dim,int(features)) (16, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (4, 4)
TEST np.zeros((pad_dim,int(features)) (60, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 42, 14]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 4
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (42, 4)
TEST np.zeros((pad_dim,int(features)) (22, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (14, 4)
TEST np.zeros((pad_dim,int(features)) (50, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 42, 14, 2]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 5
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (42, 4)
TEST np.zeros((pad_dim,int(features)) (22, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (14, 4)
TEST np.zeros((pad_dim,int(features)) (50, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (2, 4)
TEST np.zeros((pad_dim,int(features)) (62, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 42, 12, 2]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 5
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (42, 4)
TEST np.zeros((pad_dim,int(features)) (22, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (12, 4)
TEST np.zeros((pad_dim,int(features)) (52, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (2, 4)
TEST np.zeros((pad_dim,int(features)) (62, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 50, 14, 4]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 5
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (50, 4)
TEST np.zeros((pad_dim,int(features)) (14, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (14, 4)
TEST np.zeros((pad_dim,int(features)) (50, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (4, 4)
TEST np.zeros((pad_dim,int(features)) (60, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 44, 8, 2]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 5
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (44, 4)
TEST np.zeros((pad_dim,int(features)) (20, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (8, 4)
TEST np.zeros((pad_dim,int(features)) (56, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (2, 4)
TEST np.zeros((pad_dim,int(features)) (62, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 48, 10, 2]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 5
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (48, 4)
TEST np.zeros((pad_dim,int(features)) (16, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (10, 4)
TEST np.zeros((pad_dim,int(features)) (54, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (2, 4)
TEST np.zeros((pad_dim,int(features)) (62, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 44, 14, 4]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 5
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (44, 4)
TEST np.zeros((pad_dim,int(features)) (20, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (14, 4)
TEST np.zeros((pad_dim,int(features)) (50, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (4, 4)
TEST np.zeros((pad_dim,int(features)) (60, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 38, 12, 2]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 5
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (38, 4)
TEST np.zeros((pad_dim,int(features)) (26, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (12, 4)
TEST np.zeros((pad_dim,int(features)) (52, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (2, 4)
TEST np.zeros((pad_dim,int(features)) (62, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 44, 16, 2]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 5
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (44, 4)
TEST np.zeros((pad_dim,int(features)) (20, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (16, 4)
TEST np.zeros((pad_dim,int(features)) (48, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (2, 4)
TEST np.zeros((pad_dim,int(features)) (62, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 40, 14, 2]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 5
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (40, 4)
TEST np.zeros((pad_dim,int(features)) (24, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (14, 4)
TEST np.zeros((pad_dim,int(features)) (50, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (2, 4)
TEST np.zeros((pad_dim,int(features)) (62, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 40, 16, 2]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 5
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (40, 4)
TEST np.zeros((pad_dim,int(features)) (24, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (16, 4)
TEST np.zeros((pad_dim,int(features)) (48, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (2, 4)
TEST np.zeros((pad_dim,int(features)) (62, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 38, 14, 4]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 5
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (38, 4)
TEST np.zeros((pad_dim,int(features)) (26, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (14, 4)
TEST np.zeros((pad_dim,int(features)) (50, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (4, 4)
TEST np.zeros((pad_dim,int(features)) (60, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 40, 10]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 4
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (40, 4)
TEST np.zeros((pad_dim,int(features)) (24, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (10, 4)
TEST np.zeros((pad_dim,int(features)) (54, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 50, 12, 4]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 5
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (50, 4)
TEST np.zeros((pad_dim,int(features)) (14, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (12, 4)
TEST np.zeros((pad_dim,int(features)) (52, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (4, 4)
TEST np.zeros((pad_dim,int(features)) (60, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 52, 16, 2, 2]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 6
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (52, 4)
TEST np.zeros((pad_dim,int(features)) (12, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (16, 4)
TEST np.zeros((pad_dim,int(features)) (48, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (2, 4)
TEST np.zeros((pad_dim,int(features)) (62, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (2, 4)
TEST np.zeros((pad_dim,int(features)) (62, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 42, 20, 8]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 5
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (42, 4)
TEST np.zeros((pad_dim,int(features)) (22, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (20, 4)
TEST np.zeros((pad_dim,int(features)) (44, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (8, 4)
TEST np.zeros((pad_dim,int(features)) (56, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 42, 6, 2]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 5
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (42, 4)
TEST np.zeros((pad_dim,int(features)) (22, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (6, 4)
TEST np.zeros((pad_dim,int(features)) (58, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (2, 4)
TEST np.zeros((pad_dim,int(features)) (62, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 36, 6]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 4
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (36, 4)
TEST np.zeros((pad_dim,int(features)) (28, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (6, 4)
TEST np.zeros((pad_dim,int(features)) (58, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 48, 14, 2]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 5
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
subjets per level= [32, 64, 44, 6, 2]
TEST contents[i].shape= (48, 4)
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
TEST np.zeros((pad_dim,int(features)) (16, 4)
Number of levels= 5
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (14, 4)
TEST np.zeros((pad_dim,int(features)) (50, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (2, 4)
TEST np.zeros((pad_dim,int(features)) (62, 4)
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 42, 12]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
Number of levels= 4
--------------------------------------------------------------------------------
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level= 64
max_n_level and len(levels[i])= 64 64
--------------------------------------------------------------------------------
TEST contents[i].shape= (44, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
TEST np.zeros((pad_dim,int(features)) (20, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
TEST np.zeros((pad_dim,int(features)) (0, 4)
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (6, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
TEST np.zeros((pad_dim,int(features)) (58, 4)
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (42, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
TEST np.zeros((pad_dim,int(features)) (22, 4)
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (2, 4)
TEST np.zeros((pad_dim,int(features)) (62, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
  0%|                                                                                          | 0/37 [00:00<?, ?it/s]
- Eval metrics : accuracy: 0.5469 ; loss: 0.7043
Epoch 17/30
  0%|                                                                                          | 0/37 [00:00<?, ?it/s]
--------------------------------------------------------------------------------
Number of levels= 5
Number of levels= 6
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
max_n_level= 64
max_n_level= 64
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (46, 4)
TEST contents[i].shape= (44, 4)
TEST np.zeros((pad_dim,int(features)) (20, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (6, 4)
TEST np.zeros((pad_dim,int(features)) (58, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (2, 4)
TEST np.zeros((pad_dim,int(features)) (62, 4)
TEST np.zeros((pad_dim,int(features)) (18, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (16, 4)
TEST np.zeros((pad_dim,int(features)) (48, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (4, 4)
TEST np.zeros((pad_dim,int(features)) (60, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (4, 4)
TEST np.zeros((pad_dim,int(features)) (60, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 36, 10, 2, 2]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 6
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (36, 4)
TEST np.zeros((pad_dim,int(features)) (28, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (10, 4)
TEST np.zeros((pad_dim,int(features)) (54, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (2, 4)
TEST np.zeros((pad_dim,int(features)) (62, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (2, 4)
TEST np.zeros((pad_dim,int(features)) (62, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 48, 8]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 4
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (48, 4)
TEST np.zeros((pad_dim,int(features)) (16, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (8, 4)
TEST np.zeros((pad_dim,int(features)) (56, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 60, 18]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 4
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (60, 4)
TEST np.zeros((pad_dim,int(features)) (4, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (18, 4)
TEST np.zeros((pad_dim,int(features)) (46, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 50, 12, 2]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 5
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (50, 4)
TEST np.zeros((pad_dim,int(features)) (14, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (12, 4)
TEST np.zeros((pad_dim,int(features)) (52, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (2, 4)
TEST np.zeros((pad_dim,int(features)) (62, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 44, 8]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 4
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (44, 4)
TEST np.zeros((pad_dim,int(features)) (20, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (8, 4)
TEST np.zeros((pad_dim,int(features)) (56, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 50, 10]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 4
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (50, 4)
TEST np.zeros((pad_dim,int(features)) (14, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (10, 4)
TEST np.zeros((pad_dim,int(features)) (54, 4)
Checkpoint Directory exists!
--------------------------------------------------------------------------------
subjets per level= [32, 64, 46, 14, 2]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 5
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
subjets per level= [32, 64, 44, 10]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 4
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level= 64
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
////////////////////////////////////////////////////////////////////////////////////////////////////
TEST contents[i].shape= (64, 4)
max_n_level and len(levels[i])= 64 64
TEST np.zeros((pad_dim,int(features)) (0, 4)
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
////////////////////////////////////////////////////////////////////////////////////////////////////
TEST contents[i].shape= (46, 4)
max_n_level and len(levels[i])= 64 64
TEST np.zeros((pad_dim,int(features)) (18, 4)
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (44, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
TEST np.zeros((pad_dim,int(features)) (20, 4)
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (14, 4)
TEST np.zeros((pad_dim,int(features)) (50, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (10, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
TEST np.zeros((pad_dim,int(features)) (54, 4)
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (2, 4)
TEST np.zeros((pad_dim,int(features)) (62, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 42, 14]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 4
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (42, 4)
TEST np.zeros((pad_dim,int(features)) (22, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (14, 4)
TEST np.zeros((pad_dim,int(features)) (50, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 44, 12]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 4
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
--------------------------------------------------------------------------------
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (44, 4)
subjets per level= [32, 64, 40, 12, 4]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 5
--------------------------------------------------------------------------------
TEST np.zeros((pad_dim,int(features)) (20, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (12, 4)
TEST np.zeros((pad_dim,int(features)) (52, 4)
max_n_level= 64
--------------------------------------------------------------------------------
//////////////////////////////////////////////////////////////////////////////////////////////--------------------------------------------------------------------------------
//////
subjets per level= [32, 64, 44, 10]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 4
max_n_level and len(levels[i])= 64 64
--------------------------------------------------------------------------------
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
max_n_level= 64
TEST np.zeros((pad_dim,int(features)) (0, 4)
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
////////////////////////////////////////////////////////////////////////////////////////////////////
TEST contents[i].shape= (40, 4)
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (24, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST contents[i].shape= (12, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
TEST np.zeros((pad_dim,int(features)) (52, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (44, 4)
TEST np.zeros((pad_dim,int(features)) (20, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
////////////////////////////////////////////////////////////////////////////////////////////////////
TEST contents[i].shape= (4, 4)
max_n_level and len(levels[i])= 64 64
TEST np.zeros((pad_dim,int(features)) (60, 4)
TEST contents[i].shape= (10, 4)
TEST np.zeros((pad_dim,int(features)) (54, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 36, 6, 2]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 5
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 44, 10, 2]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 5
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
////////////////////////////////////////////////////////////////////////////////////////////////////
TEST contents[i].shape= (36, 4)
TEST np.zeros((pad_dim,int(features)) (28, 4)
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (6, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
TEST np.zeros((pad_dim,int(features)) (58, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (2, 4)
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (62, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (44, 4)
TEST np.zeros((pad_dim,int(features)) (20, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (10, 4)
TEST np.zeros((pad_dim,int(features)) (54, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (2, 4)
TEST np.zeros((pad_dim,int(features)) (62, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 30, 4]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 4
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (30, 4)
TEST np.zeros((pad_dim,int(features)) (34, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (4, 4)
TEST np.zeros((pad_dim,int(features)) (60, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 44, 10, 4]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 5
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (44, 4)
TEST np.zeros((pad_dim,int(features)) (20, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (10, 4)
TEST np.zeros((pad_dim,int(features)) (54, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (4, 4)
TEST np.zeros((pad_dim,int(features)) (60, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 46, 10]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 4
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (46, 4)
TEST np.zeros((pad_dim,int(features)) (18, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (10, 4)
TEST np.zeros((pad_dim,int(features)) (54, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 46, 10, 2]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 5
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (46, 4)
TEST np.zeros((pad_dim,int(features)) (18, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (10, 4)
TEST np.zeros((pad_dim,int(features)) (54, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (2, 4)
TEST np.zeros((pad_dim,int(features)) (62, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 48, 12, 2]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 5
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (48, 4)
TEST np.zeros((pad_dim,int(features)) (16, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (12, 4)
TEST np.zeros((pad_dim,int(features)) (52, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (2, 4)
100%|█████████████████████████████████████████████████████████████████████| 37/37 [00:15<00:00,  2.40it/s, loss=0.668]
- Train metrics: accuracy: 0.5855 ; loss: 0.6648
  inv_fpr = interp(base_tpr, tpr, 1. / fpr)[125]██████████████████████████| 37/37 [00:15<00:00,  2.40it/s, loss=0.668]
- Eval metrics : accuracy: 0.5469 ; loss: 0.7047
  inv_fpr = interp(base_tpr, tpr, 1. / fpr)[125]██████████████████████████| 37/37 [00:15<00:00,  2.40it/s, loss=0.668]
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (56, 4)
TEST np.zeros((pad_dim,int(features)) (8, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (10, 4)
TEST np.zeros((pad_dim,int(features)) (54, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 38, 2]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 4
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (38, 4)
TEST np.zeros((pad_dim,int(features)) (26, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (2, 4)
TEST np.zeros((pad_dim,int(features)) (62, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 40, 12, 4, 2]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 6
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (40, 4)
TEST np.zeros((pad_dim,int(features)) (24, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (12, 4)
TEST np.zeros((pad_dim,int(features)) (52, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (4, 4)
TEST np.zeros((pad_dim,int(features)) (60, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (2, 4)
TEST np.zeros((pad_dim,int(features)) (62, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 38, 8]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 4
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (38, 4)
TEST np.zeros((pad_dim,int(features)) (26, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (8, 4)
TEST np.zeros((pad_dim,int(features)) (56, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 48, 4]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 4
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (48, 4)
TEST np.zeros((pad_dim,int(features)) (16, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (4, 4)
TEST np.zeros((pad_dim,int(features)) (60, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 42, 14]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 4
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (42, 4)
TEST np.zeros((pad_dim,int(features)) (22, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (14, 4)
TEST np.zeros((pad_dim,int(features)) (50, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 42, 14, 2]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 5
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (42, 4)
TEST np.zeros((pad_dim,int(features)) (22, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (14, 4)
TEST np.zeros((pad_dim,int(features)) (50, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (2, 4)
TEST np.zeros((pad_dim,int(features)) (62, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 42, 12, 2]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 5
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (42, 4)
TEST np.zeros((pad_dim,int(features)) (22, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (12, 4)
TEST np.zeros((pad_dim,int(features)) (52, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (2, 4)
TEST np.zeros((pad_dim,int(features)) (62, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 50, 14, 4]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 5
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (50, 4)
TEST np.zeros((pad_dim,int(features)) (14, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (14, 4)
TEST np.zeros((pad_dim,int(features)) (50, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (4, 4)
TEST np.zeros((pad_dim,int(features)) (60, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 44, 8, 2]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 5
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (44, 4)
TEST np.zeros((pad_dim,int(features)) (20, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (8, 4)
TEST np.zeros((pad_dim,int(features)) (56, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (2, 4)
TEST np.zeros((pad_dim,int(features)) (62, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 48, 10, 2]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 5
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (48, 4)
TEST np.zeros((pad_dim,int(features)) (16, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (10, 4)
TEST np.zeros((pad_dim,int(features)) (54, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (2, 4)
TEST np.zeros((pad_dim,int(features)) (62, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 44, 14, 4]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 5
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (44, 4)
TEST np.zeros((pad_dim,int(features)) (20, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (14, 4)
TEST np.zeros((pad_dim,int(features)) (50, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (4, 4)
TEST np.zeros((pad_dim,int(features)) (60, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 38, 12, 2]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 5
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (38, 4)
TEST np.zeros((pad_dim,int(features)) (26, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (12, 4)
TEST np.zeros((pad_dim,int(features)) (52, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (2, 4)
TEST np.zeros((pad_dim,int(features)) (62, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 44, 16, 2]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 5
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (44, 4)
TEST np.zeros((pad_dim,int(features)) (20, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (16, 4)
TEST np.zeros((pad_dim,int(features)) (48, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (2, 4)
TEST np.zeros((pad_dim,int(features)) (62, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 40, 14, 2]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 5
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (40, 4)
TEST np.zeros((pad_dim,int(features)) (24, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (14, 4)
TEST np.zeros((pad_dim,int(features)) (50, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (2, 4)
TEST np.zeros((pad_dim,int(features)) (62, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 40, 16, 2]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 5
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (40, 4)
TEST np.zeros((pad_dim,int(features)) (24, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (16, 4)
TEST np.zeros((pad_dim,int(features)) (48, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (2, 4)
TEST np.zeros((pad_dim,int(features)) (62, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 38, 14, 4]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 5
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (38, 4)
TEST np.zeros((pad_dim,int(features)) (26, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (14, 4)
TEST np.zeros((pad_dim,int(features)) (50, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (4, 4)
TEST np.zeros((pad_dim,int(features)) (60, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 40, 10]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 4
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (40, 4)
TEST np.zeros((pad_dim,int(features)) (24, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (10, 4)
TEST np.zeros((pad_dim,int(features)) (54, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 50, 12, 4]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 5
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (50, 4)
TEST np.zeros((pad_dim,int(features)) (14, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (12, 4)
TEST np.zeros((pad_dim,int(features)) (52, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (4, 4)
TEST np.zeros((pad_dim,int(features)) (60, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 52, 16, 2, 2]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 6
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (52, 4)
TEST np.zeros((pad_dim,int(features)) (12, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (16, 4)
TEST np.zeros((pad_dim,int(features)) (48, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (2, 4)
TEST np.zeros((pad_dim,int(features)) (62, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (2, 4)
TEST np.zeros((pad_dim,int(features)) (62, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 42, 20, 8]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 5
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (42, 4)
TEST np.zeros((pad_dim,int(features)) (22, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (20, 4)
TEST np.zeros((pad_dim,int(features)) (44, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (8, 4)
TEST np.zeros((pad_dim,int(features)) (56, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 42, 6, 2]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 5
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (42, 4)
TEST np.zeros((pad_dim,int(features)) (22, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (6, 4)
TEST np.zeros((pad_dim,int(features)) (58, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (2, 4)
TEST np.zeros((pad_dim,int(features)) (62, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 36, 6]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 4
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (36, 4)
TEST np.zeros((pad_dim,int(features)) (28, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (6, 4)
TEST np.zeros((pad_dim,int(features)) (58, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 48, 14, 2]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 5
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 44, 6, 2]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 5
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
max_n_level= 64
--------------------------------------------------------------------------------
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
////////////////////////////////////////////////////////////////////////////////////////////////////
TEST contents[i].shape= (32, 4)
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (48, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
TEST np.zeros((pad_dim,int(features)) (16, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (14, 4)
max_n_level and len(levels[i])= 64 64
TEST np.zeros((pad_dim,int(features)) (50, 4)
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (2, 4)
TEST np.zeros((pad_dim,int(features)) (62, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (44, 4)
TEST np.zeros((pad_dim,int(features)) (20, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (6, 4)
TEST np.zeros((pad_dim,int(features)) (58, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (2, 4)
TEST np.zeros((pad_dim,int(features)) (62, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 42, 12]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 4
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (42, 4)
TEST np.zeros((pad_dim,int(features)) (22, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (12, 4)
TEST np.zeros((pad_dim,int(features)) (52, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 44, 6, 2]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
subjets per level= [32, 64, 44, 10]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 4
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
--------------------------------------------------------------------------------
Number of levels= 5
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
max_n_level and len(levels[i])= 64 64
subjets per level= [32, 64, 46, 16, 4, 4]
TEST contents[i].shape= (44, 4)
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 6
--------------------------------------------------------------------------------
TEST np.zeros((pad_dim,int(features)) (20, 4)
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level= 64
max_n_level and len(levels[i])= 64 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (10, 4)
TEST contents[i].shape= (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
TEST np.zeros((pad_dim,int(features)) (54, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (46, 4)
TEST np.zeros((pad_dim,int(features)) (18, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (16, 4)
TEST np.zeros((pad_dim,int(features)) (48, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (4, 4)
TEST np.zeros((pad_dim,int(features)) (60, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (4, 4)
TEST np.zeros((pad_dim,int(features)) (60, 4)
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (44, 4)
TEST np.zeros((pad_dim,int(features)) (20, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (6, 4)
TEST np.zeros((pad_dim,int(features)) (58, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (2, 4)
TEST np.zeros((pad_dim,int(features)) (62, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 36, 10, 2, 2]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 6
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (36, 4)
TEST np.zeros((pad_dim,int(features)) (28, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (10, 4)
TEST np.zeros((pad_dim,int(features)) (54, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (2, 4)
TEST np.zeros((pad_dim,int(features)) (62, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (2, 4)
TEST np.zeros((pad_dim,int(features)) (62, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 48, 8]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 4
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (48, 4)
TEST np.zeros((pad_dim,int(features)) (16, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (8, 4)
TEST np.zeros((pad_dim,int(features)) (56, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 60, 18]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 4
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (60, 4)
TEST np.zeros((pad_dim,int(features)) (4, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (18, 4)
TEST np.zeros((pad_dim,int(features)) (46, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 50, 12, 2]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 5
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (50, 4)
TEST np.zeros((pad_dim,int(features)) (14, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (12, 4)
TEST np.zeros((pad_dim,int(features)) (52, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (2, 4)
TEST np.zeros((pad_dim,int(features)) (62, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 44, 8]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 4
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (44, 4)
TEST np.zeros((pad_dim,int(features)) (20, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (8, 4)
TEST np.zeros((pad_dim,int(features)) (56, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 50, 10]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 4
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (50, 4)
TEST np.zeros((pad_dim,int(features)) (14, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (10, 4)
TEST np.zeros((pad_dim,int(features)) (54, 4)
  0%|                                                                                          | 0/37 [00:00<?, ?it/s]
100%|█████████████████████████████████████████████████████████████████████| 37/37 [00:20<00:00,  1.84it/s, loss=0.666]
100%|█████████████████████████████████████████████████████████████████████| 37/37 [00:20<00:00,  1.84it/s, loss=0.666]
--------------------------------------------------------------------------------
subjets per level= [32, 64, 44, 10]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 4
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
subjets per level= [32, 64, 46, 14, 2]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 5
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
max_n_level= 64
////////////////////////////////////////////////////////////////////////////////////////////////////
--------------------------------------------------------------------------------
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
TEST np.zeros((pad_dim,int(features)) (32, 4)
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
////////////////////////////////////////////////////////////////////////////////////////////////////
TEST contents[i].shape= (64, 4)
max_n_level and len(levels[i])= 64 64
TEST np.zeros((pad_dim,int(features)) (0, 4)
TEST contents[i].shape= (44, 4)
TEST np.zeros((pad_dim,int(features)) (20, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (46, 4)
TEST np.zeros((pad_dim,int(features)) (18, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (14, 4)
TEST np.zeros((pad_dim,int(features)) (50, 4)
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
subjets per level= [32, 64, 42, 14]
TEST contents[i].shape= (2, 4)
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
TEST np.zeros((pad_dim,int(features)) (62, 4)
Number of levels= 4
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level= 64
--------------------------------------------------------------------------------
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (10, 4)
TEST np.zeros((pad_dim,int(features)) (54, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (42, 4)
TEST np.zeros((pad_dim,int(features)) (22, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (14, 4)
TEST np.zeros((pad_dim,int(features)) (50, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 44, 10]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 4
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (44, 4)
TEST np.zeros((pad_dim,int(features)) (20, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (10, 4)
TEST np.zeros((pad_dim,int(features)) (54, 4)
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
subjets per level= [32, 64, 40, 12, 4]
--------------------------------------------------------------------------------
subjets per level= [32, 64, 44, 12]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 5
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 4
--------------------------------------------------------------------------------
max_n_level= 64
max_n_level= 64
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
TEST contents[i].shape= (32, 4)
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
////////////////////////////////////////////////////////////////////////////////////////////////////
TEST contents[i].shape= (40, 4)
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (24, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (44, 4)
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (12, 4)
TEST np.zeros((pad_dim,int(features)) (20, 4)
TEST np.zeros((pad_dim,int(features)) (52, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
////////////////////////////////////////////////////////////////////////////////////////////////////
TEST contents[i].shape= (12, 4)
max_n_level and len(levels[i])= 64 64
TEST np.zeros((pad_dim,int(features)) (52, 4)
TEST contents[i].shape= (4, 4)
TEST np.zeros((pad_dim,int(features)) (60, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 44, 10, 2]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 5
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (44, 4)
TEST np.zeros((pad_dim,int(features)) (20, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (10, 4)
TEST np.zeros((pad_dim,int(features)) (54, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (2, 4)
TEST np.zeros((pad_dim,int(features)) (62, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 36, 6, 2]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 5
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (36, 4)
TEST np.zeros((pad_dim,int(features)) (28, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (6, 4)
TEST np.zeros((pad_dim,int(features)) (58, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (2, 4)
TEST np.zeros((pad_dim,int(features)) (62, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 30, 4]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 4
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (30, 4)
TEST np.zeros((pad_dim,int(features)) (34, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (4, 4)
TEST np.zeros((pad_dim,int(features)) (60, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 44, 10, 4]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 5
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (44, 4)
TEST np.zeros((pad_dim,int(features)) (20, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (10, 4)
TEST np.zeros((pad_dim,int(features)) (54, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (4, 4)
TEST np.zeros((pad_dim,int(features)) (60, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 46, 10]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 4
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (46, 4)
TEST np.zeros((pad_dim,int(features)) (18, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (10, 4)
TEST np.zeros((pad_dim,int(features)) (54, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 46, 10, 2]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 5
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (46, 4)
TEST np.zeros((pad_dim,int(features)) (18, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (10, 4)
TEST np.zeros((pad_dim,int(features)) (54, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (2, 4)
TEST np.zeros((pad_dim,int(features)) (62, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 48, 12, 2]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 5
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (48, 4)
TEST np.zeros((pad_dim,int(features)) (16, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (12, 4)
TEST np.zeros((pad_dim,int(features)) (52, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (2, 4)
TEST np.zeros((pad_dim,int(features)) (62, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 40, 12]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 4
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (40, 4)
TEST np.zeros((pad_dim,int(features)) (24, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (12, 4)
TEST np.zeros((pad_dim,int(features)) (52, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 56, 10]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 4
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (56, 4)
TEST np.zeros((pad_dim,int(features)) (8, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (10, 4)
TEST np.zeros((pad_dim,int(features)) (54, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 38, 2]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 4
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (38, 4)
TEST np.zeros((pad_dim,int(features)) (26, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (2, 4)
TEST np.zeros((pad_dim,int(features)) (62, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 40, 12, 4, 2]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 6
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (40, 4)
TEST np.zeros((pad_dim,int(features)) (24, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (12, 4)
TEST np.zeros((pad_dim,int(features)) (52, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (4, 4)
TEST np.zeros((pad_dim,int(features)) (60, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (2, 4)
TEST np.zeros((pad_dim,int(features)) (62, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 38, 8]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 4
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (38, 4)
TEST np.zeros((pad_dim,int(features)) (26, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (8, 4)
TEST np.zeros((pad_dim,int(features)) (56, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 48, 4]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 4
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (48, 4)
TEST np.zeros((pad_dim,int(features)) (16, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (4, 4)
TEST np.zeros((pad_dim,int(features)) (60, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 42, 14]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 4
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (42, 4)
TEST np.zeros((pad_dim,int(features)) (22, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (14, 4)
TEST np.zeros((pad_dim,int(features)) (50, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 42, 14, 2]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 5
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (42, 4)
TEST np.zeros((pad_dim,int(features)) (22, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (14, 4)
TEST np.zeros((pad_dim,int(features)) (50, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (2, 4)
TEST np.zeros((pad_dim,int(features)) (62, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 42, 12, 2]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 5
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (42, 4)
TEST np.zeros((pad_dim,int(features)) (22, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (12, 4)
TEST np.zeros((pad_dim,int(features)) (52, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (2, 4)
TEST np.zeros((pad_dim,int(features)) (62, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 50, 14, 4]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 5
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (50, 4)
TEST np.zeros((pad_dim,int(features)) (14, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (14, 4)
TEST np.zeros((pad_dim,int(features)) (50, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (4, 4)
TEST np.zeros((pad_dim,int(features)) (60, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 44, 8, 2]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 5
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (44, 4)
TEST np.zeros((pad_dim,int(features)) (20, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (8, 4)
TEST np.zeros((pad_dim,int(features)) (56, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (2, 4)
TEST np.zeros((pad_dim,int(features)) (62, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 48, 10, 2]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 5
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (48, 4)
TEST np.zeros((pad_dim,int(features)) (16, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (10, 4)
TEST np.zeros((pad_dim,int(features)) (54, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (2, 4)
TEST np.zeros((pad_dim,int(features)) (62, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 44, 14, 4]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 5
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (44, 4)
TEST np.zeros((pad_dim,int(features)) (20, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (14, 4)
TEST np.zeros((pad_dim,int(features)) (50, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (4, 4)
TEST np.zeros((pad_dim,int(features)) (60, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 38, 12, 2]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 5
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (38, 4)
TEST np.zeros((pad_dim,int(features)) (26, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (12, 4)
TEST np.zeros((pad_dim,int(features)) (52, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (2, 4)
TEST np.zeros((pad_dim,int(features)) (62, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 44, 16, 2]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 5
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (44, 4)
TEST np.zeros((pad_dim,int(features)) (20, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (16, 4)
TEST np.zeros((pad_dim,int(features)) (48, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (2, 4)
TEST np.zeros((pad_dim,int(features)) (62, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 40, 14, 2]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 5
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (40, 4)
TEST np.zeros((pad_dim,int(features)) (24, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (14, 4)
TEST np.zeros((pad_dim,int(features)) (50, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (2, 4)
TEST np.zeros((pad_dim,int(features)) (62, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 40, 16, 2]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 5
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (40, 4)
TEST np.zeros((pad_dim,int(features)) (24, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (16, 4)
TEST np.zeros((pad_dim,int(features)) (48, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (2, 4)
TEST np.zeros((pad_dim,int(features)) (62, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 38, 14, 4]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 5
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (38, 4)
TEST np.zeros((pad_dim,int(features)) (26, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (14, 4)
TEST np.zeros((pad_dim,int(features)) (50, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (4, 4)
TEST np.zeros((pad_dim,int(features)) (60, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 40, 10]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 4
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (40, 4)
TEST np.zeros((pad_dim,int(features)) (24, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (10, 4)
TEST np.zeros((pad_dim,int(features)) (54, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 50, 12, 4]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 5
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (50, 4)
TEST np.zeros((pad_dim,int(features)) (14, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (12, 4)
TEST np.zeros((pad_dim,int(features)) (52, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (4, 4)
TEST np.zeros((pad_dim,int(features)) (60, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 52, 16, 2, 2]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 6
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (52, 4)
TEST np.zeros((pad_dim,int(features)) (12, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (16, 4)
TEST np.zeros((pad_dim,int(features)) (48, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (2, 4)
TEST np.zeros((pad_dim,int(features)) (62, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (2, 4)
TEST np.zeros((pad_dim,int(features)) (62, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 42, 20, 8]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 5
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (42, 4)
TEST np.zeros((pad_dim,int(features)) (22, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (20, 4)
TEST np.zeros((pad_dim,int(features)) (44, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (8, 4)
TEST np.zeros((pad_dim,int(features)) (56, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 42, 6, 2]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 5
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (42, 4)
TEST np.zeros((pad_dim,int(features)) (22, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (6, 4)
TEST np.zeros((pad_dim,int(features)) (58, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (2, 4)
TEST np.zeros((pad_dim,int(features)) (62, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 36, 6]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 4
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (36, 4)
TEST np.zeros((pad_dim,int(features)) (28, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (6, 4)
  0%|                                                                                          | 0/37 [00:00<?, ?it/s]
  0%|                                                                                          | 0/37 [00:00<?, ?it/s]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
subjets per level= [32, 64, 48, 14, 2]
--------------------------------------------------------------------------------
subjets per level= [32, 64, 44, 6, 2]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 5
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 5
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
max_n_level and len(levels[i])= 64 64
TEST np.zeros((pad_dim,int(features)) (0, 4)
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (44, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST np.zeros((pad_dim,int(features)) (20, 4)
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (6, 4)
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (48, 4)
TEST np.zeros((pad_dim,int(features)) (16, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST np.zeros((pad_dim,int(features)) (58, 4)
TEST contents[i].shape= (14, 4)
TEST np.zeros((pad_dim,int(features)) (50, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
--------------------------------------------------------------------------------
TEST contents[i].shape= (2, 4)
subjets per level= [32, 64, 42, 12]
TEST np.zeros((pad_dim,int(features)) (62, 4)
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 4
max_n_level and len(levels[i])= 64 64
--------------------------------------------------------------------------------
TEST contents[i].shape= (2, 4)
TEST np.zeros((pad_dim,int(features)) (62, 4)
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (42, 4)
TEST np.zeros((pad_dim,int(features)) (22, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (12, 4)
TEST np.zeros((pad_dim,int(features)) (52, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 44, 10]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 4
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
--------------------------------------------------------------------------------
TEST np.zeros((pad_dim,int(features)) (32, 4)
subjets per level= [32, 64, 44, 6, 2]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 5
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level= 64
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
max_n_level and len(levels[i])= 64 64
////////////////////////////////////////////////////////////////////////////////////////////////////
TEST contents[i].shape= (64, 4)
subjets per level= [32, 64, 46, 16, 4, 4]
--------------------------------------------------------------------------------
max_n_level and len(levels[i])= 64 64
--------------------------------------------------------------------------------
TEST np.zeros((pad_dim,int(features)) (0, 4)
Number of levels= 6
TEST contents[i].shape= (32, 4)
--------------------------------------------------------------------------------
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
max_n_level= 64
TEST contents[i].shape= (44, 4)
--------------------------------------------------------------------------------
TEST np.zeros((pad_dim,int(features)) (20, 4)
max_n_level and len(levels[i])= 64 64
////////////////////////////////////////////////////////////////////////////////////////////////////
TEST contents[i].shape= (64, 4)
max_n_level and len(levels[i])= 64 64
////////////////////////////////////////////////////////////////////////////////////////////////////
TEST np.zeros((pad_dim,int(features)) (0, 4)
TEST contents[i].shape= (32, 4)
max_n_level and len(levels[i])= 64 64
TEST np.zeros((pad_dim,int(features)) (32, 4)
TEST contents[i].shape= (10, 4)
TEST np.zeros((pad_dim,int(features)) (54, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (44, 4)
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
TEST np.zeros((pad_dim,int(features)) (20, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
////////////////////////////////////////////////////////////////////////////////////////////////////
TEST contents[i].shape= (46, 4)
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (6, 4)
TEST np.zeros((pad_dim,int(features)) (18, 4)
TEST np.zeros((pad_dim,int(features)) (58, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
////////////////////////////////////////////////////////////////////////////////////////////////////
TEST contents[i].shape= (16, 4)
max_n_level and len(levels[i])= 64 64
TEST np.zeros((pad_dim,int(features)) (48, 4)
TEST contents[i].shape= (2, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (4, 4)
TEST np.zeros((pad_dim,int(features)) (60, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (4, 4)
TEST np.zeros((pad_dim,int(features)) (60, 4)
TEST np.zeros((pad_dim,int(features)) (62, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 36, 10, 2, 2]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 6
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (36, 4)
TEST np.zeros((pad_dim,int(features)) (28, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (10, 4)
TEST np.zeros((pad_dim,int(features)) (54, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (2, 4)
TEST np.zeros((pad_dim,int(features)) (62, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (2, 4)
TEST np.zeros((pad_dim,int(features)) (62, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 48, 8]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 4
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (48, 4)
TEST np.zeros((pad_dim,int(features)) (16, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (8, 4)
TEST np.zeros((pad_dim,int(features)) (56, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 50, 12, 2]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 5
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (50, 4)
TEST np.zeros((pad_dim,int(features)) (14, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (12, 4)
TEST np.zeros((pad_dim,int(features)) (52, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (2, 4)
TEST np.zeros((pad_dim,int(features)) (62, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 44, 8]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 4
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (44, 4)
TEST np.zeros((pad_dim,int(features)) (20, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (8, 4)
TEST np.zeros((pad_dim,int(features)) (56, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 60, 18]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 4
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (60, 4)
TEST np.zeros((pad_dim,int(features)) (4, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (18, 4)
TEST np.zeros((pad_dim,int(features)) (46, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 50, 10]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 4
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (50, 4)
TEST np.zeros((pad_dim,int(features)) (14, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (10, 4)
TEST np.zeros((pad_dim,int(features)) (54, 4)
 68%|██████████████████████████████████████████████▌                      | 25/37 [00:24<00:06,  1.78it/s, loss=0.664]
 68%|██████████████████████████████████████████████▌                      | 25/37 [00:24<00:06,  1.78it/s, loss=0.664]
--------------------------------------------------------------------------------
subjets per level= [32, 64, 42, 14]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 4
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (42, 4)
TEST np.zeros((pad_dim,int(features)) (22, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (14, 4)
TEST np.zeros((pad_dim,int(features)) (50, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 44, 10]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 4
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (44, 4)
TEST np.zeros((pad_dim,int(features)) (20, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (10, 4)
TEST np.zeros((pad_dim,int(features)) (54, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 46, 14, 2]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 5
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (46, 4)
TEST np.zeros((pad_dim,int(features)) (18, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (14, 4)
TEST np.zeros((pad_dim,int(features)) (50, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (2, 4)
TEST np.zeros((pad_dim,int(features)) (62, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 44, 10]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 4
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
subjets per level= [32, 64, 44, 12]
--------------------------------------------------------------------------------
max_n_level and len(levels[i])= 64 64
--------------------------------------------------------------------------------
Number of levels= 4
TEST contents[i].shape= (32, 4)
--------------------------------------------------------------------------------
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level= 64
max_n_level and len(levels[i])= 64 64
--------------------------------------------------------------------------------
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
TEST np.zeros((pad_dim,int(features)) (32, 4)
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (44, 4)
TEST np.zeros((pad_dim,int(features)) (20, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
////////////////////////////////////////////////////////////////////////////////////////////////////
TEST contents[i].shape= (10, 4)
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
TEST np.zeros((pad_dim,int(features)) (54, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (44, 4)
TEST np.zeros((pad_dim,int(features)) (20, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (12, 4)
--------------------------------------------------------------------------------
TEST np.zeros((pad_dim,int(features)) (52, 4)
subjets per level= [32, 64, 40, 12, 4]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 5
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (40, 4)
TEST np.zeros((pad_dim,int(features)) (24, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (12, 4)
TEST np.zeros((pad_dim,int(features)) (52, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (4, 4)
TEST np.zeros((pad_dim,int(features)) (60, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 44, 10, 2]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 5
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (44, 4)
TEST np.zeros((pad_dim,int(features)) (20, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (10, 4)
TEST np.zeros((pad_dim,int(features)) (54, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (2, 4)
TEST np.zeros((pad_dim,int(features)) (62, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 36, 6, 2]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 5
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (36, 4)
TEST np.zeros((pad_dim,int(features)) (28, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (6, 4)
TEST np.zeros((pad_dim,int(features)) (58, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (2, 4)
TEST np.zeros((pad_dim,int(features)) (62, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 30, 4]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 4
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (30, 4)
TEST np.zeros((pad_dim,int(features)) (34, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (4, 4)
TEST np.zeros((pad_dim,int(features)) (60, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 44, 10, 4]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 5
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (44, 4)
TEST np.zeros((pad_dim,int(features)) (20, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (10, 4)
TEST np.zeros((pad_dim,int(features)) (54, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (4, 4)
TEST np.zeros((pad_dim,int(features)) (60, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 46, 10]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 4
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (46, 4)
TEST np.zeros((pad_dim,int(features)) (18, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (10, 4)
TEST np.zeros((pad_dim,int(features)) (54, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 46, 10, 2]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 5
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (46, 4)
TEST np.zeros((pad_dim,int(features)) (18, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (10, 4)
TEST np.zeros((pad_dim,int(features)) (54, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (2, 4)
TEST np.zeros((pad_dim,int(features)) (62, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 48, 12, 2]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 5
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (48, 4)
TEST np.zeros((pad_dim,int(features)) (16, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (12, 4)
TEST np.zeros((pad_dim,int(features)) (52, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (2, 4)
TEST np.zeros((pad_dim,int(features)) (62, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 40, 12]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 4
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (40, 4)
TEST np.zeros((pad_dim,int(features)) (24, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (12, 4)
TEST np.zeros((pad_dim,int(features)) (52, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 56, 10]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 4
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (56, 4)
TEST np.zeros((pad_dim,int(features)) (8, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (10, 4)
TEST np.zeros((pad_dim,int(features)) (54, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 38, 2]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 4
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (38, 4)
TEST np.zeros((pad_dim,int(features)) (26, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (2, 4)
TEST np.zeros((pad_dim,int(features)) (62, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 40, 12, 4, 2]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 6
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (40, 4)
TEST np.zeros((pad_dim,int(features)) (24, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (12, 4)
TEST np.zeros((pad_dim,int(features)) (52, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (4, 4)
TEST np.zeros((pad_dim,int(features)) (60, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (2, 4)
TEST np.zeros((pad_dim,int(features)) (62, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 38, 8]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 4
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (38, 4)
TEST np.zeros((pad_dim,int(features)) (26, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (8, 4)
TEST np.zeros((pad_dim,int(features)) (56, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 48, 4]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 4
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (48, 4)
TEST np.zeros((pad_dim,int(features)) (16, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (4, 4)
TEST np.zeros((pad_dim,int(features)) (60, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 42, 14]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 4
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (42, 4)
TEST np.zeros((pad_dim,int(features)) (22, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (14, 4)
TEST np.zeros((pad_dim,int(features)) (50, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 42, 14, 2]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 5
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (42, 4)
TEST np.zeros((pad_dim,int(features)) (22, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (14, 4)
TEST np.zeros((pad_dim,int(features)) (50, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (2, 4)
TEST np.zeros((pad_dim,int(features)) (62, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 42, 12, 2]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 5
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (42, 4)
TEST np.zeros((pad_dim,int(features)) (22, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (12, 4)
TEST np.zeros((pad_dim,int(features)) (52, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (2, 4)
TEST np.zeros((pad_dim,int(features)) (62, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 50, 14, 4]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 5
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (50, 4)
TEST np.zeros((pad_dim,int(features)) (14, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (14, 4)
TEST np.zeros((pad_dim,int(features)) (50, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (4, 4)
TEST np.zeros((pad_dim,int(features)) (60, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 44, 8, 2]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 5
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (44, 4)
TEST np.zeros((pad_dim,int(features)) (20, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (8, 4)
TEST np.zeros((pad_dim,int(features)) (56, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (2, 4)
TEST np.zeros((pad_dim,int(features)) (62, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 48, 10, 2]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 5
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (48, 4)
TEST np.zeros((pad_dim,int(features)) (16, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (10, 4)
TEST np.zeros((pad_dim,int(features)) (54, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (2, 4)
TEST np.zeros((pad_dim,int(features)) (62, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 44, 14, 4]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 5
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (44, 4)
TEST np.zeros((pad_dim,int(features)) (20, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (14, 4)
TEST np.zeros((pad_dim,int(features)) (50, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (4, 4)
TEST np.zeros((pad_dim,int(features)) (60, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 38, 12, 2]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 5
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (38, 4)
TEST np.zeros((pad_dim,int(features)) (26, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (12, 4)
TEST np.zeros((pad_dim,int(features)) (52, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (2, 4)
TEST np.zeros((pad_dim,int(features)) (62, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 44, 16, 2]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 5
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (44, 4)
TEST np.zeros((pad_dim,int(features)) (20, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (16, 4)
TEST np.zeros((pad_dim,int(features)) (48, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (2, 4)
TEST np.zeros((pad_dim,int(features)) (62, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 40, 14, 2]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 5
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (40, 4)
TEST np.zeros((pad_dim,int(features)) (24, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (14, 4)
TEST np.zeros((pad_dim,int(features)) (50, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (2, 4)
TEST np.zeros((pad_dim,int(features)) (62, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 40, 16, 2]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 5
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (40, 4)
TEST np.zeros((pad_dim,int(features)) (24, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (16, 4)
TEST np.zeros((pad_dim,int(features)) (48, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (2, 4)
TEST np.zeros((pad_dim,int(features)) (62, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 38, 14, 4]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 5
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (38, 4)
TEST np.zeros((pad_dim,int(features)) (26, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (14, 4)
TEST np.zeros((pad_dim,int(features)) (50, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (4, 4)
TEST np.zeros((pad_dim,int(features)) (60, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 40, 10]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 4
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (40, 4)
TEST np.zeros((pad_dim,int(features)) (24, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (10, 4)
TEST np.zeros((pad_dim,int(features)) (54, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 50, 12, 4]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 5
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (50, 4)
TEST np.zeros((pad_dim,int(features)) (14, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (12, 4)
TEST np.zeros((pad_dim,int(features)) (52, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (4, 4)
TEST np.zeros((pad_dim,int(features)) (60, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 52, 16, 2, 2]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 6
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (52, 4)
TEST np.zeros((pad_dim,int(features)) (12, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (16, 4)
TEST np.zeros((pad_dim,int(features)) (48, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (2, 4)
TEST np.zeros((pad_dim,int(features)) (62, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (2, 4)
TEST np.zeros((pad_dim,int(features)) (62, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 42, 20, 8]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 5
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (42, 4)
TEST np.zeros((pad_dim,int(features)) (22, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (20, 4)
TEST np.zeros((pad_dim,int(features)) (44, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (8, 4)
TEST np.zeros((pad_dim,int(features)) (56, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 42, 6, 2]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 5
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (42, 4)
TEST np.zeros((pad_dim,int(features)) (22, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (6, 4)
TEST np.zeros((pad_dim,int(features)) (58, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (2, 4)
TEST np.zeros((pad_dim,int(features)) (62, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 36, 6]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 4
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (36, 4)
TEST np.zeros((pad_dim,int(features)) (28, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (6, 4)
100%|█████████████████████████████████████████████████████████████████████| 37/37 [00:24<00:00,  1.52it/s, loss=0.664]
  inv_fpr = interp(base_tpr, tpr, 1. / fpr)[125]██████████████████████████| 37/37 [00:24<00:00,  1.52it/s, loss=0.664]
  inv_fpr = interp(base_tpr, tpr, 1. / fpr)[125]██████████████████████████| 37/37 [00:24<00:00,  1.52it/s, loss=0.664]
--------------------------------------------------------------------------------
subjets per level= [32, 64, 48, 14, 2]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 5
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
--------------------------------------------------------------------------------
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
subjets per level= [32, 64, 44, 6, 2]
--------------------------------------------------------------------------------
TEST np.zeros((pad_dim,int(features)) (0, 4)
--------------------------------------------------------------------------------
Number of levels= 5
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (48, 4)
TEST np.zeros((pad_dim,int(features)) (16, 4)
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (14, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
TEST np.zeros((pad_dim,int(features)) (50, 4)
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
TEST np.zeros((pad_dim,int(features)) (32, 4)
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (2, 4)
TEST np.zeros((pad_dim,int(features)) (62, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (44, 4)
TEST np.zeros((pad_dim,int(features)) (20, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (6, 4)
TEST np.zeros((pad_dim,int(features)) (58, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
--------------------------------------------------------------------------------
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (2, 4)
subjets per level= [32, 64, 42, 12]
--------------------------------------------------------------------------------
TEST np.zeros((pad_dim,int(features)) (62, 4)
--------------------------------------------------------------------------------
Number of levels= 4
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (42, 4)
TEST np.zeros((pad_dim,int(features)) (22, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (12, 4)
TEST np.zeros((pad_dim,int(features)) (52, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 44, 10]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 4
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (44, 4)
TEST np.zeros((pad_dim,int(features)) (20, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (10, 4)
TEST np.zeros((pad_dim,int(features)) (54, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 46, 16, 4, 4]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 6
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
subjets per level= [32, 64, 44, 6, 2]
////////////////////////////////////////////////////////////////////////////////////////////////////
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 5
--------------------------------------------------------------------------------
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
max_n_level= 64
////////////////////////////////////////////////////////////////////////////////////////////////////
--------------------------------------------------------------------------------
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
TEST np.zeros((pad_dim,int(features)) (32, 4)
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (46, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
TEST np.zeros((pad_dim,int(features)) (18, 4)
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (16, 4)
TEST np.zeros((pad_dim,int(features)) (48, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (44, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
TEST np.zeros((pad_dim,int(features)) (20, 4)
max_n_level and len(levels[i])= 64 64
////////////////////////////////////////////////////////////////////////////////////////////////////
TEST contents[i].shape= (4, 4)
max_n_level and len(levels[i])= 64 64
TEST np.zeros((pad_dim,int(features)) (60, 4)
TEST contents[i].shape= (6, 4)
TEST np.zeros((pad_dim,int(features)) (58, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (4, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
TEST np.zeros((pad_dim,int(features)) (60, 4)
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (2, 4)
TEST np.zeros((pad_dim,int(features)) (62, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 36, 10, 2, 2]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 6
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (36, 4)
TEST np.zeros((pad_dim,int(features)) (28, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (10, 4)
TEST np.zeros((pad_dim,int(features)) (54, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (2, 4)
TEST np.zeros((pad_dim,int(features)) (62, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (2, 4)
TEST np.zeros((pad_dim,int(features)) (62, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 48, 8]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 4
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (48, 4)
TEST np.zeros((pad_dim,int(features)) (16, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (8, 4)
TEST np.zeros((pad_dim,int(features)) (56, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 60, 18]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 4
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (60, 4)
TEST np.zeros((pad_dim,int(features)) (4, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (18, 4)
TEST np.zeros((pad_dim,int(features)) (46, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 50, 12, 2]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 5
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (50, 4)
TEST np.zeros((pad_dim,int(features)) (14, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (12, 4)
TEST np.zeros((pad_dim,int(features)) (52, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (2, 4)
TEST np.zeros((pad_dim,int(features)) (62, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 44, 8]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 4
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (44, 4)
TEST np.zeros((pad_dim,int(features)) (20, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (8, 4)
TEST np.zeros((pad_dim,int(features)) (56, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 50, 10]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 4
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (50, 4)
TEST np.zeros((pad_dim,int(features)) (14, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (10, 4)
  0%|                                                                                          | 0/37 [00:00<?, ?it/s]
  0%|                                                                                          | 0/37 [00:00<?, ?it/s]
 30%|████████████████████▌                                                | 11/37 [00:18<00:31,  1.23s/it, loss=0.674]
 30%|████████████████████▌                                                | 11/37 [00:18<00:31,  1.23s/it, loss=0.674]
--------------------------------------------------------------------------------
subjets per level= [32, 64, 46, 14, 2]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 5
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (46, 4)
TEST np.zeros((pad_dim,int(features)) (18, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (14, 4)
TEST np.zeros((pad_dim,int(features)) (50, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 44, 10]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 4
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
--------------------------------------------------------------------------------
max_n_level and len(levels[i])= 64 64
subjets per level= [32, 64, 42, 14]
TEST contents[i].shape= (2, 4)
TEST np.zeros((pad_dim,int(features)) (62, 4)
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
max_n_level= 64
Number of levels= 4
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
//////////////////////////////////////////////////////////////////////////max_n_level= 64
--------------------------------------------------------------------------------
//////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
TEST np.zeros((pad_dim,int(features)) (0, 4)
max_n_level and len(levels[i])= 64 64
////////////////////////////////////////////////////////////////////////////////////////////////////
TEST contents[i].shape= (44, 4)
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (42, 4)
TEST np.zeros((pad_dim,int(features)) (20, 4)
TEST np.zeros((pad_dim,int(features)) (22, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
////////////////////////////////////////////////////////////////////////////////////////////////////
TEST contents[i].shape= (10, 4)
max_n_level and len(levels[i])= 64 64
TEST np.zeros((pad_dim,int(features)) (54, 4)
TEST contents[i].shape= (14, 4)
TEST np.zeros((pad_dim,int(features)) (50, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 44, 12]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 4
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
subjets per level= [32, 64, 44, 10]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 4
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
max_n_level= 64
TEST contents[i].shape= (32, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 40, 12, 4]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 5
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
///////////////////////////////////////////////////////////////////////////////////////////////TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (44, 4)
--------------------------------------------------------------------------------
TEST np.zeros((pad_dim,int(features)) (20, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (12, 4)
max_n_level and len(levels[i])= 64 64
TEST np.zeros((pad_dim,int(features)) (52, 4)
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
/////
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (44, 4)
TEST np.zeros((pad_dim,int(features)) (20, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (10, 4)
TEST np.zeros((pad_dim,int(features)) (54, 4)
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (40, 4)
TEST np.zeros((pad_dim,int(features)) (24, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (12, 4)
TEST np.zeros((pad_dim,int(features)) (52, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (4, 4)
TEST np.zeros((pad_dim,int(features)) (60, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 44, 10, 2]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 5
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (44, 4)
TEST np.zeros((pad_dim,int(features)) (20, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (10, 4)
TEST np.zeros((pad_dim,int(features)) (54, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (2, 4)
TEST np.zeros((pad_dim,int(features)) (62, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 36, 6, 2]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 5
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (36, 4)
TEST np.zeros((pad_dim,int(features)) (28, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (6, 4)
TEST np.zeros((pad_dim,int(features)) (58, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (2, 4)
TEST np.zeros((pad_dim,int(features)) (62, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 30, 4]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 4
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (30, 4)
TEST np.zeros((pad_dim,int(features)) (34, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (4, 4)
TEST np.zeros((pad_dim,int(features)) (60, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 44, 10, 4]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 5
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (44, 4)
TEST np.zeros((pad_dim,int(features)) (20, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (10, 4)
TEST np.zeros((pad_dim,int(features)) (54, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (4, 4)
TEST np.zeros((pad_dim,int(features)) (60, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 46, 10]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 4
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (46, 4)
TEST np.zeros((pad_dim,int(features)) (18, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (10, 4)
TEST np.zeros((pad_dim,int(features)) (54, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 46, 10, 2]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 5
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (46, 4)
TEST np.zeros((pad_dim,int(features)) (18, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (10, 4)
TEST np.zeros((pad_dim,int(features)) (54, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (2, 4)
TEST np.zeros((pad_dim,int(features)) (62, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 48, 12, 2]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 5
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (48, 4)
TEST np.zeros((pad_dim,int(features)) (16, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (12, 4)
TEST np.zeros((pad_dim,int(features)) (52, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (2, 4)
TEST np.zeros((pad_dim,int(features)) (62, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 40, 12]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 4
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (40, 4)
TEST np.zeros((pad_dim,int(features)) (24, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (12, 4)
TEST np.zeros((pad_dim,int(features)) (52, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 56, 10]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 4
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (56, 4)
TEST np.zeros((pad_dim,int(features)) (8, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (10, 4)
TEST np.zeros((pad_dim,int(features)) (54, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 38, 2]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 4
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (38, 4)
TEST np.zeros((pad_dim,int(features)) (26, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (2, 4)
TEST np.zeros((pad_dim,int(features)) (62, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 40, 12, 4, 2]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 6
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (40, 4)
TEST np.zeros((pad_dim,int(features)) (24, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (12, 4)
TEST np.zeros((pad_dim,int(features)) (52, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (4, 4)
TEST np.zeros((pad_dim,int(features)) (60, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (2, 4)
TEST np.zeros((pad_dim,int(features)) (62, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 38, 8]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 4
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (38, 4)
TEST np.zeros((pad_dim,int(features)) (26, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (8, 4)
TEST np.zeros((pad_dim,int(features)) (56, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 48, 4]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 4
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (48, 4)
TEST np.zeros((pad_dim,int(features)) (16, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (4, 4)
TEST np.zeros((pad_dim,int(features)) (60, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 42, 14]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 4
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (42, 4)
TEST np.zeros((pad_dim,int(features)) (22, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (14, 4)
TEST np.zeros((pad_dim,int(features)) (50, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 42, 14, 2]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 5
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (42, 4)
TEST np.zeros((pad_dim,int(features)) (22, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (14, 4)
TEST np.zeros((pad_dim,int(features)) (50, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (2, 4)
TEST np.zeros((pad_dim,int(features)) (62, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 42, 12, 2]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 5
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (42, 4)
TEST np.zeros((pad_dim,int(features)) (22, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (12, 4)
TEST np.zeros((pad_dim,int(features)) (52, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (2, 4)
TEST np.zeros((pad_dim,int(features)) (62, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 50, 14, 4]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 5
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (50, 4)
TEST np.zeros((pad_dim,int(features)) (14, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (14, 4)
TEST np.zeros((pad_dim,int(features)) (50, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (4, 4)
TEST np.zeros((pad_dim,int(features)) (60, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 44, 8, 2]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 5
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (44, 4)
TEST np.zeros((pad_dim,int(features)) (20, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (8, 4)
TEST np.zeros((pad_dim,int(features)) (56, 4)
100%|█████████████████████████████████████████████████████████████████████| 37/37 [00:19<00:00,  1.92it/s, loss=0.662]
  inv_fpr = interp(base_tpr, tpr, 1. / fpr)[125]██████████████████████████| 37/37 [00:19<00:00,  1.92it/s, loss=0.662]
  inv_fpr = interp(base_tpr, tpr, 1. / fpr)[125]██████████████████████████| 37/37 [00:19<00:00,  1.92it/s, loss=0.662]
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (16, 4)
TEST np.zeros((pad_dim,int(features)) (48, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (2, 4)
TEST np.zeros((pad_dim,int(features)) (62, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 40, 14, 2]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 5
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (40, 4)
TEST np.zeros((pad_dim,int(features)) (24, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (14, 4)
TEST np.zeros((pad_dim,int(features)) (50, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (2, 4)
TEST np.zeros((pad_dim,int(features)) (62, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 40, 16, 2]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 5
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (40, 4)
TEST np.zeros((pad_dim,int(features)) (24, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (16, 4)
TEST np.zeros((pad_dim,int(features)) (48, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (2, 4)
TEST np.zeros((pad_dim,int(features)) (62, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 38, 14, 4]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 5
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (38, 4)
TEST np.zeros((pad_dim,int(features)) (26, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (14, 4)
TEST np.zeros((pad_dim,int(features)) (50, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (4, 4)
TEST np.zeros((pad_dim,int(features)) (60, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 40, 10]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 4
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (40, 4)
TEST np.zeros((pad_dim,int(features)) (24, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (10, 4)
TEST np.zeros((pad_dim,int(features)) (54, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 50, 12, 4]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 5
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (50, 4)
TEST np.zeros((pad_dim,int(features)) (14, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (12, 4)
TEST np.zeros((pad_dim,int(features)) (52, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (4, 4)
TEST np.zeros((pad_dim,int(features)) (60, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 52, 16, 2, 2]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 6
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (52, 4)
TEST np.zeros((pad_dim,int(features)) (12, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (16, 4)
TEST np.zeros((pad_dim,int(features)) (48, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (2, 4)
TEST np.zeros((pad_dim,int(features)) (62, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (2, 4)
TEST np.zeros((pad_dim,int(features)) (62, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 42, 20, 8]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 5
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (42, 4)
TEST np.zeros((pad_dim,int(features)) (22, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (20, 4)
TEST np.zeros((pad_dim,int(features)) (44, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (8, 4)
TEST np.zeros((pad_dim,int(features)) (56, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 42, 6, 2]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 5
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (42, 4)
TEST np.zeros((pad_dim,int(features)) (22, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (6, 4)
TEST np.zeros((pad_dim,int(features)) (58, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (2, 4)
TEST np.zeros((pad_dim,int(features)) (62, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 36, 6]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 4
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (36, 4)
TEST np.zeros((pad_dim,int(features)) (28, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (6, 4)
TEST np.zeros((pad_dim,int(features)) (58, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 48, 14, 2]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 5
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (48, 4)
TEST np.zeros((pad_dim,int(features)) (16, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (14, 4)
TEST np.zeros((pad_dim,int(features)) (50, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 44, 6, 2]
////////////////////////////////////////////////////////////////////////////////////////////////////
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
max_n_level and len(levels[i])= 64 64
Number of levels= 5
--------------------------------------------------------------------------------
TEST contents[i].shape= (2, 4)
TEST np.zeros((pad_dim,int(features)) (62, 4)
max_n_level= 64
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
subjets per level= [32, 64, 42, 12]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 4
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
max_n_level= 64
--------------------------------------------------------------------------------
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (44, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST np.zeros((pad_dim,int(features)) (20, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (6, 4)
TEST np.zeros((pad_dim,int(features)) (58, 4)
TEST contents[i].shape= (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
TEST np.zeros((pad_dim,int(features)) (32, 4)
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (2, 4)
TEST np.zeros((pad_dim,int(features)) (62, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (42, 4)
TEST np.zeros((pad_dim,int(features)) (22, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (12, 4)
TEST np.zeros((pad_dim,int(features)) (52, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 44, 10]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 4
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
subjets per level= [32, 64, 46, 16, 4, 4]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 6
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST c--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
ontents[i].shape= (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
subjets per level= [32, 64, 44, 6, 2]
TEST contents[i].shape= (32, 4)
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
TEST np.zeros((pad_dim,int(features)) (32, 4)
Number of levels= 5
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (44, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST np.zeros((pad_dim,int(features)) (20, 4)
TEST contents[i].shape= (64, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (10, 4)
TEST np.zeros((pad_dim,int(features)) (54, 4)
max_n_level and len(levels[i])= 64 64
TEST np.zeros((pad_dim,int(features)) (0, 4)
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (44, 4)
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (46, 4)
TEST np.zeros((pad_dim,int(features)) (18, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
TEST np.zeros((pad_dim,int(features)) (20, 4)
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (16, 4)
TEST np.zeros((pad_dim,int(features)) (48, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (6, 4)
TEST contents[i].shape= (4, 4)
TEST np.zeros((pad_dim,int(features)) (58, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
TEST np.zeros((pad_dim,int(features)) (60, 4)
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (2, 4)
TEST np.zeros((pad_dim,int(features)) (62, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (4, 4)
TEST np.zeros((pad_dim,int(features)) (60, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 36, 10, 2, 2]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 6
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (36, 4)
TEST np.zeros((pad_dim,int(features)) (28, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (10, 4)
TEST np.zeros((pad_dim,int(features)) (54, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (2, 4)
TEST np.zeros((pad_dim,int(features)) (62, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (2, 4)
TEST np.zeros((pad_dim,int(features)) (62, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 48, 8]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 4
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (48, 4)
TEST np.zeros((pad_dim,int(features)) (16, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (8, 4)
TEST np.zeros((pad_dim,int(features)) (56, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 50, 12, 2]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 5
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (50, 4)
TEST np.zeros((pad_dim,int(features)) (14, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (12, 4)
TEST np.zeros((pad_dim,int(features)) (52, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (2, 4)
TEST np.zeros((pad_dim,int(features)) (62, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 60, 18]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 4
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (60, 4)
TEST np.zeros((pad_dim,int(features)) (4, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (18, 4)
TEST np.zeros((pad_dim,int(features)) (46, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 44, 8]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 4
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (44, 4)
TEST np.zeros((pad_dim,int(features)) (20, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (8, 4)
TEST np.zeros((pad_dim,int(features)) (56, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 50, 10]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 4
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (50, 4)
TEST np.zeros((pad_dim,int(features)) (14, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (10, 4)
TEST np.zeros((pad_dim,int(features)) (54, 4)
  0%|                                                                                          | 0/37 [00:00<?, ?it/s]
  0%|                                                                                          | 0/37 [00:00<?, ?it/s]
--------------------------------------------------------------------------------
subjets per level= [32, 64, 46, 14, 2]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 5
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 44, 10]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 4
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (46, 4)
max_n_level= 64
--------------------------------------------------------------------------------
TEST np.zeros((pad_dim,int(features)) (18, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
--------------------------------------------------------------------------------
subjets per level= [32, 64, 42, 14]
max_n_level and len(levels[i])= 64 64
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
TEST contents[i].shape= (32, 4)
Number of levels= 4
--------------------------------------------------------------------------------
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
////////////////////////////////////////////////////////////////////////////////////////////////////
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
max_n_level and len(levels[i])= 64 64
max_n_level= 64
TEST contents[i].shape= (14, 4)
--------------------------------------------------------------------------------
TEST np.zeros((pad_dim,int(features)) (50, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (44, 4)
TEST contents[i].shape= (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
TEST np.zeros((pad_dim,int(features)) (20, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (2, 4)
TEST np.zeros((pad_dim,int(features)) (62, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (10, 4)
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (54, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (42, 4)
TEST np.zeros((pad_dim,int(features)) (22, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (14, 4)
TEST np.zeros((pad_dim,int(features)) (50, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 44, 10]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 4
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (44, 4)
TEST np.zeros((pad_dim,int(features)) (20, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (10, 4)
TEST np.zeros((pad_dim,int(features)) (54, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 44, 12]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 4
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
subjets per level= [32, 64, 40, 12, 4]
max_n_level and len(levels[i])= 64 64
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
TEST contents[i].shape= (32, 4)
Number of levels= 5
--------------------------------------------------------------------------------
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
max_n_level= 64
100%|█████████████████████████████████████████████████████████████████████| 37/37 [00:21<00:00,  1.72it/s, loss=0.660]
  inv_fpr = interp(base_tpr, tpr, 1. / fpr)[125]██████████████████████████| 37/37 [00:21<00:00,  1.72it/s, loss=0.660]
  inv_fpr = interp(base_tpr, tpr, 1. / fpr)[125]██████████████████████████| 37/37 [00:21<00:00,  1.72it/s, loss=0.660]
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (4, 4)
TEST np.zeros((pad_dim,int(features)) (60, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 44, 10, 4]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 5
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (44, 4)
TEST np.zeros((pad_dim,int(features)) (20, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (10, 4)
TEST np.zeros((pad_dim,int(features)) (54, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (4, 4)
TEST np.zeros((pad_dim,int(features)) (60, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 46, 10]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 4
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (46, 4)
TEST np.zeros((pad_dim,int(features)) (18, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (10, 4)
TEST np.zeros((pad_dim,int(features)) (54, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 46, 10, 2]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 5
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (46, 4)
TEST np.zeros((pad_dim,int(features)) (18, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (10, 4)
TEST np.zeros((pad_dim,int(features)) (54, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (2, 4)
TEST np.zeros((pad_dim,int(features)) (62, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 48, 12, 2]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 5
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (48, 4)
TEST np.zeros((pad_dim,int(features)) (16, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (12, 4)
TEST np.zeros((pad_dim,int(features)) (52, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (2, 4)
TEST np.zeros((pad_dim,int(features)) (62, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 40, 12]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 4
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (40, 4)
TEST np.zeros((pad_dim,int(features)) (24, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (12, 4)
TEST np.zeros((pad_dim,int(features)) (52, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 56, 10]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 4
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (56, 4)
TEST np.zeros((pad_dim,int(features)) (8, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (10, 4)
TEST np.zeros((pad_dim,int(features)) (54, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 38, 2]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 4
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (38, 4)
TEST np.zeros((pad_dim,int(features)) (26, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (2, 4)
TEST np.zeros((pad_dim,int(features)) (62, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 40, 12, 4, 2]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 6
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (40, 4)
TEST np.zeros((pad_dim,int(features)) (24, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (12, 4)
TEST np.zeros((pad_dim,int(features)) (52, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (4, 4)
TEST np.zeros((pad_dim,int(features)) (60, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (2, 4)
TEST np.zeros((pad_dim,int(features)) (62, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 38, 8]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 4
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (38, 4)
TEST np.zeros((pad_dim,int(features)) (26, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (8, 4)
TEST np.zeros((pad_dim,int(features)) (56, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 48, 4]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 4
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (48, 4)
TEST np.zeros((pad_dim,int(features)) (16, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (4, 4)
TEST np.zeros((pad_dim,int(features)) (60, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 42, 14]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 4
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (42, 4)
TEST np.zeros((pad_dim,int(features)) (22, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (14, 4)
TEST np.zeros((pad_dim,int(features)) (50, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 42, 14, 2]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 5
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (42, 4)
TEST np.zeros((pad_dim,int(features)) (22, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (14, 4)
TEST np.zeros((pad_dim,int(features)) (50, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (2, 4)
TEST np.zeros((pad_dim,int(features)) (62, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 42, 12, 2]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 5
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (42, 4)
TEST np.zeros((pad_dim,int(features)) (22, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (12, 4)
TEST np.zeros((pad_dim,int(features)) (52, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (2, 4)
TEST np.zeros((pad_dim,int(features)) (62, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 50, 14, 4]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 5
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (50, 4)
TEST np.zeros((pad_dim,int(features)) (14, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (14, 4)
TEST np.zeros((pad_dim,int(features)) (50, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (4, 4)
TEST np.zeros((pad_dim,int(features)) (60, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 44, 8, 2]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 5
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (44, 4)
TEST np.zeros((pad_dim,int(features)) (20, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (8, 4)
TEST np.zeros((pad_dim,int(features)) (56, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (2, 4)
TEST np.zeros((pad_dim,int(features)) (62, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 48, 10, 2]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 5
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (48, 4)
TEST np.zeros((pad_dim,int(features)) (16, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (10, 4)
TEST np.zeros((pad_dim,int(features)) (54, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (2, 4)
TEST np.zeros((pad_dim,int(features)) (62, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 44, 14, 4]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 5
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (44, 4)
TEST np.zeros((pad_dim,int(features)) (20, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (14, 4)
TEST np.zeros((pad_dim,int(features)) (50, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (4, 4)
TEST np.zeros((pad_dim,int(features)) (60, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 38, 12, 2]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 5
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (38, 4)
TEST np.zeros((pad_dim,int(features)) (26, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (12, 4)
TEST np.zeros((pad_dim,int(features)) (52, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (2, 4)
TEST np.zeros((pad_dim,int(features)) (62, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 44, 16, 2]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 5
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (44, 4)
TEST np.zeros((pad_dim,int(features)) (20, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (16, 4)
TEST np.zeros((pad_dim,int(features)) (48, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (2, 4)
TEST np.zeros((pad_dim,int(features)) (62, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 40, 14, 2]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 5
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (40, 4)
TEST np.zeros((pad_dim,int(features)) (24, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (14, 4)
TEST np.zeros((pad_dim,int(features)) (50, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (2, 4)
TEST np.zeros((pad_dim,int(features)) (62, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 40, 16, 2]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 5
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (40, 4)
TEST np.zeros((pad_dim,int(features)) (24, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (16, 4)
TEST np.zeros((pad_dim,int(features)) (48, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (2, 4)
TEST np.zeros((pad_dim,int(features)) (62, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 38, 14, 4]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 5
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (38, 4)
TEST np.zeros((pad_dim,int(features)) (26, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (14, 4)
TEST np.zeros((pad_dim,int(features)) (50, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (4, 4)
TEST np.zeros((pad_dim,int(features)) (60, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 40, 10]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 4
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (40, 4)
TEST np.zeros((pad_dim,int(features)) (24, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (10, 4)
TEST np.zeros((pad_dim,int(features)) (54, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 50, 12, 4]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 5
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (50, 4)
TEST np.zeros((pad_dim,int(features)) (14, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (12, 4)
TEST np.zeros((pad_dim,int(features)) (52, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (4, 4)
TEST np.zeros((pad_dim,int(features)) (60, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 52, 16, 2, 2]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 6
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (52, 4)
TEST np.zeros((pad_dim,int(features)) (12, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (16, 4)
TEST np.zeros((pad_dim,int(features)) (48, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (2, 4)
TEST np.zeros((pad_dim,int(features)) (62, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (2, 4)
TEST np.zeros((pad_dim,int(features)) (62, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 42, 20, 8]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 5
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (42, 4)
TEST np.zeros((pad_dim,int(features)) (22, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (20, 4)
TEST np.zeros((pad_dim,int(features)) (44, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (8, 4)
TEST np.zeros((pad_dim,int(features)) (56, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 42, 6, 2]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 5
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (42, 4)
TEST np.zeros((pad_dim,int(features)) (22, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (6, 4)
TEST np.zeros((pad_dim,int(features)) (58, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (2, 4)
TEST np.zeros((pad_dim,int(features)) (62, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 36, 6]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 4
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (36, 4)
TEST np.zeros((pad_dim,int(features)) (28, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (6, 4)
TEST np.zeros((pad_dim,int(features)) (58, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 48, 14, 2]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 5
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
subjets per level= [32, 64, 44, 6, 2]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
max_n_level and len(levels[i])= 64 64
Number of levels= 5
--------------------------------------------------------------------------------
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (48, 4)
TEST np.zeros((pad_dim,int(features)) (16, 4)
max_n_level= 64
////////////////////////////////////////////////////////////////////////////////////////////////////
--------------------------------------------------------------------------------
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (14, 4)
TEST np.zeros((pad_dim,int(features)) (50, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
////////////////////////////////////////////////////////////////////////////////////////////////////
TEST contents[i].shape= (32, 4)
max_n_level and len(levels[i])= 64 64
TEST np.zeros((pad_dim,int(features)) (32, 4)
TEST contents[i].shape= (2, 4)
TEST np.zeros((pad_dim,int(features)) (62, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (44, 4)
TEST np.zeros((pad_dim,int(features)) (20, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (6, 4)
TEST np.zeros((pad_dim,int(features)) (58, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (2, 4)
TEST np.zeros((pad_dim,int(features)) (62, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 42, 12]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 4
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (42, 4)
TEST np.zeros((pad_dim,int(features)) (22, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (12, 4)
TEST np.zeros((pad_dim,int(features)) (52, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 44, 10]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 4
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
subjets per level= [32, 64, 44, 6, 2]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 5
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level= 64
max_n_level and len(levels[i])= 64 64
--------------------------------------------------------------------------------
TEST contents[i].shape= (32, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 46, 16, 4, 4]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
Number of levels= 6
--------------------------------------------------------------------------------
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
max_n_level= 64
TEST contents[i].shape= (64, 4)
--------------------------------------------------------------------------------
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (44, 4)
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (20, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST np.zeros((pad_dim,int(features)) (32, 4)
TEST contents[i].shape= (6, 4)
max_n_level and len(levels[i])= 64 64
TEST np.zeros((pad_dim,int(features)) (58, 4)
TEST contents[i].shape= (64, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (2, 4)
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
TEST np.zeros((pad_dim,int(features)) (62, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (44, 4)
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (46, 4)
TEST np.zeros((pad_dim,int(features)) (20, 4)
TEST np.zeros((pad_dim,int(features)) (18, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (16, 4)
TEST contents[i].shape= (10, 4)
TEST np.zeros((pad_dim,int(features)) (54, 4)
TEST np.zeros((pad_dim,int(features)) (48, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (4, 4)
TEST np.zeros((pad_dim,int(features)) (60, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (4, 4)
TEST np.zeros((pad_dim,int(features)) (60, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 36, 10, 2, 2]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 6
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (36, 4)
TEST np.zeros((pad_dim,int(features)) (28, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (10, 4)
TEST np.zeros((pad_dim,int(features)) (54, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (2, 4)
TEST np.zeros((pad_dim,int(features)) (62, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (2, 4)
TEST np.zeros((pad_dim,int(features)) (62, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 48, 8]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 4
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (48, 4)
TEST np.zeros((pad_dim,int(features)) (16, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (8, 4)
TEST np.zeros((pad_dim,int(features)) (56, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 60, 18]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 4
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (60, 4)
TEST np.zeros((pad_dim,int(features)) (4, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (18, 4)
TEST np.zeros((pad_dim,int(features)) (46, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 50, 12, 2]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 5
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (50, 4)
TEST np.zeros((pad_dim,int(features)) (14, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (12, 4)
TEST np.zeros((pad_dim,int(features)) (52, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (2, 4)
TEST np.zeros((pad_dim,int(features)) (62, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 44, 8]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 4
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (44, 4)
TEST np.zeros((pad_dim,int(features)) (20, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (8, 4)
TEST np.zeros((pad_dim,int(features)) (56, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 50, 10]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 4
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (50, 4)
TEST np.zeros((pad_dim,int(features)) (14, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (10, 4)
TEST np.zeros((pad_dim,int(features)) (54, 4)
  0%|                                                                                          | 0/37 [00:00<?, ?it/s]
 62%|██████████████████████████████████████████▉                          | 23/37 [00:20<00:07,  1.87it/s, loss=0.661]
 62%|██████████████████████████████████████████▉                          | 23/37 [00:20<00:07,  1.87it/s, loss=0.661]
--------------------------------------------------------------------------------
subjets per level= [32, 64, 46, 14, 2]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 5
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
subjets per level= [32, 64, 44, 10]
--------------------------------------------------------------------------------
TEST contents[i].shape= (32, 4)
--------------------------------------------------------------------------------
TEST np.zeros((pad_dim,int(features)) (32, 4)
Number of levels= 4
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (46, 4)
max_n_level= 64
--------------------------------------------------------------------------------
TEST np.zeros((pad_dim,int(features)) (18, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST contents[i].shape= (14, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
TEST np.zeros((pad_dim,int(features)) (50, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (2, 4)
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (62, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (44, 4)
TEST np.zeros((pad_dim,int(features)) (20, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (10, 4)
TEST np.zeros((pad_dim,int(features)) (54, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 42, 14]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 4
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (42, 4)
TEST np.zeros((pad_dim,int(features)) (22, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (14, 4)
TEST np.zeros((pad_dim,int(features)) (50, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 44, 12]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 4
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
//////////////////////////////////////////////////////////////////////////////////////////////////--------------------------------------------------------------------------------
subjets per level= [32, 64, 44, 10]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 4
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
//
max_n_level and len(levels[i])= 64 64
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (44, 4)
TEST contents[i].shape= (44, 4)
TEST np.zeros((pad_dim,int(features)) (20, 4)
--------------------------------------------------------------------------------
TEST np.zeros((pad_dim,int(features)) (20, 4)
subjets per level= [32, 64, 40, 12, 4]
////////////////////////////////////////////////////////////////////////////////////////////////////
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
max_n_level and len(levels[i])= 64 64
////////////////////////////////////////////////////////////////////////////////////////////////////
Number of levels= 5
--------------------------------------------------------------------------------
TEST contents[i].shape= (12, 4)
max_n_level and len(levels[i])= 64 64
TEST np.zeros((pad_dim,int(features)) (52, 4)
TEST contents[i].shape= (10, 4)
max_n_level= 64
--------------------------------------------------------------------------------
TEST np.zeros((pad_dim,int(features)) (54, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (40, 4)
TEST np.zeros((pad_dim,int(features)) (24, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (12, 4)
TEST np.zeros((pad_dim,int(features)) (52, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (4, 4)
TEST np.zeros((pad_dim,int(features)) (60, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 44, 10, 2]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 5
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (44, 4)
TEST np.zeros((pad_dim,int(features)) (20, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (10, 4)
TEST np.zeros((pad_dim,int(features)) (54, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (2, 4)
TEST np.zeros((pad_dim,int(features)) (62, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 36, 6, 2]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 5
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (36, 4)
TEST np.zeros((pad_dim,int(features)) (28, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (6, 4)
TEST np.zeros((pad_dim,int(features)) (58, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (2, 4)
TEST np.zeros((pad_dim,int(features)) (62, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 30, 4]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 4
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (30, 4)
TEST np.zeros((pad_dim,int(features)) (34, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (4, 4)
TEST np.zeros((pad_dim,int(features)) (60, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 44, 10, 4]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 5
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (44, 4)
TEST np.zeros((pad_dim,int(features)) (20, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (10, 4)
TEST np.zeros((pad_dim,int(features)) (54, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (4, 4)
TEST np.zeros((pad_dim,int(features)) (60, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 46, 10]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 4
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (46, 4)
TEST np.zeros((pad_dim,int(features)) (18, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (10, 4)
TEST np.zeros((pad_dim,int(features)) (54, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 46, 10, 2]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 5
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (46, 4)
TEST np.zeros((pad_dim,int(features)) (18, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (10, 4)
TEST np.zeros((pad_dim,int(features)) (54, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (2, 4)
TEST np.zeros((pad_dim,int(features)) (62, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 48, 12, 2]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 5
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (48, 4)
TEST np.zeros((pad_dim,int(features)) (16, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (12, 4)
TEST np.zeros((pad_dim,int(features)) (52, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (2, 4)
TEST np.zeros((pad_dim,int(features)) (62, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 40, 12]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 4
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (40, 4)
TEST np.zeros((pad_dim,int(features)) (24, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (12, 4)
TEST np.zeros((pad_dim,int(features)) (52, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 56, 10]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 4
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (56, 4)
TEST np.zeros((pad_dim,int(features)) (8, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (10, 4)
TEST np.zeros((pad_dim,int(features)) (54, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 38, 2]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 4
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (38, 4)
TEST np.zeros((pad_dim,int(features)) (26, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (2, 4)
TEST np.zeros((pad_dim,int(features)) (62, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 40, 12, 4, 2]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 6
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (40, 4)
TEST np.zeros((pad_dim,int(features)) (24, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (12, 4)
TEST np.zeros((pad_dim,int(features)) (52, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (4, 4)
TEST np.zeros((pad_dim,int(features)) (60, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (2, 4)
TEST np.zeros((pad_dim,int(features)) (62, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 38, 8]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 4
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (38, 4)
TEST np.zeros((pad_dim,int(features)) (26, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (8, 4)
TEST np.zeros((pad_dim,int(features)) (56, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 48, 4]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 4
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (48, 4)
TEST np.zeros((pad_dim,int(features)) (16, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (4, 4)
TEST np.zeros((pad_dim,int(features)) (60, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 42, 14]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 4
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (42, 4)
TEST np.zeros((pad_dim,int(features)) (22, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (14, 4)
TEST np.zeros((pad_dim,int(features)) (50, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 42, 14, 2]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 5
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (42, 4)
TEST np.zeros((pad_dim,int(features)) (22, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (14, 4)
TEST np.zeros((pad_dim,int(features)) (50, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (2, 4)
TEST np.zeros((pad_dim,int(features)) (62, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 42, 12, 2]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 5
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (42, 4)
TEST np.zeros((pad_dim,int(features)) (22, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (12, 4)
TEST np.zeros((pad_dim,int(features)) (52, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (2, 4)
100%|█████████████████████████████████████████████████████████████████████| 37/37 [00:20<00:00,  1.78it/s, loss=0.658]
Epoch 23/30 interp(base_tpr, tpr, 1. / fpr)[125]██████████████████████████| 37/37 [00:20<00:00,  1.78it/s, loss=0.658]
Epoch 23/30 interp(base_tpr, tpr, 1. / fpr)[125]██████████████████████████| 37/37 [00:20<00:00,  1.78it/s, loss=0.658]
--------------------------------------------------------------------------------
subjets per level= [32, 64, 44, 8, 2]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 5
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (44, 4)
TEST np.zeros((pad_dim,int(features)) (20, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (8, 4)
TEST np.zeros((pad_dim,int(features)) (56, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (2, 4)
TEST np.zeros((pad_dim,int(features)) (62, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 48, 10, 2]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 5
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (48, 4)
TEST np.zeros((pad_dim,int(features)) (16, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (10, 4)
TEST np.zeros((pad_dim,int(features)) (54, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (2, 4)
TEST np.zeros((pad_dim,int(features)) (62, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 44, 14, 4]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 5
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (44, 4)
TEST np.zeros((pad_dim,int(features)) (20, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (14, 4)
TEST np.zeros((pad_dim,int(features)) (50, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (4, 4)
TEST np.zeros((pad_dim,int(features)) (60, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 38, 12, 2]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 5
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (38, 4)
TEST np.zeros((pad_dim,int(features)) (26, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (12, 4)
TEST np.zeros((pad_dim,int(features)) (52, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (2, 4)
TEST np.zeros((pad_dim,int(features)) (62, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 44, 16, 2]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 5
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (44, 4)
TEST np.zeros((pad_dim,int(features)) (20, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (16, 4)
TEST np.zeros((pad_dim,int(features)) (48, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (2, 4)
TEST np.zeros((pad_dim,int(features)) (62, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 40, 14, 2]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 5
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (40, 4)
TEST np.zeros((pad_dim,int(features)) (24, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (14, 4)
TEST np.zeros((pad_dim,int(features)) (50, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (2, 4)
TEST np.zeros((pad_dim,int(features)) (62, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 40, 16, 2]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 5
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (40, 4)
TEST np.zeros((pad_dim,int(features)) (24, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (16, 4)
TEST np.zeros((pad_dim,int(features)) (48, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (2, 4)
TEST np.zeros((pad_dim,int(features)) (62, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 38, 14, 4]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 5
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (38, 4)
TEST np.zeros((pad_dim,int(features)) (26, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (14, 4)
TEST np.zeros((pad_dim,int(features)) (50, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (4, 4)
TEST np.zeros((pad_dim,int(features)) (60, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 40, 10]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 4
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (40, 4)
TEST np.zeros((pad_dim,int(features)) (24, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (10, 4)
TEST np.zeros((pad_dim,int(features)) (54, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 50, 12, 4]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 5
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (50, 4)
TEST np.zeros((pad_dim,int(features)) (14, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (12, 4)
TEST np.zeros((pad_dim,int(features)) (52, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (4, 4)
TEST np.zeros((pad_dim,int(features)) (60, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 52, 16, 2, 2]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 6
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (52, 4)
TEST np.zeros((pad_dim,int(features)) (12, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (16, 4)
TEST np.zeros((pad_dim,int(features)) (48, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (2, 4)
TEST np.zeros((pad_dim,int(features)) (62, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (2, 4)
TEST np.zeros((pad_dim,int(features)) (62, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 42, 20, 8]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 5
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (42, 4)
TEST np.zeros((pad_dim,int(features)) (22, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (20, 4)
TEST np.zeros((pad_dim,int(features)) (44, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (8, 4)
TEST np.zeros((pad_dim,int(features)) (56, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 42, 6, 2]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 5
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (42, 4)
TEST np.zeros((pad_dim,int(features)) (22, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (6, 4)
TEST np.zeros((pad_dim,int(features)) (58, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (2, 4)
TEST np.zeros((pad_dim,int(features)) (62, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 36, 6]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 4
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (36, 4)
TEST np.zeros((pad_dim,int(features)) (28, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (6, 4)
TEST np.zeros((pad_dim,int(features)) (58, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 48, 14, 2]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 5
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (48, 4)
TEST np.zeros((pad_dim,int(features)) (16, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (14, 4)
TEST np.zeros((pad_dim,int(features)) (50, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (2, 4)
TEST np.zeros((pad_dim,int(features)) (62, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 44, 6, 2]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 5
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
--------------------------------------------------------------------------------
subjets per level= [32, 64, 42, 12]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 4
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
TEST contents[i].shape= (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST np.zeros((pad_dim,int(features)) (32, 4)
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (42, 4)
TEST np.zeros((pad_dim,int(features)) (22, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (44, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST np.zeros((pad_dim,int(features)) (20, 4)
TEST contents[i].shape= (12, 4)
TEST np.zeros((pad_dim,int(features)) (52, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (6, 4)
TEST np.zeros((pad_dim,int(features)) (58, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (2, 4)
TEST np.zeros((pad_dim,int(features)) (62, 4)
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
subjets per level= [32, 64, 46, 16, 4, 4]
subjets per level= [32, 64, 44, 6, 2]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 6
Number of levels= 5
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
max_n_level= 64
max_n_level= 64
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (46, 4)
TEST contents[i].shape= (44, 4)
TEST np.zeros((pad_dim,int(features)) (18, 4)
TEST np.zeros((pad_dim,int(features)) (20, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (16, 4)
TEST np.zeros((pad_dim,int(features)) (48, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////////////////////////
--------------------------------------------------------------------------------
max_n_level and len(levels[i])= 64 64
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (6, 4)
TEST contents[i].shape= (4, 4)
subjets per level= [32, 64, 44, 10]
--------------------------------------------------------------------------------
TEST np.zeros((pad_dim,int(features)) (60, 4)
--------------------------------------------------------------------------------
TEST np.zeros((pad_dim,int(features)) (58, 4)
Number of levels= 4
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level= 64
TEST contents[i].shape= (4, 4)
max_n_level and len(levels[i])= 64 64
--------------------------------------------------------------------------------
TEST contents[i].shape= (2, 4)
TEST np.zeros((pad_dim,int(features)) (60, 4)
TEST np.zeros((pad_dim,int(features)) (62, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (44, 4)
TEST np.zeros((pad_dim,int(features)) (20, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (10, 4)
TEST np.zeros((pad_dim,int(features)) (54, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 36, 10, 2, 2]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 6
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (36, 4)
TEST np.zeros((pad_dim,int(features)) (28, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (10, 4)
TEST np.zeros((pad_dim,int(features)) (54, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (2, 4)
TEST np.zeros((pad_dim,int(features)) (62, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (2, 4)
TEST np.zeros((pad_dim,int(features)) (62, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 48, 8]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 4
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (48, 4)
TEST np.zeros((pad_dim,int(features)) (16, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (8, 4)
TEST np.zeros((pad_dim,int(features)) (56, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 60, 18]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 4
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (60, 4)
TEST np.zeros((pad_dim,int(features)) (4, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (18, 4)
TEST np.zeros((pad_dim,int(features)) (46, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 50, 12, 2]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 5
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (50, 4)
TEST np.zeros((pad_dim,int(features)) (14, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (12, 4)
TEST np.zeros((pad_dim,int(features)) (52, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (2, 4)
TEST np.zeros((pad_dim,int(features)) (62, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 44, 8]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 4
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (44, 4)
TEST np.zeros((pad_dim,int(features)) (20, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (8, 4)
TEST np.zeros((pad_dim,int(features)) (56, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 50, 10]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 4
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (50, 4)
TEST np.zeros((pad_dim,int(features)) (14, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (10, 4)
TEST np.zeros((pad_dim,int(features)) (54, 4)
Checkpoint Directory exists!
Epoch 23/30 interp(base_tpr, tpr, 1. / fpr)[125]██████████████████████████| 37/37 [00:20<00:00,  1.78it/s, loss=0.658]
--------------------------------------------------------------------------------
subjets per level= [32, 64, 46, 14, 2]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 5
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
--------------------------------------------------------------------------------
max_n_level and len(levels[i])= 64 64
subjets per level= [32, 64, 44, 10]
TEST contents[i].shape= (46, 4)
--------------------------------------------------------------------------------
TEST np.zeros((pad_dim,int(features)) (18, 4)
--------------------------------------------------------------------------------
Number of levels= 4
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (14, 4)
TEST np.zeros((pad_dim,int(features)) (50, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level= 64
max_n_level and len(levels[i])= 64 64
--------------------------------------------------------------------------------
TEST contents[i].shape= (2, 4)
TEST np.zeros((pad_dim,int(features)) (62, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 42, 14]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 4
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
max_n_level= 64
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
--------------------------------------------------------------------------------
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (44, 4)
max_n_level and len(levels[i])= 64 64
TEST np.zeros((pad_dim,int(features)) (20, 4)
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (10, 4)
TEST np.zeros((pad_dim,int(features)) (54, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (42, 4)
TEST np.zeros((pad_dim,int(features)) (22, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (14, 4)
TEST np.zeros((pad_dim,int(features)) (50, 4)
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
subjets per level= [32, 64, 40, 12, 4]
--------------------------------------------------------------------------------
subjets per level= [32, 64, 44, 10]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 5
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 4
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
subjets per level= [32, 64, 44, 12]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 4
--------------------------------------------------------------------------------
max_n_level= 64
max_n_level= 64
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
max_n_level and len(levels[i])= 64 64
max_n_level= 64
--------------------------------------------------------------------------------
TEST contents[i].shape= (32, 4)
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
TEST np.zeros((pad_dim,int(features)) (32, 4)
max_n_level and len(levels[i])= 64 64
////////////////////////////////////////////////////////////////////////////////////////////////////
TEST contents[i].shape= (64, 4)
max_n_level and len(levels[i])= 64 64
TEST np.zeros((pad_dim,int(features)) (0, 4)
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (44, 4)
TEST contents[i].shape= (40, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
TEST np.zeros((pad_dim,int(features)) (20, 4)
TEST np.zeros((pad_dim,int(features)) (24, 4)
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (44, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////////////////////////
TEST np.zeros((pad_dim,int(features)) (20, 4)
max_n_level and len(levels[i])= 64 64
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (12, 4)
TEST contents[i].shape= (10, 4)
TEST np.zeros((pad_dim,int(features)) (52, 4)
TEST np.zeros((pad_dim,int(features)) (54, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (4, 4)
TEST np.zeros((pad_dim,int(features)) (60, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (12, 4)
TEST np.zeros((pad_dim,int(features)) (52, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 44, 10, 2]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 5
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (44, 4)
TEST np.zeros((pad_dim,int(features)) (20, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (10, 4)
TEST np.zeros((pad_dim,int(features)) (54, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (2, 4)
TEST np.zeros((pad_dim,int(features)) (62, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 36, 6, 2]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 5
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (36, 4)
TEST np.zeros((pad_dim,int(features)) (28, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (6, 4)
TEST np.zeros((pad_dim,int(features)) (58, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (2, 4)
TEST np.zeros((pad_dim,int(features)) (62, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 30, 4]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 4
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (30, 4)
TEST np.zeros((pad_dim,int(features)) (34, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (4, 4)
TEST np.zeros((pad_dim,int(features)) (60, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 44, 10, 4]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 5
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (44, 4)
TEST np.zeros((pad_dim,int(features)) (20, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (10, 4)
TEST np.zeros((pad_dim,int(features)) (54, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (4, 4)
TEST np.zeros((pad_dim,int(features)) (60, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 46, 10]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 4
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (46, 4)
TEST np.zeros((pad_dim,int(features)) (18, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (10, 4)
TEST np.zeros((pad_dim,int(features)) (54, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 46, 10, 2]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 5
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (46, 4)
TEST np.zeros((pad_dim,int(features)) (18, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (10, 4)
TEST np.zeros((pad_dim,int(features)) (54, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (2, 4)
TEST np.zeros((pad_dim,int(features)) (62, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 48, 12, 2]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 5
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (48, 4)
TEST np.zeros((pad_dim,int(features)) (16, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (12, 4)
TEST np.zeros((pad_dim,int(features)) (52, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (2, 4)
TEST np.zeros((pad_dim,int(features)) (62, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 40, 12]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 4
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (40, 4)
TEST np.zeros((pad_dim,int(features)) (24, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (12, 4)
TEST np.zeros((pad_dim,int(features)) (52, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 56, 10]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 4
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (56, 4)
TEST np.zeros((pad_dim,int(features)) (8, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (10, 4)
TEST np.zeros((pad_dim,int(features)) (54, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 38, 2]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 4
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (38, 4)
TEST np.zeros((pad_dim,int(features)) (26, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (2, 4)
TEST np.zeros((pad_dim,int(features)) (62, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 40, 12, 4, 2]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 6
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (40, 4)
TEST np.zeros((pad_dim,int(features)) (24, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (12, 4)
TEST np.zeros((pad_dim,int(features)) (52, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (4, 4)
TEST np.zeros((pad_dim,int(features)) (60, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (2, 4)
TEST np.zeros((pad_dim,int(features)) (62, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 38, 8]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 4
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (38, 4)
TEST np.zeros((pad_dim,int(features)) (26, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (8, 4)
TEST np.zeros((pad_dim,int(features)) (56, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 48, 4]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 4
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (48, 4)
TEST np.zeros((pad_dim,int(features)) (16, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (4, 4)
TEST np.zeros((pad_dim,int(features)) (60, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 42, 14]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 4
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (42, 4)
TEST np.zeros((pad_dim,int(features)) (22, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (14, 4)
TEST np.zeros((pad_dim,int(features)) (50, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 42, 14, 2]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 5
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (42, 4)
TEST np.zeros((pad_dim,int(features)) (22, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (14, 4)
TEST np.zeros((pad_dim,int(features)) (50, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (2, 4)
TEST np.zeros((pad_dim,int(features)) (62, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 42, 12, 2]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 5
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (42, 4)
TEST np.zeros((pad_dim,int(features)) (22, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (12, 4)
TEST np.zeros((pad_dim,int(features)) (52, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (2, 4)
TEST np.zeros((pad_dim,int(features)) (62, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 50, 14, 4]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 5
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (50, 4)
TEST np.zeros((pad_dim,int(features)) (14, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (14, 4)
TEST np.zeros((pad_dim,int(features)) (50, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (4, 4)
TEST np.zeros((pad_dim,int(features)) (60, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 44, 8, 2]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 5
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (44, 4)
TEST np.zeros((pad_dim,int(features)) (20, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (8, 4)
TEST np.zeros((pad_dim,int(features)) (56, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (2, 4)
TEST np.zeros((pad_dim,int(features)) (62, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 48, 10, 2]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 5
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (48, 4)
TEST np.zeros((pad_dim,int(features)) (16, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (10, 4)
TEST np.zeros((pad_dim,int(features)) (54, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (2, 4)
TEST np.zeros((pad_dim,int(features)) (62, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 44, 14, 4]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 5
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (44, 4)
TEST np.zeros((pad_dim,int(features)) (20, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (14, 4)
TEST np.zeros((pad_dim,int(features)) (50, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (4, 4)
TEST np.zeros((pad_dim,int(features)) (60, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 38, 12, 2]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 5
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (38, 4)
TEST np.zeros((pad_dim,int(features)) (26, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (12, 4)
TEST np.zeros((pad_dim,int(features)) (52, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (2, 4)
TEST np.zeros((pad_dim,int(features)) (62, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 44, 16, 2]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 5
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (44, 4)
TEST np.zeros((pad_dim,int(features)) (20, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (16, 4)
TEST np.zeros((pad_dim,int(features)) (48, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (2, 4)
TEST np.zeros((pad_dim,int(features)) (62, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 40, 14, 2]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 5
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (40, 4)
TEST np.zeros((pad_dim,int(features)) (24, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (14, 4)
TEST np.zeros((pad_dim,int(features)) (50, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (2, 4)
TEST np.zeros((pad_dim,int(features)) (62, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 40, 16, 2]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 5
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (40, 4)
TEST np.zeros((pad_dim,int(features)) (24, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (16, 4)
TEST np.zeros((pad_dim,int(features)) (48, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (2, 4)
TEST np.zeros((pad_dim,int(features)) (62, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 38, 14, 4]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 5
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (38, 4)
TEST np.zeros((pad_dim,int(features)) (26, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (14, 4)
TEST np.zeros((pad_dim,int(features)) (50, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (4, 4)
TEST np.zeros((pad_dim,int(features)) (60, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 40, 10]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 4
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (40, 4)
TEST np.zeros((pad_dim,int(features)) (24, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (10, 4)
TEST np.zeros((pad_dim,int(features)) (54, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 50, 12, 4]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 5
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (50, 4)
TEST np.zeros((pad_dim,int(features)) (14, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (12, 4)
TEST np.zeros((pad_dim,int(features)) (52, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (4, 4)
TEST np.zeros((pad_dim,int(features)) (60, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 52, 16, 2, 2]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 6
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (52, 4)
TEST np.zeros((pad_dim,int(features)) (12, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (16, 4)
TEST np.zeros((pad_dim,int(features)) (48, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (2, 4)
TEST np.zeros((pad_dim,int(features)) (62, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (2, 4)
TEST np.zeros((pad_dim,int(features)) (62, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 42, 20, 8]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 5
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (42, 4)
TEST np.zeros((pad_dim,int(features)) (22, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (20, 4)
TEST np.zeros((pad_dim,int(features)) (44, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (8, 4)
TEST np.zeros((pad_dim,int(features)) (56, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 42, 6, 2]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 5
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (42, 4)
TEST np.zeros((pad_dim,int(features)) (22, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (6, 4)
TEST np.zeros((pad_dim,int(features)) (58, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (2, 4)
TEST np.zeros((pad_dim,int(features)) (62, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 36, 6]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 4
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (36, 4)
TEST np.zeros((pad_dim,int(features)) (28, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (6, 4)
TEST np.zeros((pad_dim,int(features)) (58, 4)
Epoch 23/30 interp(base_tpr, tpr, 1. / fpr)[125]██████████████████████████| 37/37 [00:20<00:00,  1.78it/s, loss=0.658]
--------------------------------------------------------------------------------
subjets per level= [32, 64, 48, 14, 2]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 5
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (48, 4)
TEST np.zeros((pad_dim,int(features)) (16, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (14, 4)
TEST np.zeros((pad_dim,int(features)) (50, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (2, 4)
TEST np.zeros((pad_dim,int(features)) (62, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 44, 6, 2]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 5
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
subjets per level= [32, 64, 42, 12]
--------------------------------------------------------------------------------
TEST contents[i].shape= (64, 4)
--------------------------------------------------------------------------------
Number of levels= 4
TEST np.zeros((pad_dim,int(features)) (0, 4)
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (44, 4)
TEST np.zeros((pad_dim,int(features)) (20, 4)
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (6, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
TEST np.zeros((pad_dim,int(features)) (58, 4)
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
TEST np.zeros((pad_dim,int(features)) (0, 4)
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (2, 4)
TEST np.zeros((pad_dim,int(features)) (62, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (42, 4)
TEST np.zeros((pad_dim,int(features)) (22, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (12, 4)
TEST np.zeros((pad_dim,int(features)) (52, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 46, 16, 4, 4]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 6
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (46, 4)
TEST np.zeros((pad_dim,int(features)) (18, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (16, 4)
TEST np.zeros((pad_dim,int(features)) (48, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (4, 4)
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
subjets per level= [32, 64, 44, 6, 2]
subjets per level= [32, 64, 44, 10]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
TEST np.zeros((pad_dim,int(features)) (60, 4)
Number of levels= 4
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 5
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (4, 4)
TEST np.zeros((pad_dim,int(features)) (60, 4)
max_n_level= 64
--------------------------------------------------------------------------------
max_n_level= 64
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
--------------------------------------------------------------------------------
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (44, 4)
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (20, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
TEST np.zeros((pad_dim,int(features)) (32, 4)
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (10, 4)
TEST np.zeros((pad_dim,int(features)) (54, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (44, 4)
TEST np.zeros((pad_dim,int(features)) (20, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (6, 4)
TEST np.zeros((pad_dim,int(features)) (58, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (2, 4)
TEST np.zeros((pad_dim,int(features)) (62, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 36, 10, 2, 2]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 6
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (36, 4)
TEST np.zeros((pad_dim,int(features)) (28, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (10, 4)
TEST np.zeros((pad_dim,int(features)) (54, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (2, 4)
TEST np.zeros((pad_dim,int(features)) (62, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (2, 4)
TEST np.zeros((pad_dim,int(features)) (62, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 48, 8]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 4
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (48, 4)
TEST np.zeros((pad_dim,int(features)) (16, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (8, 4)
TEST np.zeros((pad_dim,int(features)) (56, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 60, 18]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 4
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (60, 4)
TEST np.zeros((pad_dim,int(features)) (4, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (18, 4)
TEST np.zeros((pad_dim,int(features)) (46, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 50, 12, 2]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 5
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (50, 4)
TEST np.zeros((pad_dim,int(features)) (14, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (12, 4)
TEST np.zeros((pad_dim,int(features)) (52, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (2, 4)
TEST np.zeros((pad_dim,int(features)) (62, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 44, 8]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 4
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (44, 4)
TEST np.zeros((pad_dim,int(features)) (20, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (8, 4)
TEST np.zeros((pad_dim,int(features)) (56, 4)
--------------------------------------------------------------------------------
subjets per level= [32, 64, 50, 10]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Number of levels= 4
--------------------------------------------------------------------------------
max_n_level= 64
--------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (32, 4)
TEST np.zeros((pad_dim,int(features)) (32, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (64, 4)
TEST np.zeros((pad_dim,int(features)) (0, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (50, 4)
TEST np.zeros((pad_dim,int(features)) (14, 4)
////////////////////////////////////////////////////////////////////////////////////////////////////
max_n_level and len(levels[i])= 64 64
TEST contents[i].shape= (10, 4)
- Found new best bg rejection = 4.534883720930233untered in true_divide███| 37/37 [00:20<00:00,  1.78it/s, loss=0.658]
- Found new best bg rejection = 4.534883720930233untered in true_divide███| 37/37 [00:20<00:00,  1.78it/s, loss=0.658]
